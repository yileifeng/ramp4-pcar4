import{i as F}from"./CIMResourceManager-DQKwAa29.js";import{a as G,u as T,h as q}from"./UpdateTracking2D-qn-s-3FX.js";import{y as A}from"./OverrideHelper-DQksD6mk.js";import{T as S,R as D}from"./rasterizingUtils-B-P1M3ri.js";import{V as z}from"./utils-Piv4JJl1.js";import"./imageUtils-C_fUUBhQ.js";import"./preload-helper-ExcqyqRp.js";import"./main-asQ7SttR.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-CYyXKDHx.js";import"./memoryEstimations-COo-dz1M.js";import"./GeometryUtils-B2yqqyoj.js";import"./enums-CD-fX3vU.js";import"./defaultCIMValues-BZQdnlbk.js";import"./definitions-CPtb4TQS.js";import"./Tile-3ZPXJ-cN.js";import"./common-DQOJ18NT.js";import"./TileKey-tjz0o95w.js";import"./vec2-maR1OrZI.js";import"./Queue-B7j4i-p3.js";import"./ReactiveMap-CzqLFZz5.js";import"./signal-DOJnbrFR.js";import"./quickselect-QQC62dOK.js";import"./Query-D7n22axe.js";import"./Field-BLAoQZ_0.js";import"./fieldType-DNTeE9NS.js";import"./TimeExtent-tqAWy-Dv.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./Utils-CvnY2ddj.js";import"./enums-Dk3osxpS.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./UpdatingHandles-gi6cfx1S.js";import"./colorUtils-unU6Ikhg.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./quantizationUtils-DF8Sg9eJ.js";import"./floatRGBA-Dmu5dBAP.js";const L=96/72;class _t{constructor(m){this._spatialReference=m,this._imageDataCanvas=null,this._cimResourceManager=new F}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(m,h,a,M,I,n,c,l,g,x){if(!m)return null;const{data:y}=m;if(!y||y.type!=="CIMSymbolReference"||!y.symbol)return null;const{symbol:v}=y;n||(n=z(v));const s=await A.resolveSymbolOverrides(y,h,this._spatialReference,I,n,c,l),w=this._cimResourceManager,f=[];G.fetchResources(s,w,f),G.fetchFonts(s,w,f),f.length>0&&await Promise.all(f);const{width:e,height:r}=a;let b=k(n,e,r,M,x);const t=G.getEnvelope(s,b,w);if(!t)return null;t.x===1/0&&(t.x=e+2),t.y===1/0&&(t.y=-r/2),t.width===-1/0&&(t.width=e),t.height===-1/0&&(t.height=r);let p=1,_=0,C=0;switch(v.type){case"CIMPointSymbol":case"CIMTextSymbol":{let i=1;t.width>e&&(i=e/t.width);let o=1;t.height>r&&(o=r/t.height),M==="preview"&&(t.width<e&&(i=e/t.width),t.height<r&&(o=r/t.height)),p=Math.min(i,o),_=t.x+t.width/2,C=t.y+t.height/2}break;case"CIMLineSymbol":if(x){C=t.y+t.height/2,_=t.x+t.width/2;const i=t.width-e,o=t.height-r;b={paths:S(b.paths,{xmin:-1*t.width/2+i,xmax:t.width/2-i,ymin:-1*t.height/2+o,ymax:t.height/2-o,width:t.width-2*i,height:t.height-2*o})}}else{(g||t.height>r)&&(p=r/t.height),C=t.y+t.height/2;const i=t.x*p+e/2,o=(t.x+t.width)*p+e/2,{paths:R}=b;R[0][0][0]-=i/p,R[0][2][0]-=(o-e)/p}break;case"CIMPolygonSymbol":if(x){C=t.y+t.height/2,_=t.x+t.width/2;const i=t.width-e,o=t.height-r;b={paths:S(b.rings,{xmin:-1*t.width/2+i,xmax:t.width/2-i,ymin:-1*t.height/2+o,ymax:t.height/2-o,width:t.width-2*i,height:t.height-2*o})}}else{_=t.x+t.width/2,C=t.y+t.height/2;const i=t.x*p+e/2,o=(t.x+t.width)*p+e/2,R=t.y*p+r/2,P=(t.y+t.height)*p+r/2,{rings:d}=b;i<0&&(d[0][0][0]-=i,d[0][3][0]-=i,d[0][4][0]-=i),R<0&&(d[0][0][1]+=R,d[0][1][1]+=R,d[0][4][1]+=R),o>e&&(d[0][1][0]-=o-e,d[0][2][0]-=o-e),P>r&&(d[0][2][1]+=P-r,d[0][3][1]+=P-r)}}const E={type:"cim",data:{type:"CIMSymbolReference",symbol:s}};return this.rasterize(E,e,r,_,C,p,n,1,b)}rasterize(m,h,a,M,I,n,c,l=0,g=null,x=window.devicePixelRatio||1){const{data:y}=m;if(!y||y.type!=="CIMSymbolReference"||!y.symbol)return null;const{symbol:v}=y,s=this._canvas,w=x*L;s.width=h*w,s.height=a*w,c||(c=z(v)),g||(g=k(c,h,a,"legend")),s.width+=2*l,s.height+=2*l;const f=s.getContext("2d",{willReadFrequently:!0}),e=q.createIdentity();return e.translate(-M,-I),e.scale(n*w,-n*w),e.translate(h*w/2+l,a*w/2+l),f.clearRect(0,0,s.width,s.height),new T(f,this._cimResourceManager,e,!0).drawSymbol(v,g),f.getImageData(0,0,s.width,s.height)}}function O(u,m,h,a){return m==="esriGeometryPolygon"?{rings:D(S(u.rings,{xmin:0,ymin:0,xmax:h,ymax:a,width:h,height:a}),-1*h/2,-1*a/2)}:m==="esriGeometryPolyline"?{paths:D(S(u.paths,{xmin:0,ymin:0,xmax:h,ymax:a,width:h,height:a}),-1*h/2,-1*a/2)}:null}function k(u,m,h,a,M){const n=-m/2+1,c=m/2-1,l=h/2-1,g=-h/2+1;if(M&&(u==="esriGeometryPolygon"||u==="esriGeometryPolyline")){const x=O(M,u,m,h);if(x)return x}switch(u){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[n,0],[0,0],[c,0]]]};default:return a==="legend"?{rings:[[[n,l],[c,0],[c,g],[n,g],[n,l]]]}:{rings:[[[n,l],[c,l],[c,g],[n,g],[n,l]]]}}}export{_t as CIMSymbolRasterizer};
