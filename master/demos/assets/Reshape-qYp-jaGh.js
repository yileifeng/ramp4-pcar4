import{B as l,D as m,N as A,fx as j,aO as b,dq as N,aJ as L,fA as B,bE as w,dM as x,c1 as X,V as S,gL as Y,aP as q,di as J,U as E,gM as K,aS as Q,ap as k,gu as O,b6 as I,gN as W,b0 as tt,eb as G,n as et,s as it}from"./main-asQ7SttR.js";import ot from"./GraphicsLayer-CZo360Kr.js";import{l as st}from"./ViewingMode-HRfKv6NR.js";import{d as rt}from"./SnappingVisualizer2D-Cp391arL.js";import{i as nt}from"./drawUtils-CHsksDu5.js";import{p as pt,j as at}from"./GraphicMover-BdmA0XuA.js";import{e as ht}from"./RouteLayerInteraction-DmbnMhUE.js";import{h as T}from"./quantityUtils-B6HSL2rj.js";import{r as ct,G as lt,c as P,m as mt,a as dt,F as vt,R as yt,O as _t}from"./automaticLengthMeasurementUtils-BE4jpUja.js";import{i as ut,p as gt}from"./SelectedVertexTooltipInfo-BNFoikOn.js";import{i as ft}from"./TranslateTooltipInfo-D3n4Uv5T.js";import{u as U,P as xt,E as Gt,e as bt}from"./SnappingContext-BsSJ5w8n.js";import{h as Vt}from"./settings-DG8IlWY-.js";import{_ as wt}from"./MapView-CdXdWR5g.js";import{l as z,m as Mt}from"./hitTestSelectUtils-CCoI2aa5.js";import"./preload-helper-ExcqyqRp.js";import"./GraphicsCollection-Cks0A0Ve.js";import"./Layer-Bx8UpsMJ.js";import"./TimeExtent-tqAWy-Dv.js";import"./BlendLayer-DQc1-4op.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-id0_mGIh.js";import"./parser-Bpna5qKq.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BjwS19gr.js";import"./common-DQOJ18NT.js";import"./ScaleRangeLayer-59UbR5Hw.js";import"./ElevationInfo-C-a3Y-El.js";import"./lengthUtils-GoFDlaqZ.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./enums-CD-fX3vU.js";import"./HighlightDefaults-D0LIiYIH.js";import"./layerViewUtils-BMRueLxd.js";import"./featureUtils-BcTX_nBt.js";import"./intl-D5myeBIL.js";import"./utils-B34IjRvs.js";import"./timeZoneUtils-CfTu0PZq.js";import"./GraphicManipulator-Cyo23Lhi.js";import"./vec32-BzCy6cr7.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";import"./projectPointToVector-CbyHCjYt.js";import"./elevationInfoUtils-Cb-uJoCx.js";import"./drapedUtils-BHJ2Ckw0.js";import"./UpdatingHandles-gi6cfx1S.js";import"./Stop-pORK5fNb.js";import"./networkEnums-BhJmnK1i.js";import"./projectVectorToVector-VmpAJgQc.js";import"./MeshTransform-D2rUQYB0.js";import"./mat4f64-Dk4dwAN8.js";import"./quat-sVWee8SJ.js";import"./mat3f64-q3fE-ZOt.js";import"./quatf64-aQ5IuZRd.js";import"./vec42-CKs01hkn.js";import"./axisAngleDegrees-B02ZyS5J.js";import"./meshVertexSpaceUtils-DhVTAb0c.js";import"./MeshLocalVertexSpace-Dk8C03Rj.js";import"./themeUtils-D3elnwh6.js";import"./uuid-Cl5lrJ4c.js";import"./memoize-DsJmrG76.js";import"./unitFormatUtils-Dsg7E7mQ.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-BtCZr1qb.js";import"./spatialReferenceEllipsoidUtils-Bq6Bg_Dl.js";import"./geodesicLengthMeasurementUtils-DWI1XB7C.js";import"./geometryEngine-CVDxMhql.js";import"./geometryEngineBase-8g0RzW7z.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-BabTFx4N.js";import"./geodesicUtils-DUEAC0ng.js";import"./PointSnappingHint-dI5J2D4I.js";import"./earcut-Lltz9D9k.js";import"./plane-RIh6ulrU.js";import"./vec4f64-o2zAXfmz.js";import"./triangle-C4BV5fZD.js";import"./sphere-DET7VZHS.js";import"./mat3-CruJiiUv.js";import"./lineSegment-BNFfqofa.js";import"./CollectionFlattener-C2HA7kkf.js";import"./workers-BJlMhhTk.js";import"./Queue-B7j4i-p3.js";import"./TileInfo-DFofX128.js";import"./TileKey-DZd6gJy7.js";import"./signal-DOJnbrFR.js";import"./Map-BQqiVqnv.js";import"./Basemap-CwXISLRi.js";import"./loadAll-9Cvy7tjC.js";import"./PortalItem-Nq3zGykG.js";import"./writeUtils-BnGVzhQw.js";import"./TablesMixin-I_JAQrAJ.js";import"./HeightModelInfo-B7gpIaa-.js";import"./ReactiveMap-CzqLFZz5.js";import"./Query-D7n22axe.js";import"./Field-BLAoQZ_0.js";import"./fieldType-DNTeE9NS.js";import"./Tile-3ZPXJ-cN.js";import"./TileKey-tjz0o95w.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CQip1v0x.js";import"./normalizeUtilsCommon-B9hLdSv-.js";import"./utils-CO4HUuqg.js";import"./utils-CLKe2jGG.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CssyMp54.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DGW9aO8e.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-C_fUUBhQ.js";import"./capabilities-Du2wdNlQ.js";import"./Version-CCEYPWOm.js";import"./ColorBackground-CkNanFjv.js";let f=class extends ct{constructor(t){super(t),this.type="translate-vertex",this.distance=T,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=T,this.elevation=null,this.area=null,this.totalLength=null}};l([m()],f.prototype,"type",void 0),l([m()],f.prototype,"distance",void 0),l([m()],f.prototype,"elevation",void 0),l([m()],f.prototype,"area",void 0),l([m()],f.prototype,"totalLength",void 0),f=l([A("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],f);function St(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new ut(e),selectedVertex:new gt(e),translateGraphic:new ft(e),translateVertices:new f(e)}}function Et(t,e){function i(){const s=e(),n=s.sketchOptions.tooltips.effectiveEnabled?s.activeTooltipInfo:null;return{...s,activeTooltipInfo:n}}let o=!1;function r(s){o||(o=!0,s(),o=!1)}return j([b(()=>{const s=i();return{context:s,geometry:s.graphic?.geometry,vertexGeometry:s.selectedVertex?.geometry}},({context:s})=>{r(()=>{It(s),t.info=s.activeTooltipInfo})},N),b(()=>{const s=i(),{activeTooltipInfo:n}=s;if(n&&"key"in n)return{context:s,key:n.key}},(s,n)=>{s&&n&&s.key!==n.key&&r(()=>C(s.context))},L),lt(t,{onBeforePaste:()=>{o=!0},onAfterPaste:()=>{C(i()),o=!1}})])}function It(t){const e=t.activeTooltipInfo;if(e){switch(e?.type){case"move-point":return Tt(e,t);case"selected-vertex":return kt(e,t)}e.sketchOptions=t.sketchOptions}}function Tt(t,{graphic:e}){D(t,e,e?.geometry)}function kt(t,{graphic:e,selectedVertex:i}){D(t,e,i?.geometry);const o=e?.geometry;switch(o?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=U(o);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=P(o),t.area.visible=!1}}function D(t,e,i){e&&i?.type==="point"&&(t.setLocationFromPoint(i),t.elevation.actual=dt(i),t.elevation.visible=!!e.geometry?.hasZ,t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function C(t){function e(s,n){const p=n?.geometry;if(!p||p.type!=="point")return;const{dx:c,dy:a,dz:h}=vt(s,p);if(c===0&&a===0&&h===0)return;const{x:v,y:_,z:u,m:g,spatialReference:V}=p,M=new w({x:v+c,y:_+a,z:u!=null?u+h:void 0,m:g,spatialReference:V});t.updateGeometry(n,M,p,c,a)}const{activeTooltipInfo:i,graphic:o,selectedVertex:r}=t;switch(i?.type){case"move-point":return e(i,o);case"selected-vertex":return e(i,r)}}function Ot(t,e,i){t.clear(),F(t,e,i)}function Ct(t,e,i,o){t.clear(),i?.type==="polygon"?t.area=U(i):i?.type==="polyline"&&(t.totalLength=P(i)),F(t,e,o)}function F(t,e,i){if(!i)return;const{x:o,y:r}=i.origin,s=e.toMap(i),n=e.toMap(B(o,r)),p=mt(n,s);t.distance=p??T}class Ht{constructor(e,i,o){this.graphic=e,this.mover=i,this.selected=o,this.type="reshape-start"}}class $t{constructor(e,i,o){this.graphic=e,this.mover=i,this.selected=o,this.type="reshape"}}class Rt{constructor(e,i,o){this.graphic=e,this.mover=i,this.selected=o,this.type="reshape-stop"}}class At{constructor(e,i,o){this.mover=e,this.dx=i,this.dy=o,this.type="move-start"}}class Lt{constructor(e,i,o){this.mover=e,this.dx=i,this.dy=o,this.type="move"}}class Pt{constructor(e,i,o){this.mover=e,this.dx=i,this.dy=o,this.type="move-stop"}}class Ut{constructor(e){this.added=e,this.type="vertex-select"}}class zt{constructor(e){this.removed=e,this.type="vertex-deselect"}}class Dt{constructor(e,i,o,r){this.added=e,this.graphic=i,this.oldGraphic=o,this.vertices=r,this.type="vertex-add"}}class Ft{constructor(e,i,o,r){this.removed=e,this.graphic=i,this.oldGraphic=o,this.vertices=r,this.type="vertex-remove"}}const y=Vt.reshapeGraphics,Zt={vertices:{default:new x({style:"circle",size:y.vertex.size,color:y.vertex.color,outline:{color:y.vertex.outlineColor,width:1}}),hover:new x({style:"circle",size:y.vertex.hoverSize,color:y.vertex.hoverColor,outline:{color:y.vertex.hoverOutlineColor,width:1}}),selected:new x({style:"circle",size:y.selected.size,color:y.selected.color,outline:{color:y.selected.outlineColor,width:1}})},midpoints:{default:new x({style:"circle",size:y.midpoint.size,color:y.midpoint.color,outline:{color:y.midpoint.outlineColor,width:1}}),hover:new x({style:"circle",size:y.midpoint.size,color:y.midpoint.color,outline:{color:y.midpoint.outlineColor,width:1}})}};let d=class extends X.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new S,this.midpointSymbol=new x({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new S,this.snappingManager=null,this.symbols=Zt,this.sketchOptions=new z,this.type="reshape",this.vertexGraphics=new S,this.view=null}initialize(){const t=this.view;this._highlightHelper=new pt({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=Y(()=>this.graphic?.geometry,e=>{if(!e)return;const i=new Set(this.selectedVertices.map(a=>a.attributes?.pointIndex));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(a=>i.has(a.attributes.pointIndex)).forEach(a=>this._addToSelection(a));const{enableMovement:o,_mover:r,graphic:s,midpointGraphics:n,vertexGraphics:p}=this,c=p.concat(n).items;o&&c.push(s),r?.set("graphics",c)},L),this.tooltip=yt(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=St(this.sketchOptions),this.addHandles([q(()=>t?.ready,()=>{const{layer:e,view:i}=this;ht(i,e),this.addHandles(i.on("key-down",o=>this._keyDownHandler(o),wt.TOOL))},{once:!0,initial:!0}),b(()=>this.graphic,()=>this.refresh()),b(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),b(()=>this.enableMidpoints,()=>this.refresh()),Et(this.tooltip,()=>this._tooltipsContext),b(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),J),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this.tooltip=E(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??xt(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){return{sketchOptions:this.sketchOptions,activeTooltipInfo:this.activeTooltipInfo,graphic:this.graphic,selectedVertex:this._selectedVertex,updateGeometry:(t,e,i,o,r)=>{this._setUpGeometryHelper();const s=t===this.graphic;if(s?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(t),this._syncGeometryAfterVertexMove(t,e,o,r,!0),s){const{view:p}=this,c=p.toScreen(i),a=p.toScreen(e),h=(a?.x??0)-(c?.x??0),v=(a?.y??0)-(c?.y??0);this._emitMoveEvent(h,v),this._emitMoveStopEvent(h,v)}else this._emitReshapeEvent(t),this._emitReshapeStopEvent(t);this._editGeometryOperations=E(this._editGeometryOperations)}}}set highlightsEnabled(t){this._highlightHelper?.removeAll(),this._set("highlightsEnabled",t),this._setUpHighlights()}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||t?.geometry==null)return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&K(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(t==null||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new Q({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Gt.fromGeometry(e,st.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new ot({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;k(i),this._snappingContext=new bt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new rt(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=E(this._editGeometryOperations),this._snappingTask=O(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(t!=null&&(t.type==="polyline"||t.type==="polygon")){const e=H(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,o=[];return t?.forEach((r,s)=>{r.forEach((n,p)=>{o.push(new I({geometry:this._coordinateHelper.arrayToPoint(n),symbol:i?.vertices?.default,attributes:{...e,pathIndex:s,pointIndex:p}}))})}),o}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i}=this,o=[];for(let r=0;r<t.length;r++){const s=t[r];for(let n=0;n<s.length;n++){const p=(n+1)%s.length;if(this.graphic.geometry?.type==="polyline"&&p===0)continue;const c=s[n],a=s[p],h=this._getMidpoint(c,a);o.push(new I({geometry:h,symbol:i.midpoints.default,attributes:{...e,pathIndex:r,pointIndexStart:n,pointIndexEnd:p}}))}}return o}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const e of this.vertexGraphics)this._isSelected(e)?e.symbol=this.symbols.vertices.selected:this._hoverGraphic===e?e.symbol=this.symbols.vertices.hover:e.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const o=[];for(let r=0;r<e.length;r++){if(i===r)continue;const s=e[i],n=e[r];s.x===n.x&&s.y===n.y&&o.push(r)}t[i].attributes.relatedGraphicIndices=o}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:o,view:r}=this,s=o.concat(i).items;t&&s.push(e),this._mover=new at({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:s,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick?.(t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const i=this.graphic.clone(),o=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,o)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:o}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:o}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:o}=t;if(o===this.graphic){const{geometry:r}=o;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(r!=null&&r.type==="point"&&this._onHandleMove(o,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}if(!this.selectedVertices.includes(o)){if(this._clearSelection(),this._isMidpoint(o)){const r=this.graphic.clone(),s=this._createVertexFromMidpoint(o);this._emitVertexAddEvent([o],r,s)}this._addToSelection(o)}this._setUpOperation(t),this._emitReshapeStartEvent(o),this._onHandleMove(o,e,i,t,()=>{this._updateTooltip(o,t.viewEvent),this._emitReshapeEvent(o)})}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:o,graphic:r}=t;e.totalDx+=i,e.totalDy+=o;const{operationType:s}=e,{geometry:n}=r;if(n!=null){if(s!=="move")this._onHandleMove(r,i,o,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if(n.type==="point")this._onHandleMove(r,i,o,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,o)});else if(n.type==="polyline"||n.type==="polygon"){const p=H(n);this._updateVertexGraphicLocations(p),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,o)}}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:o,graphic:r}=t,{operationType:s}=e;e.totalDx+=i,e.totalDy+=o,this._onHandleMove(r,i,o,t,()=>s==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:o,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[o][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:o,pointIndexEnd:r}=e.attributes,s=t[i];e.geometry=this._getMidpoint(s[o],s[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,o=i.arrayToVector(t),r=i.arrayToVector(e),s=i.toXYZ(o),n=i.toXYZ(r),[p,c,a]=W(s,n),h=i.hasM()?0:void 0;return new w({x:p,y:c,z:a,m:h,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=$(t);return k(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,o,r){O(this._snappingTask);const s=this._snappingContext;if(!s)return;const n=t.geometry,p=o.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!p){const c=this.snappingManager;this._stagedVertex=c.update({point:n,context:s}),this._syncGeometryAfterVertexMove(t,new w(this._stagedVertex),e,i,p),r(),this._snappingTask=tt(async a=>{const h=await c.snap({point:n,context:s,signal:a});h.valid&&(this._stagedVertex=h.apply(),this._syncGeometryAfterVertexMove(t,new w(this._stagedVertex),e,i,p),r())})}else{const c=this._stagedVertex!=null?new w(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,c,e,i,p),r()}}_syncGeometryAfterVertexMove(t,e,i,o,r=!1){const s=this._editGeometryOperations?.data.geometry;if(s)if(s.type==="point")t.geometry=e;else if(s.type==="mesh")t.geometry=s.centerAt(e);else{const{_coordinateHelper:n}=this,[p,c]=$(t);let a=G(s);const h=a[p].length-1,v=n.pointToArray(e);a[p][c]=v,s.type==="polygon"&&(c===0?a[p][h]=v:c===h&&(a[p][0]=v)),this._isVertex(t)&&(a=this._moveRelatedCoordinates(a,t,v),a=this._moveSelectedHandleCoordinates(a,t,i,o,s.type==="polygon"),this._updateMidpointGraphicLocations(a)),this._updateGraphicGeometry(s.clone());const _=n.pointToVector(e),u=this._getVertexFromEditGeometry(t),g=n.getZ(_),V=_[0]-u.pos[0],M=_[1]-u.pos[1],Z=g!=null?g-u.pos[2]:0;this._editGeometryOperations?.moveVertices([u],V,M,Z),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:o}=e.attributes;for(const r of o){const s=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:p}=s.attributes;t[n][p]=i,s.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,o,r){for(const s of this.selectedVertices)if(s!==e){const{pathIndex:n,pointIndex:p,relatedGraphicIndices:c}=s.attributes,a=nt(s.geometry,i,o,this.view),h=G(a),v=t[n].length-1;t[n][p]=h,s.geometry=a,r&&(p===0?t[n][v]=h:p===v&&(t[n][0]=h));for(const _ of c){const u=this.vertexGraphics.at(_),{pathIndex:g,pointIndex:V}=u.attributes;t[g][V]=h,u.geometry=a}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,o=i.geometry;if(o==null||o.type!=="polygon"&&o.type!=="polyline")return[];const r=o.clone(),s=[],{pathIndex:n,pointIndexStart:p,pointIndexEnd:c}=t.attributes,a=G(t.geometry),h=c===0?p+1:c,v=G(r);return v[n].splice(h,0,a),t.attributes={...e,pathIndex:n,pointIndex:h,relatedGraphicIndices:[]},s.push({coordinates:v[n][h],componentIndex:n,vertexIndex:h}),this._updateGraphicGeometry(r),s}_addToSelection(t){const e=R(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,o=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=o,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){this._activeOperationInfo==null&&_t(t,this.tooltip)||Mt.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(e==null||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),o=e.clone();let r=G(o);const s=[],n=R(t);for(const p of n){const{x:c,y:a}=p.geometry;for(let h=0;h<r.length;h++){const v=r[h];for(let _=0;_<v.length;_++){const[u,g]=v[_];c===u&&a===g&&(s.push({coordinates:r[h][_],componentIndex:h,vertexIndex:_}),r[h].splice(Number(_),1))}}}if(o.type==="polygon")r=r.filter(p=>{if(p.length<2)return!1;const[c,a]=p[0],[h,v]=p[p.length-1];return(p.length!==2||c!==h||a!==v)&&(c===h&&a===v||p.push(p[0]),!0)}),o.rings=r;else{for(const p of r)p.length===1&&r.splice(r.indexOf(p),1);o.paths=r}this._updateGraphicGeometry(o),this.refresh(),this._emitVertexRemoveEvent(n,i,s)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:o,view:r,tooltipInfos:s}=this,n=o?.geometry;n?.type==="point"?i=s.movePoint:this._selectedVertex?i=s.selectedVertex:t===this.graphic?(i=s.translateGraphic,Ot(i,r,e)):t&&this.selectedVertices.length>1&&(i=s.translateVertices,Ct(i,r,n,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=t,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(t,e){const i=new At(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(t,e){const i=new Lt(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(t,e){if(t==null||e==null){const o=this._activeOperationInfo;if(!o)return;t=o.totalDx,e=o.totalDy}const i=new Pt(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(t){const e=new Ht(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),this.callbacks.onReshapeStart?.(e)}_emitReshapeEvent(t){const e=new $t(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),this.callbacks.onReshape?.(e)}_emitReshapeStopEvent(t){const e=new Rt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),this.callbacks.onReshapeStop?.(e)}_emitSelectEvent(t){const e=new Ut(t);this.emit("select",e),this.callbacks.onVertexSelect?.(e)}_emitDeselectEvent(t){const e=new zt(t);this.emit("deselect",e),this.callbacks.onVertexDeselect?.(e)}_emitVertexAddEvent(t,e,i){const o=new Dt(t,this.graphic,e,i);this.emit("vertex-add",o),this.callbacks.onVertexAdd?.(o)}_emitVertexRemoveEvent(t,e,i){const o=new Ft(t,this.graphic,e,i);this.emit("vertex-remove",o),this.callbacks.onVertexRemove?.(o)}_logGeometryTypeError(){et.getLogger(this).error(new it("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function H(t){const e=G(t.clone());if(t.type==="polygon")for(const i of e){const o=i[i.length-1];i[0][0]===o[0]&&i[0][1]===o[1]&&i.length>2&&i.pop()}return e}function $({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}function R(t){return t instanceof I?[t]:[...t]}l([m()],d.prototype,"_activeOperationInfo",void 0),l([m()],d.prototype,"_coordinateHelper",null),l([m()],d.prototype,"_editGeometryOperations",void 0),l([m()],d.prototype,"tooltip",void 0),l([m()],d.prototype,"tooltipInfos",void 0),l([m()],d.prototype,"activeTooltipInfo",void 0),l([m()],d.prototype,"_selectedVertex",null),l([m()],d.prototype,"_tooltipsContext",null),l([m()],d.prototype,"callbacks",void 0),l([m()],d.prototype,"enableMidpoints",void 0),l([m()],d.prototype,"enableMovement",void 0),l([m()],d.prototype,"enableVertices",void 0),l([m()],d.prototype,"graphic",void 0),l([m({value:!0})],d.prototype,"highlightsEnabled",null),l([m()],d.prototype,"layer",void 0),l([m({readOnly:!0})],d.prototype,"midpointGraphics",void 0),l([m()],d.prototype,"midpointSymbol",void 0),l([m({readOnly:!0})],d.prototype,"selectedVertices",void 0),l([m()],d.prototype,"snappingManager",void 0),l([m({readOnly:!0})],d.prototype,"state",null),l([m()],d.prototype,"symbols",void 0),l([m({type:z})],d.prototype,"sketchOptions",void 0),l([m({readOnly:!0})],d.prototype,"type",void 0),l([m({readOnly:!0})],d.prototype,"vertexGraphics",void 0),l([m()],d.prototype,"view",void 0),d=l([A("esri.views.draw.support.Reshape")],d);const Ji=d;export{Ji as default};
