import{aH as n,aZ as r,J as s,B as o,D as i,N as d}from"./main-asQ7SttR.js";const t=new n({esriRelCardinalityOneToOne:"one-to-one",esriRelCardinalityOneToMany:"one-to-many",esriRelCardinalityManyToMany:"many-to-many"}),a=new n({esriRelRoleOrigin:"origin",esriRelRoleDestination:"destination"});let e=class extends r.ClonableMixin(s){constructor(l){super(l),this.cardinality=null,this.catalogId=null,this.composite=null,this.id=null,this.keyField=null,this.keyFieldInRelationshipTable=null,this.name=null,this.relatedTableId=null,this.relationshipTableId=null,this.role=null}};o([i({json:{read:t.read,write:t.write}})],e.prototype,"cardinality",void 0),o([i({json:{name:"catalogID"}})],e.prototype,"catalogId",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"composite",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"id",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"keyField",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"keyFieldInRelationshipTable",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"name",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"relatedTableId",void 0),o([i({json:{read:!0,write:!0}})],e.prototype,"relationshipTableId",void 0),o([i({json:{read:a.read,write:a.write}})],e.prototype,"role",void 0),e=o([d("esri.layers.support.Relationship")],e);const y=e;export{y as p};
