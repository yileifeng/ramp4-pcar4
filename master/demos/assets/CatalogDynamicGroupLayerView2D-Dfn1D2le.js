import{B as i,D as a,N as f,V,e7 as b,fx as F,a9 as U,eS as x,n as _,bC as w}from"./main-asQ7SttR.js";import{S as H,y as I}from"./LayerView-DQSUDZhf.js";import"./preload-helper-ExcqyqRp.js";import"./Container-CkIb2PRY.js";import"./MapView-CdXdWR5g.js";import"./Cyclical-BtCZr1qb.js";import"./CollectionFlattener-C2HA7kkf.js";import"./workers-BJlMhhTk.js";import"./Queue-B7j4i-p3.js";import"./intl-D5myeBIL.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";import"./TileInfo-DFofX128.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-D3elnwh6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-gi6cfx1S.js";import"./signal-DOJnbrFR.js";import"./Map-BQqiVqnv.js";import"./Basemap-CwXISLRi.js";import"./loadAll-9Cvy7tjC.js";import"./PortalItem-Nq3zGykG.js";import"./writeUtils-BnGVzhQw.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BjwS19gr.js";import"./common-DQOJ18NT.js";import"./TablesMixin-I_JAQrAJ.js";import"./Layer-Bx8UpsMJ.js";import"./TimeExtent-tqAWy-Dv.js";import"./GraphicsCollection-Cks0A0Ve.js";import"./HeightModelInfo-B7gpIaa-.js";import"./timeZoneUtils-CfTu0PZq.js";import"./ReactiveMap-CzqLFZz5.js";import"./Query-D7n22axe.js";import"./Field-BLAoQZ_0.js";import"./fieldType-DNTeE9NS.js";import"./HighlightDefaults-D0LIiYIH.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-3ZPXJ-cN.js";import"./TileKey-tjz0o95w.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CQip1v0x.js";import"./normalizeUtilsCommon-B9hLdSv-.js";import"./utils-CO4HUuqg.js";import"./utils-CLKe2jGG.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CssyMp54.js";import"./vec32-BzCy6cr7.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DGW9aO8e.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-C_fUUBhQ.js";import"./capabilities-Du2wdNlQ.js";import"./Version-CCEYPWOm.js";import"./ColorBackground-CkNanFjv.js";import"./parser-Bpna5qKq.js";import"./layerViewUtils-BMRueLxd.js";const y=Symbol(),O=n=>{let e=class extends n{constructor(){super(...arguments),this.layerViews=new V,this._debouncedUpdate=b(async()=>{const{layer:r,parent:s}=this,o=s?.footprintLayerView;let p=[];const m=this._createQuery();if(m&&o){const{features:u}=await o.queryFeatures(m);this.suspended||(p=u.map(h=>r.acquireLayer(h)))}this.removeHandles(y),this.addHandles(p,y)})}get creatingLayerViews(){return this.view?.layerViewManager.isCreatingLayerViewsForLayer(this.layer)??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(r=>r.updating)}enableLayerUpdates(){return F([this._updatingHandles.addWhen(()=>this.parent?.footprintLayerView?.dataUpdating===!1,()=>this.updateLayers()),this._updatingHandles.add(()=>[this.layer.maximumVisibleSublayers,this.layer.parent?.orderBy,this.parent?.footprintLayerView?.filter,this.parent?.footprintLayerView?.timeExtent,this.suspended],()=>this.updateLayers()),U(()=>this.removeHandles(y))])}updateLayers(){this.suspended?this.removeHandles(y):this._updatingHandles.addPromise(x(this._debouncedUpdate()).catch(r=>{_.getLogger(this).error(r)}))}_createQuery(){const r=this.parent?.footprintLayerView,s=this.layer?.parent;if(!r||!s||s.destroyed)return null;const{layer:{maximumVisibleSublayers:o},view:{scale:p}}=this;if(!o)return null;const{itemTypeField:m,itemSourceField:u,itemNameField:h,minScaleField:c,maxScaleField:L,objectIdField:v,orderBy:S}=s,$=w(`${c} IS NULL OR ${p} <= ${c} OR ${c} = 0`,`${L} IS NULL OR ${p} >= ${L}`),d=S?.find(l=>l.field&&!l.valueExpression),t=r.createQuery();if(t.returnGeometry=!1,t.num=o,t.outFields=[v,u,h],t.where=w(t.where,$),this.unsupportedItemTypes!=null){const l=`${m} NOT IN (${this.unsupportedItemTypes.map(C=>`'${C}'`)})`;t.where=w(t.where,l)}return d?.field&&(t.orderByFields=[`${d.field} ${d.order==="descending"?"DESC":"ASC"}`],t.outFields.push(d.field)),t}};return i([a({readOnly:!0})],e.prototype,"creatingLayerViews",null),i([a()],e.prototype,"layer",void 0),i([a()],e.prototype,"layerViews",void 0),i([a({readOnly:!0})],e.prototype,"unsupportedItemTypes",void 0),i([a()],e.prototype,"parent",void 0),i([a({readOnly:!0})],e.prototype,"isUpdating",null),e=i([f("esri.views.layers.CatalogDynamicGroupLayerView")],e),e};let g=class extends O(H(I)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new V}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(n){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((n,e)=>this.container.addChildAt(n.container,e))}};g=i([f("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],g);const Qe=g;export{Qe as default};
