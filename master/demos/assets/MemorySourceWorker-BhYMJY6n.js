import{s as I,cm as M,au as A,av as Z,aV as b,cl as v,ai as Q}from"./main-asQ7SttR.js";import{n as O,r as C,o as $}from"./featureConversionUtils-pNtCHoNi.js";import{t as k,n as B}from"./objectIdUtils-BmFjqQA3.js";import{u as P}from"./executeQueryForSnapping-C7CYHm1z.js";import{f as G}from"./FeatureStore-OMQPlh-S.js";import{x as E,j as _}from"./queryUtils-Couy4cqn.js";import{L}from"./QueryEngine-pdhAoID6.js";import{a as W,u as z,l as U}from"./clientSideDefaults-C8pjUAkf.js";import{E as H,p as g,g as T,f as j,h as w,S as N}from"./sourceUtils-D_557RaY.js";import{Z as D}from"./FieldsIndex-DW-5YYve.js";import{i as V}from"./fieldType-DNTeE9NS.js";import"./preload-helper-ExcqyqRp.js";import"./OptimizedFeature-CYyXKDHx.js";import"./memoryEstimations-COo-dz1M.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./normalizeUtils-CQip1v0x.js";import"./normalizeUtilsCommon-B9hLdSv-.js";import"./utils-CO4HUuqg.js";import"./utils-CLKe2jGG.js";import"./timeSupport-CQoEV3z3.js";import"./BoundsStore-BjSBXzKN.js";import"./PooledRBush-CpnlERjP.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-DVjgb7HE.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-r_J0nv_k.js";import"./LRUCache-D1fsA-w6.js";import"./MemCache-DE3T9NBz.js";import"./WhereClause-Bsz5dHey.js";import"./TimeOnly-BOSrAlqL.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./TimeExtent-tqAWy-Dv.js";import"./quantizationUtils-DF8Sg9eJ.js";import"./utils-D5L6k3Uo.js";import"./heatmapUtils-OBh9qWh9.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./utils-B34IjRvs.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BjwS19gr.js";import"./intl-D5myeBIL.js";import"./timeZoneUtils-CfTu0PZq.js";import"./utils-7lSE2VeG.js";import"./ClassBreaksDefinition-CPFW_uod.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-C4gUWlgN.js";import"./NormalizationBinParametersMixin-DMkoT-On.js";import"./Scheduler-CssyMp54.js";import"./signal-DOJnbrFR.js";import"./date-Dw3OHnFv.js";const J=v,K={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:v},X={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0},queryBinsCapabilities:N};function Y(h){return Q(h)?h.z!=null:!!h.hasZ}function ee(h){return Q(h)?h.m!=null:!!h.hasM}class et{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:a}=e,n=this._inferLayerProperties(a,e.fields),l=e.fields||[],d=e.hasM!=null?e.hasM:!!n.hasM,c=e.hasZ!=null?e.hasZ:!!n.hasZ,p=!e.spatialReference&&!n.spatialReference,u=p?J:e.spatialReference||n.spatialReference,y=p?K:null,f=e.geometryType||n.geometryType,o=!f;let t=e.objectIdField||n.objectIdField,s=e.timeInfo;const m=new D(l);if(!o&&(p&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&t!==n.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),t=n.objectIdField),t&&!n.objectIdField){const r=m.get(t);r?(t=r.name,r.type="esriFieldTypeOID",r.editable=!1,r.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const r of l){if(r.name==null&&(r.name=r.alias),r.alias==null&&(r.alias=r.name),!r.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:r});if(r.name===t&&(r.type="esriFieldTypeOID"),!V.jsonValues.includes(r.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${r.name}"`,{field:r});r.length==null&&(r.length=M(r))}const F={};for(const r of l)if(r.type!=="esriFieldTypeOID"&&r.type!=="esriFieldTypeGlobalID"){const q=A(r);q!==void 0&&(F[r.name]=q)}if(s){if(s.startTimeField){const r=m.get(s.startTimeField);r?(s.startTimeField=r.name,r.type="esriFieldTypeDate"):s.startTimeField=null}if(s.endTimeField){const r=m.get(s.endTimeField);r?(s.endTimeField=r.name,r.type="esriFieldTypeDate"):s.endTimeField=null}if(s.trackIdField){const r=m.get(s.trackIdField);r?s.trackIdField=r.name:(s.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:s}}))}s.startTimeField||s.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:s}}),s=null)}const x=m.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??Z}:null;this._createDefaultAttributes=W(F,t);const R={warnings:i,featureErrors:[],layerDefinition:{...X,drawingInfo:z(f),templates:U(F),extent:y,geometryType:f,objectIdField:t,fields:l,hasZ:c,hasM:d,timeInfo:s,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new L({fieldsIndex:D.fromLayerJSON({fields:l,timeInfo:s,dateFieldsTimeReference:x}),geometryType:f,hasM:d,hasZ:c,objectIdField:t,spatialReference:u,featureStore:new G({geometryType:f,hasM:d,hasZ:c}),timeInfo:s}),!a?.length)return this._nextObjectId=k,R;const S=B(t,a);return this._nextObjectId=S+1,await E(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:i,geometryType:a}=this._queryEngine;return await Promise.all([H(i,a),E(e.adds,i),E(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return P(this._queryEngine,e,i.signal)}queryAttributeBins(e,i={}){return this._queryEngine.executeAttributeBinsQuery(e,i.signal)}_inferLayerProperties(e,i){let a,n,l=null,d=null,c=null;for(const p of e){const u=p.geometry;if(u!=null&&(l||(l=b(u)),d||(d=u.spatialReference),a==null&&(a=Y(u)),n==null&&(n=ee(u)),l&&d&&a!=null&&n!=null))break}if(i&&i.length){let p=null;i.some(u=>{const y=u.type==="esriFieldTypeOID",f=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return p=u,y||f})&&(c=p.name)}return{geometryType:l,spatialReference:d,objectIdField:c,hasM:n,hasZ:a}}async _loadInitialFeatures(e,i){const{geometryType:a,hasM:n,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine,y=[];for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const s=this._createDefaultAttributes(),m=T(u,s,t.attributes,!0);m?e.featureErrors.push(m):(this._assignObjectId(s,t.attributes,!0),t.attributes=s,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(O([],y,a,l,n,d));const{fullExtent:f,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,o){const{start:t,end:s}=o;e.layerDefinition.timeInfo.timeExtent=[t,s]}return e}async _applyEdits(e){const{adds:i,updates:a,deletes:n}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i?.length&&this._applyAddEdits(l,i),a?.length&&this._applyUpdateEdits(l,a),n?.length){for(const p of n)l.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(n)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,i){const{addResults:a}=e,{geometryType:n,hasM:l,hasZ:d,objectIdField:c,spatialReference:p,featureStore:u,fieldsIndex:y}=this._queryEngine,f=[];for(const o of i){if(o.geometry&&n!==b(o.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),s=T(y,t,o.attributes);if(s)a.push(s);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const m=o.attributes[c];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??p;o.geometry=_(w(o.geometry,m),m,p)}f.push(o),a.push(j(o.attributes[c]))}}u.addMany(O([],f,n,d,l,c))}_applyUpdateEdits({updateResults:e},i){const{geometryType:a,hasM:n,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine;for(const y of i){const{attributes:f,geometry:o}=y,t=f?.[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const s=C(p.getFeature(t),a,l,n);if(o!=null){if(a!==b(o)){e.push(g("Incorrect geometry type."));continue}const m=o.spatialReference??c;s.geometry=_(w(o,m),m,c)}if(f){const m=T(u,s.attributes,f);if(m){e.push(m);continue}}p.add($(s,a,l,n,d)),e.push(j(t))}}_assignObjectId(e,i,a=!1){const n=this._queryEngine.objectIdField;a&&i&&isFinite(i[n])?e[n]=i[n]:e[n]=this._nextObjectId++}}export{et as default};
