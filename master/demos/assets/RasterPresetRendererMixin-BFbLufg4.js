import{a4 as d,bB as I,O as B,bE as N,aZ as W,J as X,B as s,D as o,bk as Y,bv as Z,N as P}from"./main-asQ7SttR.js";import{n as G,d as K}from"./RasterSymbolizer-IOW6lFnu.js";import{f as Q,s as U,i as _}from"./utils-CO4HUuqg.js";import{d as ee}from"./FeatureSet-BbkVLp0y.js";import{l as te,p as ae}from"./ImageHistogramParameters-Cu4-jinR.js";async function M(t,a,p){const x=Q(t),{rasterFunction:c,sourceJSON:j}=a||{},O=c?JSON.stringify(c.rasterFunctionDefinition||c):null,J=U({...x.query,renderingRule:O,f:"json"}),u=_(J,p);t=x.path;const e=j||await d(t,u).then(i=>i.data),k=e.hasRasterAttributeTable?d(`${t}/rasterAttributeTable`,u):null,C=e.hasColormap?d(`${t}/colormap`,u):null,q=e.hasHistograms?d(`${t}/histograms`,u):null,z=e.currentVersion>=10.3?d(`${t}/keyProperties`,u):null,F=e.hasMultidimensions?d(`${t}/multidimensionalInfo`,u):null,r=await Promise.allSettled([k,C,q,z,F]);let f=null;if(e.minValues&&e.minValues.length===e.bandCount){f=[];for(let i=0;i<e.minValues.length;i++)f.push({min:e.minValues[i],max:e.maxValues[i],avg:e.meanValues[i],stddev:e.stdvValues[i]})}const R=I.fromJSON(e.extent),S=Math.ceil(R.width/e.pixelSizeX-.1),w=Math.ceil(R.height/e.pixelSizeY-.1),h=B.fromJSON(e.spatialReference||e.extent.spatialReference),D=r[0].status==="fulfilled"?r[0].value?.data:null,E=D?.features?.length?ee.fromJSON(D):null,V=r[1].status==="fulfilled"?r[1].value?.data.colormap:null,H=V?.length?V:null,$=r[2].status==="fulfilled"?r[2].value?.data.histograms:null,L=$?.[0]?.counts?.length?$:null,m=r[3].status==="fulfilled"?r[3].value?.data??{}:{},T=r[4].status==="fulfilled"?r[4].value?.data.multidimensionalInfo:null,v=T?.variables?.length?T:null;v&&v.variables.forEach(i=>{i.statistics?.length&&i.statistics.forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),i.dimensions?.forEach(n=>{n.name!=="StdTime"||n.recurring||n.unit||(n.unit="ISO8601")})});const{defaultVariable:y,serviceDataType:g}=e;y&&y!==m.DefaultVariable&&(m.DefaultVariable=y),g?.includes("esriImageServiceDataTypeVector")&&!g.includes(m.DataType)&&(m.DataType=g.replace("esriImageServiceDataType",""));let b=e.noDataValue;e.noDataValues?.length&&e.noDataValues.some(i=>i!==b)&&(b=e.noDataValues);const A=e.transposeInfo?new G({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new N({x:e.extent.xmin,y:e.extent.ymax,spatialReference:h}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(S,w))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new K({width:S,height:w,bandCount:e.bandCount,extent:I.fromJSON(e.extent),spatialReference:h,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),pixelType:e.pixelType.toLowerCase(),statistics:f,attributeTable:E,colormap:H,histograms:L,keyProperties:m,noDataValue:b,multidimensionalInfo:v,storageInfo:A})}function ue(t,a,p){return M(t,{sourceJSON:a},p)}function de(t,a,p){return M(t,{rasterFunction:a},p)}function pe(t,a){t.attributeTable||(a.hasRasterAttributeTable=!1),t.histograms||(a.hasHistograms=!1),t.colormap||(a.hasColormap=!1),t.multidimensionalInfo||(a.hasMultidimensions=!1)}let l=class extends W.ClonableMixin(X){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};s([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"name",void 0),s([o({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),Y({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],l.prototype,"method",void 0),s([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"value",void 0),s([o({type:[Z],json:{write:{isRequired:!0}}})],l.prototype,"bandIds",void 0),s([o({types:te,json:{write:!0,origins:{"web-scene":{types:ae,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],l.prototype,"renderer",void 0),l=s([P("esri.renderers.support.RasterPresetRenderer")],l);const ie=l,me=t=>{let a=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return s([o({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],a.prototype,"activePresetRendererName",void 0),s([o({type:[ie],json:{name:"layerDefinition.presetRenderers",write:!0}})],a.prototype,"presetRenderers",void 0),a=s([P("esri.layers.mixins.RasterPresetRendererMixin")],a),a};export{pe as c,ue as f,me as o,de as p};
