import{bR as Y,aS as J,fG as D,bE as f,bS as ct,dM as H,dN as F,dK as nt,c1 as pt,c4 as T,eb as U,ec as V,aP as lt,aO as M,dq as mt,U as j,di as _t,b6 as E,B as d,D as g,N as dt}from"./main-asQ7SttR.js";import{h as ut}from"./quantityUtils-B6HSL2rj.js";import{i as x,s as z,m as gt,a as yt}from"./drawUtils-CHsksDu5.js";import{p as vt,j as ft}from"./GraphicMover-BdmA0XuA.js";import{e as Gt}from"./RouteLayerInteraction-DmbnMhUE.js";import{h as bt}from"./settings-DG8IlWY-.js";import{l as Q}from"./hitTestSelectUtils-CCoI2aa5.js";import{R as xt,m as wt}from"./automaticLengthMeasurementUtils-BE4jpUja.js";import{s as St,o as kt,i as Rt}from"./ExtentScaleTooltipInfo-CiMUu77-.js";import{i as Mt}from"./TranslateTooltipInfo-D3n4Uv5T.js";import"./preload-helper-ExcqyqRp.js";import"./GraphicsLayer-CZo360Kr.js";import"./GraphicsCollection-Cks0A0Ve.js";import"./Layer-Bx8UpsMJ.js";import"./TimeExtent-tqAWy-Dv.js";import"./BlendLayer-DQc1-4op.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-id0_mGIh.js";import"./parser-Bpna5qKq.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BjwS19gr.js";import"./common-DQOJ18NT.js";import"./ScaleRangeLayer-59UbR5Hw.js";import"./ElevationInfo-C-a3Y-El.js";import"./lengthUtils-GoFDlaqZ.js";import"./HighlightDefaults-D0LIiYIH.js";import"./layerViewUtils-BMRueLxd.js";import"./featureUtils-BcTX_nBt.js";import"./intl-D5myeBIL.js";import"./utils-B34IjRvs.js";import"./timeZoneUtils-CfTu0PZq.js";import"./MapView-CdXdWR5g.js";import"./Cyclical-BtCZr1qb.js";import"./CollectionFlattener-C2HA7kkf.js";import"./workers-BJlMhhTk.js";import"./Queue-B7j4i-p3.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";import"./TileInfo-DFofX128.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-D3elnwh6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-gi6cfx1S.js";import"./signal-DOJnbrFR.js";import"./Map-BQqiVqnv.js";import"./Basemap-CwXISLRi.js";import"./loadAll-9Cvy7tjC.js";import"./PortalItem-Nq3zGykG.js";import"./writeUtils-BnGVzhQw.js";import"./TablesMixin-I_JAQrAJ.js";import"./HeightModelInfo-B7gpIaa-.js";import"./ReactiveMap-CzqLFZz5.js";import"./Query-D7n22axe.js";import"./Field-BLAoQZ_0.js";import"./fieldType-DNTeE9NS.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-3ZPXJ-cN.js";import"./TileKey-tjz0o95w.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CQip1v0x.js";import"./normalizeUtilsCommon-B9hLdSv-.js";import"./utils-CO4HUuqg.js";import"./utils-CLKe2jGG.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CssyMp54.js";import"./vec32-BzCy6cr7.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DGW9aO8e.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-C_fUUBhQ.js";import"./capabilities-Du2wdNlQ.js";import"./Version-CCEYPWOm.js";import"./ColorBackground-CkNanFjv.js";import"./GraphicManipulator-Cyo23Lhi.js";import"./projectPointToVector-CbyHCjYt.js";import"./elevationInfoUtils-Cb-uJoCx.js";import"./drapedUtils-BHJ2Ckw0.js";import"./Stop-pORK5fNb.js";import"./networkEnums-BhJmnK1i.js";import"./projectVectorToVector-VmpAJgQc.js";import"./geodesicUtils-DUEAC0ng.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./plane-RIh6ulrU.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DET7VZHS.js";import"./MeshTransform-D2rUQYB0.js";import"./quat-sVWee8SJ.js";import"./axisAngleDegrees-B02ZyS5J.js";import"./meshVertexSpaceUtils-DhVTAb0c.js";import"./MeshLocalVertexSpace-Dk8C03Rj.js";import"./memoize-DsJmrG76.js";import"./unitFormatUtils-Dsg7E7mQ.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./spatialReferenceEllipsoidUtils-Bq6Bg_Dl.js";import"./geodesicLengthMeasurementUtils-DWI1XB7C.js";import"./geometryEngine-CVDxMhql.js";import"./geometryEngineBase-8g0RzW7z.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-BabTFx4N.js";function N(t,e,i,s){const o=[];for(const r of t){const h=r.slice();o.push(h);const n=e*(r[0]-s.x)-i*(r[1]-s.y)+s.x,a=i*(r[0]-s.x)+e*(r[1]-s.y)+s.y;h[0]=n,h[1]=a}return o}function L(t,e,i){const{hasM:s,hasZ:o,spatialReference:r}=t,h=e*Math.PI/180,n=Math.cos(h),a=Math.sin(h);if("xmin"in t&&(i=i??t.center,t=new Y({spatialReference:r,rings:[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]]})),"paths"in t){i=i??t.extent.center;const c=[];for(const p of t.paths)c.push(N(p,n,a,i));return new J({hasM:s,hasZ:o,spatialReference:r,paths:c})}if("rings"in t){i=i??t.extent.center;const c=[];for(const p of t.rings){const w=D(p),u=N(p,n,a,i);D(u)!==w&&u.reverse(),c.push(u)}return new Y({hasM:s,hasZ:o,spatialReference:r,rings:c})}if("x"in t){i=i??t;const c=new f({x:n*(t.x-i.x)-a*(t.y-i.y)+i.x,y:a*(t.x-i.x)+n*(t.y-i.y)+i.y,spatialReference:r});return t.z!=null&&(c.z=t.z),t.m!=null&&(c.m=t.m),c}return"points"in t?(i=i??t.extent.center,new ct({hasM:s,hasZ:o,points:N(t.points,n,a,i),spatialReference:r})):null}class It{constructor(e,i,s,o){this.graphics=e,this.mover=i,this.dx=s,this.dy=o,this.type="move-start"}}class Ot{constructor(e,i,s,o){this.graphics=e,this.mover=i,this.dx=s,this.dy=o,this.type="move"}}class q{constructor(e,i,s,o){this.graphics=e,this.mover=i,this.dx=s,this.dy=o,this.type="move-stop"}}class Ct{constructor(e,i,s){this.graphics=e,this.mover=i,this.angle=s,this.type="rotate-start"}}class Ht{constructor(e,i,s){this.graphics=e,this.mover=i,this.angle=s,this.type="rotate"}}class Z{constructor(e,i,s){this.graphics=e,this.mover=i,this.angle=s,this.type="rotate-stop"}}class Tt{constructor(e,i,s,o){this.graphics=e,this.mover=i,this.xScale=s,this.yScale=o,this.type="scale-start"}}class Et{constructor(e,i,s,o){this.graphics=e,this.mover=i,this.xScale=s,this.yScale=o,this.type="scale"}}class K{constructor(e,i,s,o){this.graphics=e,this.mover=i,this.xScale=s,this.yScale=o,this.type="scale-stop"}}const m=bt.transformGraphics,zt={centerIndicator:new H({style:"cross",size:m.center.size,color:m.center.color}),fill:{default:new F({color:m.fill.color,outline:{color:m.fill.outlineColor,join:"round",width:1}}),active:new F({color:m.fill.stagedColor,outline:{color:m.fill.outlineColor,join:"round",style:"dash",width:1}})},handles:{default:new H({style:"square",size:m.vertex.size,color:m.vertex.color,outline:{color:m.vertex.outlineColor,width:1}}),hover:new H({style:"square",size:m.vertex.hoverSize,color:m.vertex.hoverColor,outline:{color:m.vertex.hoverOutlineColor,width:1}})},rotator:{default:new H({style:"circle",size:m.vertex.size,color:m.vertex.color,outline:{color:m.vertex.outlineColor,width:1}}),hover:new H({style:"circle",size:m.vertex.hoverSize,color:m.vertex.hoverColor,outline:{color:m.vertex.hoverOutlineColor,width:1}})},rotatorLine:new nt({color:m.line.color,width:1})};let _=class extends pt.EventedAccessor{constructor(t){super(t),this._activeHandleGraphic=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._centerGraphic=null,this._backgroundGraphic=null,this._vertexGraphics=[],this._rotateHandleGraphic=null,this._rotateGraphicOffset=20,this._angleOfRotation=0,this._rotateLineGraphic=null,this._startInfo=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this.tooltip=null,this.type="box",this.callbacks={onMoveStart(){},onMove(){},onMoveStop(){},onScaleStart(){},onScale(){},onScaleStop(){},onRotateStart(){},onRotate(){},onRotateStop(){},onGraphicClick(){}},this.enableMovement=!0,this.enableRotation=!0,this.enableScaling=!0,this.graphics=[],this.highlightsEnabled=!0,this.layer=null,this.preserveAspectRatio=!1,this.showCenterGraphic=!0,this.symbols=zt,this.sketchOptions=new Q,this.view=null,this._getBounds=(()=>{const e=T();return(i,s)=>{i[0]=Number.POSITIVE_INFINITY,i[1]=Number.POSITIVE_INFINITY,i[2]=Number.NEGATIVE_INFINITY,i[3]=Number.NEGATIVE_INFINITY;for(const o of s){if(!o)continue;let r,h,n,a;if(o.type==="point")r=n=o.x,h=a=o.y;else if(o.type==="multipoint"){const c=U(o);[r,h,n,a]=V(e,[c])}else if(o.type==="extent")[r,h,n,a]=[o.xmin,o.ymin,o.xmax,o.ymax];else{const c=U(o);[r,h,n,a]=V(e,c)}i[0]=Math.min(r,i[0]),i[1]=Math.min(h,i[1]),i[2]=Math.max(n,i[2]),i[3]=Math.max(a,i[3])}return i}})()}initialize(){const t=this.view;this._highlightHelper=new vt({view:t}),this._setup(),this.addHandles([lt(()=>t?.ready,()=>{const{layer:e,view:i}=this;Gt(i,e)},{once:!0,initial:!0}),M(()=>this.preserveAspectRatio,()=>{this._activeHandleGraphic&&(this._scaleGraphic(this._activeHandleGraphic),this._updateGraphics(),this._updateTooltip(this._activeHandleGraphic))}),M(()=>t?.scale,()=>{this._updateRotateGraphic(),this._updateRotateLineGraphic()}),M(()=>this.graphics,()=>this.refresh()),M(()=>this.layer,(e,i)=>{i&&this._resetGraphics(i),this.refresh()}),M(()=>this.highlightsEnabled,()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()}),M(()=>this.sketchOptions.tooltips.effectiveEnabled,e=>{this.tooltip=e?xt(()=>({view:t,options:this.sketchOptions.tooltips})):j(this.tooltip)},mt),M(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),_t),this.on("move-start",e=>this.callbacks?.onMoveStart?.(e)),this.on("move",e=>this.callbacks?.onMove?.(e)),this.on("move-stop",e=>this.callbacks?.onMoveStop?.(e)),this.on("rotate-start",e=>this.callbacks?.onRotateStart?.(e)),this.on("rotate",e=>this.callbacks?.onRotate?.(e)),this.on("rotate-stop",e=>this.callbacks?.onRotateStop?.(e)),this.on("scale-start",e=>this.callbacks?.onScaleStart?.(e)),this.on("scale",e=>this.callbacks?.onScale?.(e)),this.on("scale-stop",e=>this.callbacks?.onScaleStop?.(e))])}destroy(){this._reset(),this.tooltip=j(this.tooltip)}get state(){const t=this.view?.ready??!1,e=this.graphics.length&&this.layer;return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){return this._vertexGraphics.includes(t)||t===this._backgroundGraphic||t===this._centerGraphic||t===this._rotateHandleGraphic||t===this._rotateLineGraphic}move(t,e){if(this._mover&&this.graphics.length){for(const i of this.graphics){const s=i.geometry,o=x(s,t,e,this.view);i.geometry=o}this.refresh(),this.emit("move-stop",new q(this.graphics,null,t,e))}}scale(t,e){if(this._mover&&this.graphics.length){for(const i of this.graphics){const s=i.geometry,o=z(s,t,e);i.geometry=o}this.refresh(),this.emit("scale-stop",new K(this.graphics,null,t,e))}}rotate(t,e){if(this._mover&&this.graphics.length){if(!e){const i=this._vertexGraphics[1].geometry.x,s=this._vertexGraphics[3].geometry.y;e=new f(i,s,this.view.spatialReference)}for(const i of this.graphics){const s=i.geometry,o=L(s,t,e);i.geometry=o}this.refresh(),this.emit("rotate-stop",new Z(this.graphics,null,t))}}refresh(){this._reset(),this._setup()}reset(){this.graphics=[]}_setup(){this.state==="active"&&(this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._updateGraphics())}_reset(){this._highlightHelper?.removeAll(),this._resetGraphicStateVars(),this._resetGraphics(),this._updateTooltip(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetGraphicStateVars(){this._startInfo=null,this._activeHandleGraphic=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this._angleOfRotation=0}_resetGraphics(t){(t=t||this.layer)&&(t.removeMany(this._vertexGraphics),t.remove(this._backgroundGraphic),t.remove(this._centerGraphic),t.remove(this._rotateHandleGraphic),t.remove(this._rotateLineGraphic)),this._vertexGraphics.forEach(e=>!e.destroyed&&e.destroy()),!this._backgroundGraphic.destroyed&&this._backgroundGraphic.destroy(),!this._centerGraphic.destroyed&&this._centerGraphic.destroy(),!this._rotateHandleGraphic.destroyed&&this._rotateHandleGraphic.destroy(),!this._rotateLineGraphic.destroyed&&this._rotateLineGraphic.destroy(),this._vertexGraphics=[],this._backgroundGraphic=null,this._centerGraphic=null,this._rotateHandleGraphic=null,this._rotateLineGraphic=null}_setupMover(){let t=[];this.enableScaling&&(t=t.concat(this._vertexGraphics)),this.enableRotation&&t.push(this._rotateHandleGraphic),this.enableMovement&&(t=t.concat(this.graphics,this._backgroundGraphic)),this.showCenterGraphic&&t.push(this._centerGraphic),this._mover=new ft({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,view:this.view,graphics:t,callbacks:{onGraphicClick:e=>this._onGraphicClickCallback(e),onGraphicMoveStart:e=>this._onGraphicMoveStartCallback(e),onGraphicMove:e=>this._onGraphicMoveCallback(e),onGraphicMoveStop:e=>this._onGraphicMoveStopCallback(e),onGraphicPointerOver:e=>this._onGraphicPointerOverCallback(e),onGraphicPointerOut:e=>this._onGraphicPointerOutCallback(e)}})}_getStartInfo(t){const[e,i,s,o]=this._getBoxBounds(T()),r=Math.abs(s-e),h=Math.abs(o-i),n=(s+e)/2,a=(o+i)/2,{x:c,y:p}=t.geometry;return{width:r,height:h,centerX:n,centerY:a,startX:c,startY:p,graphicInfos:this._getGraphicInfos(),box:this._backgroundGraphic.geometry,rotate:this._rotateHandleGraphic.geometry}}_getGraphicInfos(){return this.graphics.map(t=>this._getGraphicInfo(t))}_getGraphicInfo(t){const e=t.geometry,[i,s,o,r]=this._getBounds(T(),[e]);return{width:Math.abs(o-i),height:Math.abs(r-s),centerX:(o+i)/2,centerY:(r+s)/2,geometry:e}}_onGraphicClickCallback(t){t.viewEvent.stopPropagation(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t)}_onGraphicMoveStartCallback(t){const{_angleOfRotation:e,_xScale:i,_yScale:s,_backgroundGraphic:o,_vertexGraphics:r,_rotateHandleGraphic:h,symbols:n}=this,a=t.graphic;this._resetGraphicStateVars(),this._hideGraphicsBeforeUpdate(),o.symbol=n.fill.active,this._startInfo=this._getStartInfo(a),this._updateTooltip(a,t.viewEvent),a===h?(this.view.cursor="grabbing",this.emit("rotate-start",new Ct(this.graphics,a,e))):r.includes(a)?(this._activeHandleGraphic=a,this.emit("scale-start",new Tt(this.graphics,a,i,s))):this.emit("move-start",new It(this.graphics,a,t.dx,t.dy))}_onGraphicMoveCallback(t){const e=t.graphic;if(this._startInfo)if(this._vertexGraphics.includes(e))this._scaleGraphic(e),this._updateTooltip(e,t.viewEvent),this.emit("scale",new Et(this.graphics,e,this._xScale,this._yScale));else if(e===this._rotateHandleGraphic)this._rotateGraphic(e),this._updateTooltip(e,t.viewEvent),this.emit("rotate",new Ht(this.graphics,e,this._angleOfRotation));else{const{dx:i,dy:s}=t;this._totalDx+=i,this._totalDy+=s,this._moveGraphic(e,i,s),this._updateTooltip(e,t.viewEvent),this.emit("move",new Ot(this.graphics,e,i,s))}}_onGraphicMoveStopCallback(t){const e=t.graphic;if(!this._startInfo)return void this.refresh();const{_angleOfRotation:i,_totalDx:s,_totalDy:o,_xScale:r,_yScale:h,_vertexGraphics:n,_rotateHandleGraphic:a}=this;this.refresh(),e===a?(this.view.cursor="pointer",this.emit("rotate-stop",new Z(this.graphics,e,i))):n.includes(e)?this.emit("scale-stop",new K(this.graphics,e,r,h)):this.emit("move-stop",new q(this.graphics,e,s,o))}_onGraphicPointerOverCallback(t){const{_backgroundGraphic:e,_vertexGraphics:i,graphics:s,_rotateHandleGraphic:o,symbols:r,view:h}=this,n=t.graphic;if(this._hoveredGraphic=n,n===o)return o.symbol=r.rotator.hover,h.cursor="pointer",void this._updateTooltip(n);if(s.includes(n)||n===e)return void(h.cursor="move");if(!i.includes(n))return void(h.cursor="pointer");this._updateTooltip(n),t.graphic.symbol=r.handles.hover;const a=h.rotation;let c,p=t.index;switch(p<8&&(a>=0&&a<45?p%=8:p=a>=45&&a<90?(p+1)%8:a>=90&&a<135?(p+2)%8:a>=135&&a<180?(p+3)%8:a>=180&&a<225?(p+4)%8:a>=225&&a<270?(p+5)%8:a>=270&&a<315?(p+6)%8:(p+7)%8),p){case 0:case 4:c="nwse-resize";break;case 1:case 5:c="ns-resize";break;case 2:case 6:c="nesw-resize";break;case 3:case 7:c="ew-resize";break;default:c="pointer"}h.cursor=c}_onGraphicPointerOutCallback(t){const{_vertexGraphics:e,_rotateHandleGraphic:i,symbols:s,view:o}=this;this._hoveredGraphic=null,t.graphic===i?i.symbol=s.rotator.default:e.includes(t.graphic)&&(t.graphic.symbol=s.handles.default),o.cursor="default",this._updateTooltip()}_scaleGraphic(t){const{_startInfo:e,_vertexGraphics:i,preserveAspectRatio:s,view:o}=this,{centerX:r,centerY:h,graphicInfos:n,height:a,startX:c,startY:p,width:w}=e,{resolution:u,transform:l}=o.state,y=i.indexOf(t);y!==1&&y!==5||this._updateX(t,r),y!==3&&y!==7||this._updateY(t,h);const{x:O,y:C}=t.geometry,W=l[0]*O+l[2]*C+l[4],tt=l[1]*O+l[3]*C+l[5],k=n?.map(v=>v.geometry)??[],et=k.every(v=>v.type==="point");if((w===0||a===0)&&et){const v=I((O-c)/u),G=I((p-C)/u);for(let S=0;S<k.length;S++)this.graphics[S].geometry=x(k[S],v,G,o,!0);return this._centerGraphic.geometry=new f(O,C,o.spatialReference),void(this._backgroundGraphic.geometry=x(e.box,v,G,o,!0))}if(s){const v=I(l[0]*r+l[2]*h+l[4],2),G=I(l[1]*r+l[3]*h+l[5],2),S=I(l[0]*c+l[2]*p+l[4],2),B=I(l[1]*c+l[3]*p+l[5],2);let b=yt(v,G,S,B,W,tt);b!==0&&Math.abs(b)!==1/0||(b=1),this._xScale=this._yScale=b;for(const R of k){const $=k.indexOf(R);this.graphics[$].geometry=z(R,this._xScale,this._yScale,[r,h])}this._updateBackgroundGraphic()}else{let v=O-c,G=p-C;if(y===1||y===5?v=0:y!==3&&y!==7||(G=0),v===0&&G===0)return;const S=r+v/2,B=h+G/2;let b=(w+(c>r?v:-1*v))/w,R=(a+(p<h?G:-1*G))/a;y!==1&&y!==5&&b!==0&&Math.abs(b)!==1/0||(b=1),y!==3&&y!==7&&R!==0&&Math.abs(R)!==1/0||(R=1),this._xScale=b,this._yScale=R;const $=(S-r)/u,it=(B-h)/u,st=z(e.box,this._xScale,this._yScale);this._backgroundGraphic.geometry=x(st,$,it,o,!0);const{centerX:A,centerY:P}=this._getGraphicInfo(this._backgroundGraphic),ot=(A-r)/u,rt=-1*(P-h)/u;for(const X of k){const at=k.indexOf(X),ht=z(X,this._xScale,this._yScale,[r,h]);this.graphics[at].geometry=x(ht,ot,rt,o,!0)}this._centerGraphic.geometry=new f(A,P,o.spatialReference)}}_rotateGraphic(t){const{centerX:e,centerY:i,startX:s,startY:o,box:r,rotate:h}=this._startInfo,n=this.view.spatialReference,a=new f(s,o,n),c=new f(e,i,n),p=t.geometry;this._angleOfRotation=gt(a,p,c);const w=this._startInfo.graphicInfos?.map(u=>u.geometry)??[];for(const u of w){const l=w.indexOf(u),y=L(u,this._angleOfRotation,c);this.graphics[l].geometry=y}this._backgroundGraphic.geometry=L(r,this._angleOfRotation,c),this._rotateHandleGraphic.geometry=L(h,this._angleOfRotation,c)}_moveGraphic(t,e,i){if(this.graphics.includes(t)){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=x(s,e,i,this.view);for(const o of this.graphics)o!==t&&(o.geometry=x(o.geometry,e,i,this.view))}else if(t===this._centerGraphic){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=x(s,e,i,this.view)}if(t===this._backgroundGraphic||t===this._centerGraphic)for(const s of this.graphics)s.geometry=x(s.geometry,e,i,this.view)}_setUpHighlights(){this.highlightsEnabled&&this.graphics.length&&this._highlightHelper?.add(this.graphics)}_setupGraphics(){const{_graphicAttributes:t,symbols:e}=this;this._centerGraphic=new E({symbol:e.centerIndicator,attributes:t}),this.showCenterGraphic&&this.layer.add(this._centerGraphic),this._backgroundGraphic=new E({symbol:e.fill.default,attributes:t}),this.layer.add(this._backgroundGraphic),this._rotateLineGraphic=new E({symbol:e.rotatorLine,attributes:t}),this._rotateHandleGraphic=new E({symbol:e.rotator.default,attributes:t}),this.enableRotation&&!this._hasExtentGraphic()&&this.layer.addMany([this._rotateLineGraphic,this._rotateHandleGraphic]);for(let i=0;i<8;i++)this._vertexGraphics.push(new E({symbol:e.handles.default,attributes:t}));this.enableScaling&&this.layer.addMany(this._vertexGraphics)}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={...this.symbols,fill:{active:this.symbols.fill.active?.clone().set("outline.color",t),default:this.symbols.fill.default?.clone().set("outline.color",t)},handles:{...this.symbols.handles,default:this.symbols.handles.default.clone().set("outline.color",t)},rotator:{...this.symbols.rotator,default:this.symbols.rotator.default.clone().set("outline.color",t)},rotatorLine:this.symbols.rotatorLine.clone().set("color",t)};for(const e of this._vertexGraphics)e.symbol=e===this._hoveredGraphic?this.symbols.handles.hover:this.symbols.handles.default;this._backgroundGraphic.symbol=this.symbols.fill.default,this._rotateHandleGraphic.symbol=this._rotateHandleGraphic===this._hoveredGraphic?this.symbols.rotator.hover:this.symbols.rotator.default,this._rotateLineGraphic.symbol=this.symbols.rotatorLine}_updateGraphics(){this._updateBackgroundGraphic(),this._updateHandleGraphics(),this._updateCenterGraphic(),this._updateRotateGraphic(),this._updateRotateLineGraphic()}_hideGraphicsBeforeUpdate(){this._centerGraphic.visible=!1,this._rotateHandleGraphic.visible=!1,this._rotateLineGraphic.visible=!1,this._vertexGraphics.forEach(t=>t.visible=!1)}_updateHandleGraphics(){const t=this._getCoordinates(!0);this._vertexGraphics.forEach((e,i)=>{const[s,o]=t[i];this._updateXY(e,s,o)})}_updateBackgroundGraphic(){const t=this._getCoordinates().map(([e,i])=>[e,i]);this._backgroundGraphic.geometry=new Y({rings:[t],spatialReference:this.view.spatialReference})}_updateCenterGraphic(){const[t,e,i,s]=this._getBoxBounds(T()),o=(i+t)/2,r=(s+e)/2;this._centerGraphic.geometry=new f(o,r,this.view.spatialReference)}_updateRotateGraphic(){if(!this._vertexGraphics.length)return;const{x:t,y:e}=this._vertexGraphics[1].geometry,i=e+this.view.state.resolution*this._rotateGraphicOffset;this._rotateHandleGraphic.geometry=new f(t,i,this.view.spatialReference)}_updateRotateLineGraphic(){if(!this._vertexGraphics.length||!this._rotateHandleGraphic?.geometry)return;const t=this._vertexGraphics[1].geometry,e=this._rotateHandleGraphic.geometry;this._rotateLineGraphic.geometry=new J({paths:[[[t.x,t.y],[e.x,e.y]]],spatialReference:this.view.spatialReference})}_updateXY(t,e,i){t.geometry=new f(e,i,this.view.spatialReference)}_updateX(t,e){const i=t.geometry.y;t.geometry=new f(e,i,this.view.spatialReference)}_updateY(t,e){const i=t.geometry.x;t.geometry=new f(i,e,this.view.spatialReference)}_hasExtentGraphic(){return this.graphics.some(t=>t?.geometry!=null&&t.geometry.type==="extent")}_getBoxBounds(t){const e=this.graphics.map(i=>i.geometry);return this._getBounds(t,e)}_getCoordinates(t){const[e,i,s,o]=this._getBoxBounds(T());if(t){const r=(e+s)/2,h=(o+i)/2;return[[e,o],[r,o],[s,o],[s,h],[s,i],[r,i],[e,i],[e,h]]}return[[e,o],[s,o],[s,i],[e,i]]}_updateTooltip(t,e){if(this.tooltip==null)return;if(!t)return void this.tooltip.clear();const{_backgroundGraphic:i,graphics:s,_vertexGraphics:o,_rotateHandleGraphic:r}=this;t===r?this._updateRotateTooltip():o.includes(t)?this._updateScaleTooltip():(s.includes(t)||t===i)&&this._updateMoveTooltip(e)}_updateRotateTooltip(){this.tooltip!=null&&(this.tooltip.info=new St({sketchOptions:this.sketchOptions,angle:-this._angleOfRotation}))}_updateScaleTooltip(){const{tooltip:t,_xScale:e,_yScale:i,sketchOptions:s,view:o}=this;if(t==null)return;const r=this._getCoordinates(),h=kt({topLeft:r[0],topRight:r[1],bottomRight:r[2],bottomLeft:r[3],spatialReference:o.spatialReference});if(h==null)return;const{xSize:n,ySize:a}=h,c=Math.abs(e),p=Math.abs(i);t.info=new Rt({sketchOptions:s,xScale:c,yScale:p,xSize:n,ySize:a})}_updateMoveTooltip(t){const{tooltip:e,sketchOptions:i,view:s}=this;if(e==null)return;const o=new Mt({sketchOptions:i});if(t){const{x:r,y:h}=t.origin,n=s.toMap(t),a=s.toMap({x:r,y:h}),c=wt(a,n);o.distance=c??ut}e.info=o}};function I(t,e=2){return Number.parseFloat(t.toFixed(e))}d([g()],_.prototype,"tooltip",void 0),d([g({readOnly:!0})],_.prototype,"type",void 0),d([g()],_.prototype,"callbacks",void 0),d([g()],_.prototype,"enableMovement",void 0),d([g()],_.prototype,"enableRotation",void 0),d([g()],_.prototype,"enableScaling",void 0),d([g()],_.prototype,"graphics",void 0),d([g()],_.prototype,"highlightsEnabled",void 0),d([g()],_.prototype,"layer",void 0),d([g()],_.prototype,"preserveAspectRatio",void 0),d([g()],_.prototype,"showCenterGraphic",void 0),d([g({readOnly:!0})],_.prototype,"state",null),d([g()],_.prototype,"symbols",void 0),d([g({type:Q})],_.prototype,"sketchOptions",void 0),d([g({constructOnly:!0})],_.prototype,"view",void 0),_=d([dt("esri.views.draw.support.Box")],_);const zi=_;export{zi as default};
