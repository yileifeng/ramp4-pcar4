import{dx as x,dy as y,dz as B,d4 as z,dA as p}from"./main-asQ7SttR.js";import{j as b}from"./mat4-BjwS19gr.js";import{v as A,b as i,x as k}from"./quat-sVWee8SJ.js";import{e as j}from"./quatf64-aQ5IuZRd.js";import{s as q,_ as w,A as C,B as D}from"./vec32-BzCy6cr7.js";function o(t=F){return[t[0],t[1],t[2],t[3]]}function s(t,r,n=o()){return q(n,t),n[3]=r,n}function _(t,r,n){return w(n,t,r),C(n,n),n[3]=-D(t,r),n}function g(t,r=o()){const n=b(u,t);return v(r,p(A(r,n))),r}function c(t,r,n=o()){return i(u,t,m(t)),i(a,r,m(r)),k(u,a,u),v(n,p(A(n,u)))}function h(t,r,n,e=o()){return s(x,t,f),s(y,r,$),s(B,n,d),c(f,$,f),c(f,d,e),e}function l(t){return t}function E(t){return t[3]}function m(t){return z(t[3])}function v(t,r){return t[3]=r,t}const F=[0,0,1,0],u=j(),a=j();o();const f=o(),$=o(),d=o();export{F as B,h as d,o as j,g as k,s as q,_ as v,l as w,E as y,m as z};
