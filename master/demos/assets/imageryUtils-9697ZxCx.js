import{P as n,$ as p}from"./utils-CBa-lMKP.js";import{l as c,a as u,u as g,E as s}from"./portalItemUtils-BFogiphi.js";import"./main-asQ7SttR.js";import"./preload-helper-ExcqyqRp.js";import"./originUtils-CPX8CCAY.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./PortalItem-Nq3zGykG.js";import"./jsonContext-CWwB2AdU.js";import"./saveUtils-L-1tRd9S.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";const y="Image Service",v="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",I="imagery-tile-layer-save-as",m="WCS",T="wcs-layer-save",w="wcs-layer-save-as";function l(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:r}=e,t=r?.datasetFormat==="Function"?r.primaryRasters?.rasters[0]:r;return{isValid:t?.datasetFormat==="RasterTileServer"&&(t.tileType==="Raster"||t.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function o(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function x(e,r){const{parsedUrl:t,title:a,fullExtent:i}=e;r.url=t.path,r.title||=a;try{r.extent=await c(i)}catch{r.extent=void 0}u(r,s.METADATA),g(r,s.TILED_IMAGERY,e.type==="imagery-tile")}async function $(e,r){const t=e.type==="imagery"?v:e.type==="imagery-tile"?d:T,a=e.type==="wcs"?m:y;return n({layer:e,itemType:a,validateLayer:l,createItemData:o,errorNamePrefix:t},r)}async function b(e,r,t){const a=e.type==="imagery"?f:e.type==="imagery-tile"?I:w,i=e.type==="wcs"?m:y;return p({layer:e,itemType:i,validateLayer:l,createItemData:o,errorNamePrefix:a,newItem:r,setItemProperties:x},t)}export{$ as save,b as saveAs};
