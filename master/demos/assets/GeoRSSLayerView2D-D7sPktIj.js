import{aO as l,di as h,V as g,b9 as f,B as w,N as d}from"./main-asQ7SttR.js";import{p as n}from"./SimpleRenderer-CnXOtoBL.js";import{fromJSON as u}from"./jsonUtils-Bfgh5fRb.js";import{d as b}from"./FeatureSet-BbkVLp0y.js";import{S,y as V}from"./LayerView-DQSUDZhf.js";import{t as _}from"./GraphicContainer-C-sxcJCR.js";import{A as T}from"./GraphicsView2D-DPfKR73g.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-BCStlC_N.js";import"./colorRamps-Dk7bz912.js";import"./ColorStop-DwDT8ygX.js";import"./visualVariableUtils-BKDBW5cJ.js";import"./lengthUtils-GoFDlaqZ.js";import"./typeUtils-CM8gcbcJ.js";import"./ClassBreaksRenderer-BsHgq2H0.js";import"./RendererLegendOptions-Bo7pHTmv.js";import"./LRUCache-D1fsA-w6.js";import"./MemCache-DE3T9NBz.js";import"./Version-CCEYPWOm.js";import"./FieldsIndex-DW-5YYve.js";import"./timeZoneUtils-CfTu0PZq.js";import"./utils-Piv4JJl1.js";import"./defaultCIMValues-BZQdnlbk.js";import"./enums-CD-fX3vU.js";import"./heatmapUtils-OBh9qWh9.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-CNrg2TdL.js";import"./styleUtils-seZ9SQXz.js";import"./Field-BLAoQZ_0.js";import"./fieldType-DNTeE9NS.js";import"./Container-CkIb2PRY.js";import"./MapView-CdXdWR5g.js";import"./Cyclical-BtCZr1qb.js";import"./CollectionFlattener-C2HA7kkf.js";import"./workers-BJlMhhTk.js";import"./Queue-B7j4i-p3.js";import"./intl-D5myeBIL.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";import"./TileInfo-DFofX128.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-D3elnwh6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-gi6cfx1S.js";import"./signal-DOJnbrFR.js";import"./Map-BQqiVqnv.js";import"./Basemap-CwXISLRi.js";import"./loadAll-9Cvy7tjC.js";import"./PortalItem-Nq3zGykG.js";import"./writeUtils-BnGVzhQw.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BjwS19gr.js";import"./TablesMixin-I_JAQrAJ.js";import"./Layer-Bx8UpsMJ.js";import"./TimeExtent-tqAWy-Dv.js";import"./GraphicsCollection-Cks0A0Ve.js";import"./HeightModelInfo-B7gpIaa-.js";import"./ReactiveMap-CzqLFZz5.js";import"./Query-D7n22axe.js";import"./HighlightDefaults-D0LIiYIH.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-3ZPXJ-cN.js";import"./TileKey-tjz0o95w.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CQip1v0x.js";import"./normalizeUtilsCommon-B9hLdSv-.js";import"./utils-CO4HUuqg.js";import"./utils-CLKe2jGG.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CssyMp54.js";import"./vec32-BzCy6cr7.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DGW9aO8e.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-C_fUUBhQ.js";import"./capabilities-Du2wdNlQ.js";import"./ColorBackground-CkNanFjv.js";import"./parser-Bpna5qKq.js";import"./layerViewUtils-BMRueLxd.js";import"./AGraphicContainer-DAdJ3sEt.js";import"./TechniqueInstance-C6jClABs.js";import"./UpdateTracking2D-qn-s-3FX.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-CYyXKDHx.js";import"./memoryEstimations-COo-dz1M.js";import"./GeometryUtils-B2yqqyoj.js";import"./rasterizingUtils-B-P1M3ri.js";import"./floatRGBA-Dmu5dBAP.js";import"./Rect-CUzevAry.js";import"./Utils-CvnY2ddj.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-COuhy0c1.js";import"./VertexArrayObject-h88j0new.js";import"./TileContainer-DJNzuflI.js";import"./WGLContainer-DuoouWL0.js";import"./ProgramTemplate-Bn5PJVSq.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bp1wY35y.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-pNtCHoNi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DWefXO1j.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-C7pXD6O-.js";import"./ShaderBuilder-DGYV3P6E.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CVaNJhFS.js";import"./OverrideHelper-DQksD6mk.js";import"./colorUtils-unU6Ikhg.js";import"./quantizationUtils-DF8Sg9eJ.js";import"./AttributeStore-CoZCZuYu.js";import"./labelUtils-D8QsMWGG.js";import"./queryUtils-Couy4cqn.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CQoEV3z3.js";import"./TimeOnly-BOSrAlqL.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-C3SQ0oJr.js";import"./dehydratedFeatures-BDJfUoGt.js";let y=class extends S(V){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),e=r.hitTest(i);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=t;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:i}))}update(i){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(i)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,i=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of i){const t=b.fromJSON(p),e=new g(t.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,i=>{this._graphicsViewMap.polygon.renderer=new n({symbol:i})},h),l(()=>this.layer?.lineSymbol,i=>{this._graphicsViewMap.polyline.renderer=new n({symbol:i})},h),l(()=>this.layer?.pointSymbol,i=>{this._graphicsViewMap.point.renderer=new n({symbol:i})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Rt=y;export{Rt as default};
