const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./editingSupport-SlO0obEB.js","./main-asQ7SttR.js","./preload-helper-ExcqyqRp.js","./main-DmIi68wH.css","./uuid-Cl5lrJ4c.js","./normalizeUtils-CQip1v0x.js","./normalizeUtilsCommon-B9hLdSv-.js","./utils-CO4HUuqg.js","./utils-CLKe2jGG.js","./EditBusLayer-iTsILf6K.js","./infoFor3D-DhzudQro.js"])))=>i.map(i=>d[i]);
import{_ as $}from"./preload-helper-ExcqyqRp.js";import{B as r,D as i,N as I,o as w,e7 as j,bB as O,s as y,bR as N,a_ as J,cU as F,n as f,O as S,Z as R,fI as g,aY as q,I as v,b9 as T}from"./main-asQ7SttR.js";import{S as P}from"./MultiOriginJSONSupport-BgTEONJv.js";import{f as k}from"./Layer-Bx8UpsMJ.js";import{p as D}from"./workers-BJlMhhTk.js";import{y as Z}from"./clientSideDefaults-C8pjUAkf.js";import{d as G}from"./FeatureSet-BbkVLp0y.js";import{p as z}from"./BlendLayer-DQc1-4op.js";import{e as C}from"./CustomParametersMixin-B7XIjtWP.js";import{a as Q}from"./DisplayFilteredLayer-Can002Zs.js";import{c as B}from"./FeatureEffectLayer-B7oH4PZH.js";import{d as L}from"./FeatureReductionLayer-DBGKy5I4.js";import{b as A}from"./OperationalLayer-DTkZmy-B.js";import{p as V}from"./OrderedLayer-JMonx__F.js";import{j as U}from"./PortalLayer-D_hkWTMK.js";import{f as W}from"./RefreshableLayer-D-fI9Hjo.js";import{t as M}from"./ScaleRangeLayer-59UbR5Hw.js";import{l as Y}from"./TemporalLayer-3uOs5aS1.js";import{e as H}from"./TrackableLayer-CDjzANUC.js";import{I as K,c as X,u as ee,p as te,d as re,f as ie,l as oe,s as se,y as ne}from"./commonProperties-BAQ0_iGY.js";import{n as ae}from"./FeatureTemplate-CBVgicZE.js";import{y as le}from"./Field-BLAoQZ_0.js";import{s as pe}from"./fieldProperties-DO9v7LnS.js";import{C as ue,n as de}from"./labelingInfo-C6cu4L4_.js";import{m as me,u as he}from"./typeUtils-CM8gcbcJ.js";import{b as d}from"./Query-D7n22axe.js";import{p as ce}from"./popupUtils-ChjfLide.js";import{a as ye}from"./timeZoneUtils-CfTu0PZq.js";import"./TimeExtent-tqAWy-Dv.js";import"./Queue-B7j4i-p3.js";import"./intl-D5myeBIL.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-id0_mGIh.js";import"./parser-Bpna5qKq.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BjwS19gr.js";import"./common-DQOJ18NT.js";import"./scaleUtils-C76ebMnv.js";import"./uuid-Cl5lrJ4c.js";import"./displayFilterUtils-hwEJosKz.js";import"./FeatureEffect-B6uz554M.js";import"./FeatureFilter-BMGPBFnL.js";import"./fieldType-DNTeE9NS.js";import"./FeatureReductionSelection-595R3Jim.js";import"./jsonUtils-Bfgh5fRb.js";import"./ClassBreaksRenderer-BsHgq2H0.js";import"./commonProperties-BCStlC_N.js";import"./colorRamps-Dk7bz912.js";import"./ColorStop-DwDT8ygX.js";import"./visualVariableUtils-BKDBW5cJ.js";import"./lengthUtils-GoFDlaqZ.js";import"./RendererLegendOptions-Bo7pHTmv.js";import"./LRUCache-D1fsA-w6.js";import"./MemCache-DE3T9NBz.js";import"./Version-CCEYPWOm.js";import"./FieldsIndex-DW-5YYve.js";import"./utils-Piv4JJl1.js";import"./defaultCIMValues-BZQdnlbk.js";import"./enums-CD-fX3vU.js";import"./heatmapUtils-OBh9qWh9.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./SimpleRenderer-CnXOtoBL.js";import"./UniqueValueRenderer-CNrg2TdL.js";import"./styleUtils-seZ9SQXz.js";import"./MD5-C9MwAd2G.js";import"./OrderByInfo-UxwmOVA6.js";import"./PortalItem-Nq3zGykG.js";import"./portalItemUtils-BFogiphi.js";import"./projection-G6EI4E6A.js";import"./projectBuffer-Cx7kBt8y.js";import"./TimeInfo-CoJs_xDI.js";import"./ElevationInfo-C-a3Y-El.js";import"./RelationshipQuery-mAwq-K2B.js";import"./NormalizationBinParametersMixin-DMkoT-On.js";import"./labelUtils-D8QsMWGG.js";let l=class extends w{constructor(){super(...arguments),this.type="geojson",this.refresh=j(async e=>{await this.load();const{extent:t,timeExtent:s}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,s&&(this.sourceJSON.timeInfo.timeExtent=[s.start,s.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)).then(s=>G.fromJSON(s))}queryFeaturesJSON(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(s=>({count:s.count,extent:O.fromJSON(s.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e?.toJSON(),t)}_applyEdits(e){if(!this._connection)throw new y("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,s=[],n=[],m=[];if(e.addFeatures)for(const a of e.addFeatures)s.push(this._serializeFeature(a));if(e.deleteFeatures)for(const a of e.deleteFeatures)"objectId"in a&&a.objectId!=null?n.push(a.objectId):"attributes"in a&&a.attributes[t]!=null&&n.push(a.attributes[t]);if(e.updateFeatures)for(const a of e.updateFeatures)m.push(this._serializeFeature(a));return this._connection.invoke("applyEdits",{adds:s,updates:m,deletes:n}).then(({extent:a,timeExtent:p,featureEditResults:h})=>(this.sourceJSON.extent=a,p&&(this.sourceJSON.timeInfo.timeExtent=[p.start,p.end]),this._createEditsResult(h)))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new y("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,s=this._geometryForSerialization(e);return s?{geometry:s.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:t.type==="mesh"||t.type==="extent"?N.fromExtent(t.extent):t}async _startWorker(e){this._connection=await D("GeoJSONSourceWorker",{strategy:J("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:s,hasZ:n,geometryType:m,objectIdField:a,url:p,timeInfo:h,customParameters:E}=this.layer,_=this.layer.originOf("spatialReference")==="defaults",x={url:p,customParameters:E,fields:t&&t.map(c=>c.toJSON()),geometryType:F.toJSON(m),hasZ:n,objectIdField:a,timeInfo:h?h.toJSON():null,spatialReference:_?null:s&&s.toJSON()},u=await this._connection.invoke("load",x,{signal:e});for(const c of u.warnings)f.getLogger(this.layer).warn("#load()",`${c.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:c});u.featureErrors.length&&f.getLogger(this.layer).warn("#load()",`Encountered ${u.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:u.featureErrors}),this.sourceJSON=u.layerDefinition,this.capabilities=Z(this.sourceJSON.hasZ,!0)}};r([i()],l.prototype,"capabilities",void 0),r([i()],l.prototype,"type",void 0),r([i({constructOnly:!0})],l.prototype,"layer",void 0),r([i()],l.prototype,"sourceJSON",void 0),l=r([I("esri.layers.graphics.sources.GeoJSONSource")],l);const b=pe();let o=class extends V(Q(C(L(B(z(Y(H(M(W(A(U(P(k))))))))))))){constructor(e){super(e),this.attributeTableTemplate=null,this.copyright=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new l({layer:this}),this.spatialReference=S.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson"}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(R).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),g(this.renderer,this.fieldsIndex),q(this.timeInfo,this.fieldsIndex)});return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}get parsedUrl(){return this.url?v(this.url):null}set renderer(e){g(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=v(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:s}=await $(()=>import("./editingSupport-SlO0obEB.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]),import.meta.url);await this.load();const n=await s(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),n}on(e,t){return super.on(e,t)}createPopupTemplate(e){return ce(this,e)}createQuery(){const e=new d,t=this.capabilities?.data;e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:s,timeExtent:n}=this;return e.timeExtent=s!=null&&n!=null?n.offset(-s.value,s.unit):n||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(d.from(e)||this.createQuery(),t)).then(s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(d.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(d.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(d.from(e)||this.createQuery(),t))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i(K)],o.prototype,"attributeTableTemplate",void 0),r([i({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",null),r([i({type:String})],o.prototype,"copyright",void 0),r([i({readOnly:!0})],o.prototype,"createQueryVersion",null),r([i(ye("dateFieldsTimeReference"))],o.prototype,"dateFieldsTimeZone",void 0),r([i({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),r([i({type:String})],o.prototype,"displayField",void 0),r([i({type:Boolean})],o.prototype,"editingEnabled",void 0),r([i(X)],o.prototype,"elevationInfo",void 0),r([i({type:[le],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0),r([i(b.fieldsIndex)],o.prototype,"fieldsIndex",void 0),r([i({type:O,json:{name:"extent"}})],o.prototype,"fullExtent",void 0),r([i({type:["point","polygon","polyline","multipoint"],json:{read:{reader:F.read}}})],o.prototype,"geometryType",void 0),r([i({type:Boolean})],o.prototype,"hasZ",void 0),r([i(ee)],o.prototype,"id",void 0),r([i({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),r([i(te)],o.prototype,"labelsVisible",void 0),r([i({type:[ue],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:de},write:!0}})],o.prototype,"labelingInfo",void 0),r([i(re)],o.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],o.prototype,"listMode",void 0),r([i({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],o.prototype,"objectIdField",void 0),r([i(ie)],o.prototype,"opacity",void 0),r([i({type:["GeoJSON"]})],o.prototype,"operationalLayerType",void 0),r([i(b.outFields)],o.prototype,"outFields",void 0),r([i({readOnly:!0})],o.prototype,"parsedUrl",null),r([i(oe)],o.prototype,"popupEnabled",void 0),r([i({type:T,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),r([i({types:me,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:he}}}})],o.prototype,"renderer",null),r([i(se)],o.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],o.prototype,"source",void 0),r([i({type:S})],o.prototype,"spatialReference",void 0),r([i({type:[ae]})],o.prototype,"templates",void 0),r([i()],o.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),r([i(ne)],o.prototype,"url",null),o=r([I("esri.layers.GeoJSONLayer")],o);const Gt=o;export{Gt as default};
