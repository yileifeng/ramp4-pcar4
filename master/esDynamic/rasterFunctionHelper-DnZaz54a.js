import{U as Ve}from"./colorUtils-D5JAGQF4.js";import{x as c,z as m,K as F,G as Le,bG as We,aF as J,bi as X,o as q,b5 as Os,b6 as Ds,bC as Es,bz as He,bj as qe,D as Vt,B as Kt,kQ as kt,s as Ct}from"./main-BC8gbEPx.js";import{g as A,t as Us,v as $e,w as W,j as ut,o as Vs,r as Ke,i as se,x as Ls,q as ne,y as Je,b as re,z as Xe,A as Ws,B as Y,C as Hs,F as qs,G as $s,H as Ks}from"./dataUtils-DwTUUyvb.js";import{d as Js,x as Xs,y as lt,C as Zs,z as Ze,f as oe,E as Qe,G as Ye,H as Qs,I as Lt,J as Ys,K as Jt,M as ts,O as es,Q as tn,T as en,V as sn,W as ie,X as nn,Y as rn,Z as on}from"./RasterSymbolizer-D6hosp06.js";import{V as an,Z as un}from"./rasterProjectionHelper-7n7CHYkF.js";import{m as ln,p as ss}from"./colorRamps-S73ljYvH.js";import{y as st}from"./Field-CImhaDGk.js";let Xt=class extends Le{constructor(){super(...arguments),this.raster=void 0}};c([m({json:{write:!0}})],Xt.prototype,"raster",void 0),Xt=c([F("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Xt);const D=Xt;var ae;let _t=ae=class extends D{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ae({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([m({json:{write:!0}})],_t.prototype,"operation",void 0),c([m({json:{write:!0}})],_t.prototype,"raster2",void 0),c([m({readOnly:!0})],_t.prototype,"rasters",null),_t=ae=c([F("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],_t);const cn=_t,pn=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let E=class extends Le{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const r=[];for(let u=0;u<n.length;u++){const{parameters:l}=n[u],h=l.rasters||l.raster&&[l.raster];h?.length&&r.push(...h)}n=r}for(let r=e.length-1;r>=0;r--)e[r].isNoopProcess&&e.splice(r,1);let o=!1;for(let r=0;r<e.length;r++){const u=e[r];u.id=e.length-r-1;const{rasters:l}=u.parameters;o=o||l!=null&&l.length>1}const i=e.some(({name:r})=>pn.has(r.toLowerCase())),{rawSourceRasterInfos:a}=this;return{functions:e,hasBranches:o,hasFocalFunction:i,isSourceSingleBand:a?.[0]?.bandCount===1}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let o=!0;for(let i=0;i<n.length;i++){const a=n[i];if(a!=null&&this._isRasterFunctionValue(a)){const r=a.bind(t,e,this.id+i);if(!r.success)return this._bindingResult=r,r;o=o&&r.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const o=t.map(a=>a.processInputBandIds()[0]);this.rawInputBandIds=o,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((a,r)=>a!==r);const i=t.filter(a=>a.functionName==="ExtractBand");return i.length&&i.forEach((a,r)=>{a.isInputBandIdsSwizzled=!0,a.swizzledBandSelection=[r,r,r]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:o}=this.sourceRasterInfos[0];for(let i=0;i<o;i++)e.push(i)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some((o,i)=>o!==i),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():typeof n=="number"?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>n!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(n=>{if(this._isRasterFunctionValue(n)){const o=n.getClippingGeometries();t.push(...o)}});else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach(e=>{e.statistics=void 0,e.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(e.length===0)return s;const o=e.map(a=>a&&typeof a=="object"&&"bind"in a&&a.rasterInfo?a.rasterInfo:typeof a=="string"&&n.includes(a)?s[n.indexOf(a)]:typeof a!="number"?s[0]:void 0),i=o.find(a=>a)??s[0];return o.forEach((a,r)=>{a===void 0&&(o[r]=i)}),o}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const o=t.sourceRasters[n];if(typeof o!="number")if("bind"in o)this._getPrimaryRasters(o,e,s);else{const i=o,a=this._getPrimaryRasterId(i);if(a==null)continue;s.includes(a)||(this.mainPrimaryRasterId===a?(e.unshift(i),s.unshift(a)):(e.push(i),s.push(a)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const n=s[0];return n==null?null:n.clone()}if(typeof t=="string"){const n=e.primaryRasterIds.indexOf(t);return n===-1?null:s[n]}if(typeof t=="number"){const n=s[0];if(n==null)return null;const{width:o,height:i,pixelType:a}=n,r=new Float32Array(o*i);r.fill(t);const u=this.sourceRasterInfos[0].bandCount,l=new Array(u).fill(r);return new A({width:o,height:i,pixelType:a,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:o}=t,i=s.BandProperties;i&&i.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),o&&o.length!==e&&(t.histograms=o.length>e?o.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};c([m({json:{write:!0}})],E.prototype,"functionName",void 0),c([m({json:{write:!0}})],E.prototype,"functionArguments",void 0),c([m()],E.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}}),We(t=>t?.toLowerCase())],E.prototype,"outputPixelType",void 0),c([m({json:{write:!0}})],E.prototype,"mainPrimaryRasterId",void 0),c([m()],E.prototype,"sourceRasters",void 0),c([m({type:[Js],json:{write:!0}})],E.prototype,"sourceRasterInfos",void 0),c([m({json:{write:!0}})],E.prototype,"rasterInfo",void 0),c([m({json:{write:!0}})],E.prototype,"readingBufferSize",void 0),c([m({json:{write:!0}})],E.prototype,"id",void 0),c([m()],E.prototype,"isNoopProcess",void 0),c([m()],E.prototype,"supportsGPU",null),c([m()],E.prototype,"rawInputBandIds",void 0),c([m()],E.prototype,"rawSourceRasterInfos",void 0),c([m()],E.prototype,"isInputBandIdsSwizzled",void 0),c([m()],E.prototype,"swizzledBandSelection",void 0),c([m()],E.prototype,"isBranch",void 0),c([m({readOnly:!0})],E.prototype,"flatWebGLFunctionChain",null),c([m()],E.prototype,"_bindingResult",void 0),E=c([F("esri.layers.support.rasterFunctions.BaseRasterFunction")],E);const M=E,S={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},hn={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},H={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},$={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},mn={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},ns={setNull:50,conditional:78},rs={...hn,...H,...$,...mn,...ns},os=new Map([[$.acos,{domain:[0,Math.PI],isInteger:!1}],[$.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[$.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[$.cos,{domain:[-1,1],isInteger:!1}],[$.sin,{domain:[-1,1],isInteger:!1}],[H.booleanAnd,{domain:[0,1],isInteger:!0}],[H.booleanNot,{domain:[0,1],isInteger:!0}],[H.booleanOr,{domain:[0,1],isInteger:!0}],[H.booleanXOr,{domain:[0,1],isInteger:!0}],[H.equalTo,{domain:[0,1],isInteger:!0}],[H.notEqual,{domain:[0,1],isInteger:!0}],[H.greaterThan,{domain:[0,1],isInteger:!0}],[H.greaterThanEqual,{domain:[0,1],isInteger:!0}],[H.lessThan,{domain:[0,1],isInteger:!0}],[H.lessThanEqual,{domain:[0,1],isInteger:!0}],[H.isNull,{domain:[0,1],isInteger:!0}]]);function is(t){return os.get(t)}const as=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function dn(t,e=!1){const s=t.map(r=>r.mask),n=s.filter(r=>r!=null),o=t[0].pixels[0].length;if(n.length===0||e&&n.length!==s.length)return new Uint8Array(o).fill(255);const i=n[0],a=new Uint8Array(i);if(n.length===1)return a;if(!e){for(let r=1;r<n.length;r++){const u=n[r];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}for(let r=1;r<n.length;r++){const u=n[r];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function fn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]+o[r]);return a}function gn(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand("f32",o);return i.set(n),i}function yn(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]*n[a]);return i}function xn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]-o[r]);return a}function wn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]*o[r]);return a}function bn(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=Math.sign(n[a])*Math.floor(Math.abs(n[a])));return i}function us(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]/o[r]);return a}function vn(t,e,s){return us(t,e,"f32")}function An(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=Math.floor(n[r]/o[r]));return a}function Tn(t,e,s,n){const o=t[0],i=o.length,a=A.createEmptyBand(s,i);if(n===$.atanh){for(let u=0;u<i;u++)if(e[u]){const l=o[u];Math.abs(l)>=1?e[u]=0:a[u]=Math.atanh(l)}return a}const r=n===$.asin?Math.asin:Math.acos;for(let u=0;u<i;u++)if(e[u]){const l=o[u];Math.abs(l)>1?e[u]=0:a[u]=r(l)}return a}function Pn(t,e,s,n){const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n(o[r]));return a}function Fn(t,e,s,n){const[o,i]=t,a=o.length,r=A.createEmptyBand(s,a);for(let u=0;u<a;u++)e&&!e[u]||(r[u]=n(o[u],i[u]));return r}function Nn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]&o[r]);return a}function Rn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]<<o[r]);return a}function In(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=~n[a]);return i}function kn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]|o[r]);return a}function Cn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]>>o[r]);return a}function _n(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]^o[r]);return a}function Sn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]&&o[r]?1:0);return a}function Bn(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=n[a]?0:1);return i}function jn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]||o[r]?1:0);return a}function Mn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=(n[r]?1:0)^(o[r]?1:0));return a}function Gn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]===o[r]?1:0);return a}function ue(t,e,s,n){const[o]=t,i=o.length,a=A.createEmptyBand(s,i),r=n===Math.E;for(let u=0;u<i;u++)e&&!e[u]||(a[u]=r?Math.exp(o[u]):n**o[u]);return a}function zn(t,e,s){return ue(t,e,s,10)}function On(t,e,s){return ue(t,e,s,2)}function Dn(t,e,s){return ue(t,e,s,Math.E)}function le(t,e,s,n){const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(o[r]<=0?e[r]=0:a[r]=n(o[r]));return a}function En(t,e,s){return le(t,e,s,Math.log10)}function Un(t,e,s){return le(t,e,s,Math.log2)}function Vn(t,e,s){return le(t,e,s,Math.log)}function Ln(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]>o[r]?1:0);return a}function Wn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]>=o[r]?1:0);return a}function Hn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]<o[r]?1:0);return a}function qn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]<=o[r]?1:0);return a}function $n(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand(s,o);if(!e)return i;for(let a=0;a<o;a++)i[a]=e[a]?0:1;return i}function Kn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]%o[r]);return a}function Jn(t,e,s){const[n]=t,o=n.length,i=A.createEmptyBand(s,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=-n[a]);return i}function Xn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]===o[r]?0:1);return a}function Zn(t,e,s){const[n,o]=t,i=n.length,a=A.createEmptyBand(s,i),r=new Uint8Array(i);for(let u=0;u<i;u++)e!=null&&!e[u]||n[u]!==0||(a[u]=o[u],r[u]=255);return{band:a,mask:r}}function ls(t,e,s){const[n,o,i]=t,a=n.length,r=A.createEmptyBand(s,a);for(let u=0;u<a;u++)e&&!e[u]||(r[u]=n[u]?o[u]:i[u]);return r}function cs(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!e||e[r]){let u=o[r];for(let l=1;l<n;l++){const h=t[l][r];u<h&&(u=h)}a[r]=u}return a}function ps(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!e||e[r]){let u=o[r];for(let l=1;l<n;l++){const h=t[l][r];u>h&&(u=h)}a[r]=u}return a}function hs(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!e||e[r]){let u=o[r],l=u;for(let h=1;h<n;h++){const p=t[h][r];l<p?l=p:u>p&&(u=p)}a[r]=l-u}return a}function ms(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!e||e[r]){let u=0;for(let l=0;l<n;l++)u+=t[l][r];a[r]=u/n}return a}function ds(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!e||e[r])for(let u=0;u<n;u++){const l=t[u];a[r]+=l[r]}return a}function fs(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!e||e[r]){const u=new Float32Array(n);let l=0;for(let p=0;p<n;p++){const d=t[p];l+=d[r],u[p]=d[r]}l/=n;let h=0;for(let p=0;p<n;p++)h+=(u[p]-l)**2;a[r]=Math.sqrt(h/n)}return a}function gs(t,e,s){const n=t.length;if(n<2)return t[0];const o=Math.floor(n/2),[i]=t,a=i.length,r=A.createEmptyBand(s,a),u=new Float32Array(n),l=n%2==1;for(let h=0;h<a;h++)if(!e||e[h]){for(let p=0;p<n;p++)u[p]=t[p][h];u.sort(),r[h]=l?u[o]:(u[o]+u[o-1])/2}return r}function ys(t,e,s){const[n,o]=t;if(o==null)return n;const i=n.length,a=A.createEmptyBand(s,i);for(let r=0;r<i;r++)e&&!e[r]||(a[r]=n[r]<o[r]?n[r]:o[r]);return a}function xs(t,e,s){const n=t.length;if(n<=2)return ys(t,e,s);const o=t[0].length,i=A.createEmptyBand(s,o),a=new Map;for(let r=0;r<o;r++)if(!e||e[r]){a.clear();for(let p=0;p<n;p++){const d=t[p][r];a.set(d,a.has(d)?a.get(d)+1:1)}let u=0,l=0;const h=[];for(const p of a.keys())u=a.get(p),u>l?(l=u,h.length=0,h.push(p)):u===l&&h.push(p);h.length>1&&h.sort((p,d)=>p-d),i[r]=h[0]}return i}function ws(t,e,s){const n=t.length;if(n<=2)return ys(t,e,s);const o=t[0].length,i=A.createEmptyBand(s,o),a=new Map;for(let r=0;r<o;r++)if(!e||e[r]){a.clear();for(let p=0;p<n;p++){const d=t[p][r];a.set(d,a.has(d)?a.get(d)+1:1)}let u=0,l=t.length;const h=[];for(const p of a.keys())u=a.get(p),u<l?(l=u,h.length=0,h.push(p)):u===l&&h.push(p);h.length>1&&h.sort((p,d)=>p-d),i[r]=h[0]}return i}function bs(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,i=o.length,a=A.createEmptyBand(s,i),r=new Set;for(let u=0;u<i;u++)if(!e||e[u]){let l;r.clear();for(let h=0;h<n;h++)l=t[h][u],r.add(l);a[u]=r.size}return a}const U=new Map,Zt=new Map,I=new Map,G=new Map;function Qn(){U.size||(U.set(4,Math.sqrt),U.set(6,Math.acos),U.set(7,Math.asin),U.set(8,Math.atan),U.set(9,Math.atanh),U.set(10,Math.abs),U.set(21,Math.cos),U.set(22,Math.cosh),U.set(48,Math.floor),U.set(49,Math.ceil),U.set(51,Math.sin),U.set(52,Math.sinh),U.set(56,Math.tan),U.set(57,Math.tanh),U.set(59,Math.acosh),U.set(60,Math.asinh),U.set(65,Math.floor),Zt.set(5,Math.pow),Zt.set(61,Math.atan2),I.set(1,fn),I.set(2,xn),I.set(3,wn),I.set(11,Nn),I.set(12,Rn),I.set(13,In),I.set(14,kn),I.set(15,Cn),I.set(16,_n),I.set(17,Sn),I.set(18,Bn),I.set(19,jn),I.set(20,Mn),I.set(23,us),I.set(24,Gn),I.set(25,Dn),I.set(26,zn),I.set(27,On),I.set(28,Ln),I.set(29,Wn),I.set(30,bn),I.set(31,$n),I.set(32,gn),I.set(33,Hn),I.set(34,qn),I.set(35,Vn),I.set(36,En),I.set(37,Un),I.set(44,Kn),I.set(45,Jn),I.set(46,Xn),I.set(53,yn),I.set(64,vn),I.set(65,An),I.set(76,ls),I.set(78,ls),G.set(38,xs),G.set(39,cs),G.set(40,ms),G.set(41,gs),G.set(42,ps),G.set(43,ws),G.set(47,hs),G.set(54,fs),G.set(55,ds),G.set(58,bs),G.set(66,xs),G.set(67,cs),G.set(68,ms),G.set(69,gs),G.set(70,ps),G.set(71,ws),G.set(72,hs),G.set(73,fs),G.set(74,ds),G.set(75,bs))}function vs(t,e,s={}){Qn();let n=dn(t,e>=66&&e<=75);const{outputPixelType:o="f32"}=s,i=!G.has(e)||s.processAsMultiband,a=i?t[0].pixels.length:1,r=[];for(let l=0;l<a;l++){const h=G.has(e)&&!i?t.flatMap(g=>g.pixels):t.map(g=>g.pixels[l]);let p,d=!0;if(e===ns.setNull){const g=Zn(h,n,o);p=g.band,n=g.mask,d=!1}else I.has(e)?p=I.get(e)(h,n,"f64"):U.has(e)?p=e===$.asin||e===$.acos||e===$.atanh?Tn(h,n,"f64",e):Pn(h,n,"f64",U.get(e)):Zt.has(e)?p=Fn(h,n,"f64",Zt.get(e)):G.has(e)?p=G.get(e)(h,n,"f64"):(p=h[0],d=!1);if(d&&e!==H.isNull&&!os.has(e)){const g=A.createEmptyBand(o,p.length);n||(n=new Uint8Array(p.length).fill(255)),Us(p,n),$e(p,n,o,g),p=g}r.push(p)}const u=t[0];return new A({width:u.width,height:u.height,pixelType:o,mask:e===H.isNull?null:n,pixels:r})}function Yn(t,e,s){return vs(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}let St=class extends M{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?.[0]==null||e?.[1]==null?null:Yn(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,o]=ut(s);const i=W(s);return i&&(n-=1e-4,o+=1e-4),{imageCount:2,operationName:e,domainRange:[n,o],isOutputRounded:i}}};c([m({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),c([m({type:cn,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),c([m()],St.prototype,"rasterArgumentNames",void 0),St=c([F("esri.layers.support.rasterFunctions.ArithmeticFunction")],St);const tr=St;var ce;let pe=ce=class extends D{clone(){return new ce({raster:this.raster})}};pe=ce=c([F("esri.layers.support.rasterFunctions.AspectFunctionArguments")],pe);const er=pe;let ct=class extends M{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{extent:s,primaryPixelSizes:n}=t,o=n?.[0],i=o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return Xs(e,{resolution:i})}};c([m({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([m({type:er,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([m()],ct.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ct.prototype,"isGCS",void 0),ct=c([F("esri.layers.support.rasterFunctions.AspectFunction")],ct);const sr=ct,nr=new Set(["+","-","*","/","(",")"]);function rr(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const s=t.split(""),n=[],o=[];let i="";for(let a=0;a<s.length;a++){const r=s[a];nr.has(r)?(i.length&&o.push(As(i,e)),n.push(r),i=""):i=i.concat(r)}return i.length&&o.push(As(i,e)),{ops:n,nums:o}}function As(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function or(t,e,s,n){if(typeof s=="number"&&typeof n=="number")return s+n;let o,i,a;typeof s=="number"?(a=n,o=a.length,i=new Float32Array(o),i.fill(s)):(o=s.length,i=s,n.constructor===Number?(a=new Float32Array(o),a.fill(n)):a=n);const r=new Float32Array(o);switch(e){case"+":for(let u=0;u<o;u++)(t==null||t[u])&&(r[u]=i[u]+a[u]);break;case"-":for(let u=0;u<o;u++)(t==null||t[u])&&(r[u]=i[u]-a[u]);break;case"*":for(let u=0;u<o;u++)(t==null||t[u])&&(r[u]=i[u]*a[u]);break;case"/":for(let u=0;u<o;u++)(t==null||t[u])&&a[u]&&(r[u]=i[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return r}function ir(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let o=0;o<t.length;o++)if(t[o]==="(")s=o;else if(t[o]===")"){n=o;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function ar(t){if(t.length===1)return{opIndex:0,numIndex:0};let e=0,s=0;for(let a=0;a<t.length;a++)if(t[a]==="(")e=a;else if(t[a]===")"){s=a;break}const n=s===0?t:t.slice(e+1,s);let o=-1;for(let a=0;a<n.length;a++)if(n[a]==="*"||n[a]==="/"){o=a;break}if(o>-1)s>0&&(o+=e+1);else{for(let a=0;a<n.length;a++)if(n[a]==="+"||n[a]==="-"){o=a;break}s>0&&(o+=e+1)}let i=0;for(let a=0;a<o;a++)t[a]==="("&&i++;return{opIndex:o,numIndex:o-i}}function ur(t,e,s){let n,{ops:o,nums:i}=rr(s,e);if(o.length===0){const a=i.length===1?i[0]:e[0];if(a instanceof Float32Array)return[a];const r=new Float32Array(e[0].length);return typeof a=="number"?r.fill(a):r.set(a),[r]}for(;o.length>0;){const{numIndex:a,opIndex:r}=ar(o);if(n=or(t,o[r],i[a],i[a+1]),o.length===1)break;o=ir(o,r),i.splice(a,2,n)}return[n]}const lr=new J({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function cr(t,e){if(!Vs(t))return t;const{equation:s,method:n}=e,o=e.bandIndexes.map(d=>d-1),{pixels:i,mask:a}=t;let r;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":r=Ts(a,i[o[0]],i[o[1]]);break;case"ndwi":r=Ts(a,i[o[1]],i[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":r=hr(a,i[o[0]],i[o[1]]);break;case"ci-g":case"ci-re":r=mr(a,i[o[0]],i[o[1]]);break;case"savi":r=dr(a,i[o[0]],i[o[1]],o[2]+1);break;case"tsavi":r=fr(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":r=gr(a,i[o[0]],i[o[1]]);break;case"gemi":r=yr(a,i[o[0]],i[o[1]]);break;case"pvi":r=xr(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1);break;case"gvitm":r=wr(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"sultan":r=br(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]]]);break;case"vari":r=vr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"mtvi2":r=Ar(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"rtvi-core":r=Tr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"evi":r=Pr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"wndwi":r=Fr(a,[i[o[0]],i[o[1]],i[o[2]]],o[3]?o[3]+1:.5);break;case"bai":r=Nr(a,i[o[0]],i[o[1]]);break;case"custom":r=ur(a,i,s);break;default:return t}const{outputPixelType:u="f32"}=e,l=u!=null&&W(u);let h;a?(h=new Uint8Array(t.width*t.height),h.set(a)):l&&(h=new Uint8Array(t.width*t.height).fill(255)),l&&(r=r.map(d=>{const g=A.createEmptyBand(u,d.length);return $e(d,h,u,g),g}));const p=new A({width:t.width,height:t.height,pixelType:u,pixels:r,mask:h});return p.updateStatistics(),p}function pr(t,e,s,n){const{mask:o,pixels:i,width:a,height:r}=t,u=i[s],l=i[e],h=l.length,p=n?new Uint8Array(h):new Float32Array(h),d=n?100:1,g=n?100.5:0;for(let x=0;x<h;x++)if(o==null||o[x]){const f=u[x],b=l[x],w=f+b;w&&(p[x]=(f-b)/w*d+g)}const y=new A({width:a,height:r,mask:o,pixelType:n?"u8":"f32",pixels:[p]});return y.updateStatistics(),y}function V(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Ts(t,e,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(t==null||t[i]){const a=e[i],r=s[i],u=a+r;u&&(o[i]=(a-r)/u)}return[o]}function hr(t,e,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(t==null||t[i]){const a=e[i],r=s[i];r&&(o[i]=a/r)}return[o]}function mr(t,e,s){const n=e.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(t==null||t[i]){const a=e[i],r=s[i];r&&(o[i]=a/r-1)}return[o]}function dr(t,e,s,n){const o=s.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(t==null||t[a]){const r=s[a],u=e[a],l=u+r+n;l&&(i[a]=(u-r)/l*(1+n))}return[i]}function fr(t,e,s,n,o,i){const a=s.length,r=new Float32Array(a),u=-o*n+i*(1+n*n);for(let l=0;l<a;l++)if(t==null||t[l]){const h=s[l],p=e[l],d=o*p+h+u;d&&(r[l]=n*(p-n*h-o)/d)}return[r]}function gr(t,e,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(t==null||t[i]){const a=s[i],r=e[i],u=2*r+1;o[i]=.5*(u-Math.sqrt(u*u-8*(r-a)))}return[o]}function yr(t,e,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(t==null||t[i]){const a=s[i],r=e[i];if(a!==1&&r+a+.5!==0){const u=(2*(r*r-a*a)+1.5*r+.5*a)/(r+a+.5);o[i]=u*(1-.25*u)-(a-.125)/(1-a)}}return[o]}function xr(t,e,s,n,o){const i=s.length,a=new Float32Array(i),r=1/Math.sqrt(1+n*n);for(let u=0;u<i;u++)if(t==null||t[u]){const l=s[u],h=e[u];a[u]=(h-n*l-o)*r}return[a]}function wr(t,e){const[s,n,o,i,a,r]=e,u=s.length,l=new Float32Array(u);for(let h=0;h<u;h++)(t==null||t[h])&&(l[h]=-.2848*s[h]-.2435*n[h]-.5436*o[h]+.7243*i[h]+.084*a[h]-.18*r[h]);return[l]}function br(t,e){const[s,n,o,i,a]=e,r=s.length,u=new Float32Array(r),l=new Float32Array(r),h=new Float32Array(r);for(let p=0;p<r;p++)(t==null||t[p])&&(u[p]=a[p]?i[p]/a[p]*100:0,l[p]=s[p]?i[p]/s[p]*100:0,h[p]=o[p]?n[p]/o[p]*(i[p]/o[p])*100:0);return[u,l,h]}function vr(t,e){const[s,n,o]=e,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(t==null||t[r])for(r=0;r<i;r++){const u=s[r],l=n[r],h=l+u-o[r];h&&(a[r]=(l-u)/h)}return[a]}function Ar(t,e){const[s,n,o]=e,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(t==null||t[r])for(r=0;r<i;r++){const u=s[r],l=n[r],h=o[r],p=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(p){const d=1.5*(1.2*(u-h)-2.5*(l-h));a[r]=d/p}}return[a]}function Tr(t,e){const[s,n,o]=e,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(t==null||t[r])for(r=0;r<i;r++){const u=s[r],l=n[r],h=o[r];a[r]=100*(u-l)-10*(u-h)}return[a]}function Pr(t,e){const[s,n,o]=e,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(t==null||t[r])for(r=0;r<i;r++){const u=s[r],l=n[r],h=u+6*l-7.5*o[r]+1;h&&(a[r]=2.5*(u-l)/h)}return[a]}function Fr(t,e,s=.5){const[n,o,i]=e,a=o.length,r=new Float32Array(a);for(let u=0;u<a;u++)if(t==null||t[u])for(u=0;u<a;u++){const l=n[u],h=o[u],p=i[u],d=l+s*h+(1-s)*p;d&&(r[u]=(l-s*h-(1-s)*p)/d)}return[r]}function Nr(t,e,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(t==null||t[i])for(i=0;i<n;i++){const a=(.1-e[i])**2+(.06-s[i])**2;a&&(o[i]=1/a)}return[o]}var he;let Wt=he=class extends D{constructor(){super(...arguments),this.method="custom"}clone(){return new he({method:this.method,bandIndexes:this.bandIndexes,raster:q(this.raster)})}};c([m({json:{type:String,write:!0}})],Wt.prototype,"bandIndexes",void 0),c([X(lr)],Wt.prototype,"method",void 0),Wt=he=c([F("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Wt);const Rr=Wt,Ir=new Set(["vari","mtvi2","rtvi-core","evi"]);let Bt=class extends M{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{method:s,bandIndexes:n}=this.functionArguments,o=n.split(" ").map(i=>parseFloat(i));return cr(e,{method:s,bandIndexes:o,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const o=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=V([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=V([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=V([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=V([e[0],e[1],0]),n="ci";break;case"savi":s=V([e[0],e[1],0]),n="savi",o[0]=t[2]+1;break;case"tsavi":s=V([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":s=V([e[0],e[1],0]),n="msavi";break;case"gemi":s=V([e[0],e[1],0]),n="gemi";break;case"pvi":s=V([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":s=V([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=V([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=V([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=V([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=V([e[0],e[1],0]),n="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":s=V([e[1],e[0],0]),n="bai";break;default:s=V([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:o,isOutputRounded:W(this.outputPixelType)}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1),s=t.length,n=e.map(a=>a>=s?s-1:a),o=Ir.has(this.functionArguments.method)?3:2,i=n.slice(0,o).map(a=>t[a]);return i.length===2&&i.push(0),i}};c([m({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),c([m({type:Rr,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),c([m()],Bt.prototype,"rasterArgumentNames",void 0),Bt=c([F("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Bt);const kr=Bt;var me;const Ps=new J({1:"outside",2:"inside"},{useNumericKeys:!0});let Ht=me=class extends D{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new me({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([m({types:Os,json:{read:Ds,write:!0}})],Ht.prototype,"clippingGeometry",void 0),c([m({json:{read:Ps.read,write:Ps.write}})],Ht.prototype,"clippingType",void 0),Ht=me=c([F("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Ht);const Cr=Ht;function _r(t,e){if(t.spatialReference.equals(e))return t;const s=qe(t.spatialReference),n=qe(e);if(s===n)return t;const o=s/n;return{x:t.x*o,y:t.y*o}}async function Sr(t,e,s){if(s.type==="extent")return jr(t,e,s);const{width:n,height:o}=t,i=new Uint8Array(n*o),{contains:a,intersects:r}=await import("./geometryEngine-BhiInAau.js");return r(e,s)?s.type==="polyline"?Mr(t,e,s):a(s,e)?t:Br(t,e,s):new A({pixelType:t.pixelType,width:n,height:o,mask:i,maskIsAlpha:!1,pixels:[...t.pixels]})}function Br(t,e,s){if(!t)return t;const{width:n,height:o}=t,i=e.width/n,a=e.height/o,{xmin:r,ymax:u}=e;let l;if(s.type==="extent"){const f=(s.xmin-r)/i,b=(s.xmax-r)/i,w=(u-s.ymax)/a,v=(u-s.ymin)/a;l=[[[f,w],[f,v],[b,v],[b,w],[f,w]]]}else l=s.rings.map(f=>f.map(([b,w])=>[(b-r)/i,(u-w)/a]));const h=document.createElement("canvas");h.width=n,h.height=o;const p=h.getContext("2d");p.fillStyle="#f00",p.beginPath(),l.forEach(f=>{p.moveTo(f[0][0],f[0][1]);for(let b=0;b<f.length;b++)p.lineTo(f[b][0],f[b][1]);p.closePath()}),p.fill();const d=p.getImageData(0,0,n,o).data,g=t.mask,y=n*o,x=new Uint8Array(y);for(let f=0;f<y;f++)g&&!g[f]||(x[f]=d[4*f+3]>127?255:0);return new A({pixelType:t.pixelType,width:n,height:o,mask:x,maskIsAlpha:!1,pixels:[...t.pixels]})}function jr(t,e,s){const{width:n,height:o}=t,i=new Uint8Array(n*o),a=e.width/n,r=e.height/o;if(s.width/a<.5||s.height/r<.5)return new A({pixelType:t.pixelType,width:n,height:o,mask:i,pixels:[...t.pixels]});const{xmin:u,xmax:l,ymin:h,ymax:p}=e,{xmin:d,xmax:g,ymin:y,ymax:x}=s,f=Math.max(u,d),b=Math.min(l,g),w=Math.max(h,y),v=Math.min(p,x),T=.5*a,N=.5*r;if(b-f<T||v-w<N||b<u+T||f>l-T||w>p-N||v<h+N)return new A({pixelType:t.pixelType,width:n,height:o,mask:i,pixels:[...t.pixels]});const P=Math.max(0,(f-u)/a),R=Math.min(n,Math.max(0,(b-u)/a)),_=Math.max(0,(p-v)/r),k=Math.min(o,Math.max(0,(p-w)/r)),C=Math.round(P),B=Math.round(R)-1,O=Math.round(_),Q=Math.round(k)-1;if(C===B&&P%1>.5&&R%1<.5||O===Q&&_%1>.5&&k%1<.5)return new A({pixelType:t.pixelType,width:n,height:o,mask:i,pixels:[...t.pixels]});if(C===0&&O===0&&B===n&&Q===o)return t;const Ee=t.mask;for(let te=O;te<=Q;te++)for(let ee=C;ee<=B;ee++){const Ue=te*n+ee;i[Ue]=Ee?Ee[Ue]:255}return new A({pixelType:t.pixelType,width:n,height:o,mask:i,pixels:[...t.pixels]})}function Mr(t,e,s){const{width:n,height:o}=t,i=new Uint8Array(n*o),a=e.width/n,r=e.height/o,{xmin:u,ymax:l}=e,{paths:h}=s,p=t.mask;for(let d=0;d<h.length;d++){const g=h[d];for(let y=0;y<g.length-1;y++){const[x,f]=g[y],[b,w]=g[y+1];let v=Math.floor((l-f)/r),T=Math.floor((l-w)/r);if(T<v){const P=v;v=T,T=P}v=Math.max(0,v),T=Math.min(o-1,T);const N=(b-x)/(w-f);for(let P=v;P<=T;P++){const R=P===v?Math.max(f,w):(o+1-P)*r,_=P===T?Math.min(f,w):R-r;let k=Math.floor(w===f?(x-u)/a:(N*(R-f)+x-u)/a),C=Math.floor(w===f?(b-u)/a:(N*(_-f)+x-u)/a);if(C<k){const O=k;k=C,C=O}const B=P*n;k=Math.max(0,k),C=Math.min(n-1,C);for(let O=B+k;O<=B+C;O++)i[O]=p?p[O]:255}}}return new A({pixelType:t.pixelType,width:n,height:o,mask:i,pixels:[...t.pixels]})}function Gr(t,e){const{extent:s}=Fs(t,e,new Es({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:n}=t.extent;if(s.xmax=Math.min(s.xmax,n.xmax),s.ymax=Math.min(s.ymax,n.ymax),s.xmin<s.xmax&&s.ymin<s.ymax){const{x:o,y:i}=t.pixelSize,a=Math.round(s.width/o),r=Math.round(s.height/i);t.extent=s,t.width=a,t.height=r}}function Fs(t,e,s,n=!0){const{spatialReference:o}=t,{x:i,y:a}=_r(s,o);let r,u,l;const h=e.type==="extent"?e:e.extent;let{xmin:p,xmax:d,ymax:g,ymin:y}=h;const{xmin:x,ymax:f}=t.extent;return n?(p=x+(p>x?i*Math.round((p-x)/i):0),g=f-(g<f?a*Math.round((f-g)/a):0),d=x+(d>x?i*Math.round((d-x)/i):0),y=f-(y<f?a*Math.round((f-y)/a):0),r=new He({xmin:p,ymax:g,xmax:d,ymin:y,spatialReference:o}),u=Math.round(r.width/i),l=Math.round(r.height/a)):(u=Math.floor((d-p)/i+.8),l=Math.floor((g-y)/a+.8),p=x+(p>x?i*Math.floor((p-x)/i+.1):0),g=f-(g<f?a*Math.floor((f-g)/a+.1):0),d=p+u*i,y=g-l*a,r=new He({xmin:p,ymax:g,xmax:d,ymin:y,spatialReference:o})),{extent:r,width:u,height:l}}let pt=class extends M{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:n}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(n==="outside")try{const{spatialReference:o}=t,i=s.type==="extent"?an(s,o):un(s,o).extent;i&&Gr(t,i)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([m({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),c([m({type:Cr,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),c([m()],pt.prototype,"rasterArgumentNames",void 0),c([m()],pt.prototype,"isNoopProcess",void 0),pt=c([F("esri.layers.support.rasterFunctions.ClipFunction")],pt);const zr=pt;var de;let Z=de=class extends D{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return Zs.includes(e)?e:null}readColorRamp(t){return ss(t)}readColorRampName(t,e){if(!t)return null;const s=lt.jsonValues.find(n=>n.toLowerCase()===t.toLowerCase());return s?lt.fromJSON(s):null}clone(){return new de({colormap:q(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};c([m({type:[[Number]],json:{write:!0}})],Z.prototype,"colormap",void 0),c([m({type:String,json:{write:!0}})],Z.prototype,"colormapName",void 0),c([We("colormapName")],Z.prototype,"castColormapName",null),c([m({types:ln,json:{write:!0}})],Z.prototype,"colorRamp",void 0),c([Vt("colorRamp")],Z.prototype,"readColorRamp",null),c([m({type:lt.apiValues,json:{type:lt.jsonValues,write:lt.write}})],Z.prototype,"colorRampName",void 0),c([Vt("colorRampName")],Z.prototype,"readColorRampName",null),Z=de=c([F("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],Z);const Or=Z,Dr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Er=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function fe(t,e){const s=[],n=[];for(let i=0;i<t.length-1;i++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[i].slice(1),toColor:t[i+1].slice(1)}),n.push(t[i+1][0]-t[i][0]);const o=t[t.length-1][0];return Ze({type:"multipart",colorRamps:s},{numColors:o,weights:e=e??n})}function Ur(){return fe([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function Vr(){const t=fe([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function Lr(){return Ze({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Wr(){const t=[];for(let e=0;e<256;e++){const s=[];for(let n=0;n<3;n++)s.push(Math.round(255*Math.random()));t.push(s)}return t}function Hr(){return fe([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function qr(t){let e;switch(t){case"elevation":e=Ur();break;case"gray":e=Lr();break;case"hillshade":e=Hr();break;case"ndvi":e=Dr;break;case"ndvi2":e=Vr();break;case"ndvi3":e=Er;break;case"random":e=Wr()}return e?(e=e.map((s,n)=>[n,...s]),e):null}let tt=class extends M{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:o}=this.functionArguments;if(!e?.length)if(n)this.colorRamp=n,e=oe(n,{interpolateAlpha:!0});else if(o){const r=Qe(o);r&&(e=oe(r),this.colorRamp=ss(r))}else s&&(e=qr(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=e,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||W(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([m({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),c([m({type:Or,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),c([m()],tt.prototype,"rasterArgumentNames",void 0),c([m()],tt.prototype,"isNoopProcess",void 0),c([m({json:{write:!0}})],tt.prototype,"indexedColormap",void 0),c([m()],tt.prototype,"colorRamp",void 0),tt=c([F("esri.layers.support.rasterFunctions.ColormapFunction")],tt);const $r=tt;var ge;let ye=ge=class extends D{clone(){return new ge({raster:this.raster})}};ye=ge=c([F("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],ye);const Kr=ye;let ht=class extends M{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort((i,a)=>i[0]-a[0]),{indexedColormap:n,offset:o}=Ke({colormap:s});return n?(this.lookup={indexedColormap:n,offset:o},{success:!0,supportsGPU:Ye(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],n=e.mask??new Uint8Array(s.length).fill(255),o=new Uint8Array(s.length),i=new Uint8Array(s.length),a=new Uint8Array(s.length),{indexedColormap:r,offset:u}=this.lookup,l=r.length;for(let h=0;h<s.length;h++)if(n[h]){let p=4*(s[h]-u);p<0||p>l-4?n[h]=0:(o[h]=r[p++],i[h]=r[p++],a[h]=r[p++])}return e.pixels=[o,i,a],e.statistics=[new se(0,255),new se(0,255),new se(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};c([m({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),c([m({type:Kr,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),c([m()],ht.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ht.prototype,"lookup",void 0),ht=c([F("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],ht);const Jr=ht;var xe;let qt=xe=class extends D{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new xe({rasters:q(this.rasters)})}};c([m({json:{write:!0}})],qt.prototype,"rasters",void 0),c([Kt("rasters")],qt.prototype,"writeRasters",null),qt=xe=c([F("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],qt);const Xr=qt;let jt=class extends M{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:o})=>o).reduce((o,i)=>o+i),t.every(({statistics:o})=>o!=null&&o.length)){const o=[];t.forEach(({statistics:i})=>i!=null&&o.push(...i)),s.statistics=o}if(t.every(({histograms:o})=>o!=null&&o.length)){const o=[];t.forEach(({histograms:i})=>i!=null&&o.push(...i)),s.histograms=o}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach(o=>{const i=t.map(u=>u.multidimensionalInfo?.variables.find(({name:l})=>l===o.name)),a=i.map(u=>u?.statistics?.length?u.statistics:null),r=i.map(u=>u?.histograms?.length?u.histograms:null);o.statistics=a.every(u=>u!=null)?a.flat():null,o.histograms=r.every(u=>u!=null)?r.flat():null}),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every(o=>o.keyProperties.BandProperties?.length)?t.flatMap(o=>o.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?e?.[0]==null?null:Ls(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([m({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),c([m({type:Xr,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),c([m()],jt.prototype,"rasterArgumentNames",void 0),jt=c([F("esri.layers.support.rasterFunctions.CompositeBandFunction")],jt);const Zr=jt,Qr=new J({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Yr=new J({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function to(t,e,s,n){const[o,i]=t,a=W(s)&&!W(o.pixelType)&&!W(i.pixelType),r=[o.mask,i.mask].filter(y=>y),u=A.combineBandMasks(r),l=t.map(y=>y.pixels[0]),{width:h,height:p}=o,d=A.createEmptyBand(s,h*p);switch(e){case"difference":case"relative-difference":eo({bands:l,mask:u,outBand:d,isRoundingNeeded:a,isRelative:e==="relative-difference"});break;case"categorical":so({bands:l,mask:u,outBand:d,...n});break;case"euclidean-distance":no({pixels:t.map(y=>y.pixels),mask:u,outBand:d});break;case"angle-difference":ro({pixels:t.map(y=>y.pixels),mask:u,outBand:d});break;case"band-with-most-change":oo({pixels:t.map(y=>y.pixels),mask:u,outBand:d})}const g=new A({width:h,height:p,pixels:[d],pixelType:s,mask:u});return g.updateStatistics(),g}function eo(t){const{bands:[e,s],mask:n,isRelative:o,isRoundingNeeded:i,outBand:a}=t,r=e.length;for(let u=0;u<r;u++)if(!n||n[u]){let l=e[u]-s[u];if(o){const h=Math.max(Math.abs(e[u])-Math.abs(s[u]));l=h>0?l/h:0}a[u]=i?Math.round(l):l}}function so(t){const{bands:[e,s],categoryIndexLookups:[n,o],classNames:[i,a],mask:r,keepMethod:u,outBand:l}=t,h=e.length,p=i.length,d=a.length,g=p*d,y=g+1,x=g+2;for(let f=0;f<h;f++)if(!r||r[f]){const b=e[f],w=s[f],v=n[b],T=o[w],N=i[v],P=a[T];l[f]=v==null||T==null?g:u==="changed"&&N===P?y:u==="unchanged"&&N!==P?x:v*d+T}}function no(t){const{pixels:[e,s],mask:n,outBand:o}=t,i=e[0].length,a=e.length;for(let r=0;r<i;r++)if(!n||n[r]){let u=0;for(let l=0;l<a;l++){const h=e[l][r]-s[l][r];u+=h*h}o[r]=Math.sqrt(u)}}function ro(t){const{pixels:[e,s],mask:n,outBand:o}=t,i=e[0].length,a=e.length;for(let r=0;r<i;r++)if(!n||n[r]){let u=0,l=0,h=0;for(let d=0;d<a;d++){const g=e[d][r],y=s[d][r];u+=g*y,l+=g*g,h+=y*y}const p=Math.sqrt(l*h);o[r]=p?Math.acos(u/p):1.5707963267948966}}function oo(t){const{pixels:[e,s],mask:n,outBand:o}=t,i=e[0].length,a=e.length;for(let r=0;r<i;r++)if(!n||n[r]){let u=0,l=0;for(let h=0;h<a;h++){const p=Math.abs(e[h][r]-s[h][r]);p>u&&(u=p,l=h)}o[r]=l}}var we;let mt=we=class extends D{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new we({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([X(Qr)],mt.prototype,"method",void 0),c([X(Yr)],mt.prototype,"keepMethod",void 0),c([m({json:{write:!0}})],mt.prototype,"raster2",void 0),c([m({readOnly:!0})],mt.prototype,"rasters",null),mt=we=c([F("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],mt);const io=mt;let dt=class extends M{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const s=this.sourceRasterInfos.map(i=>i.attributeTable),n=this._getFieldNames(s,"value"),o=s.map(i=>this._getClassFieldName(i));if(n[0]==null||n[1]==null||o[0]==null||o[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,o)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if(e?.[0]==null||e?.[1]==null)return null;const{method:s}=this.functionArguments;return to(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=ut(t);const n=W(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map(v=>v.attributeTable),o=n.map((v,T)=>v.features.map(N=>N.attributes[e[T]])),i=n.map((v,T)=>v.features.map(N=>N.attributes[s[T]])),a=o.map(v=>{const T=[];return v.forEach((N,P)=>T[N]=P),T}),{keepMethod:r}=this.functionArguments;this._categoryConfig={categoryIndexLookups:a,classNames:i,keepMethod:r};const u=n[0].clone();u.fields=[new st({name:"OID",type:"oid"}),new st({name:"Value",type:"integer"}),new st({name:"ClassName",type:"string"}),new st({name:"Class_From",type:"string"}),new st({name:"Class_To",type:"string"})];const l=this._getFieldNames(n,"red"),h=this._getFieldNames(n,"green"),p=this._getFieldNames(n,"blue"),d=[],g=l.length===2&&h.length===2&&p.length===2;g&&(d.push(...n.map((v,T)=>v.features.map(N=>[N.attributes[l[T]],N.attributes[h[T]],N.attributes[p[T]]]))),u.fields.push(new st({name:"Red",type:"integer"}),new st({name:"Green",type:"integer"}),new st({name:"Blue",type:"integer"})));const y=u.features[0].clone();y.geometry=null;const x=[],[f,b]=o.map(v=>v.length);let w=1;for(let v=0;v<f;v++){const T=i[0][v];for(let N=0;N<b;N++){const P=i[1][N];if(r==="changed"&&T===P||r==="unchanged"&&T!==P)continue;const R=y.clone();R.attributes={OID:w++,Value:v*b+N,ClassName:T===P?T:`${T} -> ${P}`,Class_From:T,Class_To:P},g&&(R.attributes.Red=d[0][v][0]+d[1][N][0]>>1,R.attributes.Green=d[0][v][1]+d[1][N][1]>>1,R.attributes.Blue=d[0][v][2]+d[1][N][2]>>1),x.push(R)}}if(r==="changed"){const v=y.clone();v.attributes={OID:w++,Value:f*b+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},x.push(v)}else if(r==="unchanged"){const v=y.clone();v.attributes={OID:w++,Value:f*b+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},x.push(v)}u.features=x,t.attributeTable=u}_getFieldNames(t,e){return t.map(({fields:s})=>s.find(n=>n.name.toLowerCase()===e)?.name).filter(s=>s)}_getClassFieldName(t){return(t.fields.find(e=>e.type==="string"&&e.name.toLowerCase().startsWith("class"))??t.fields.find(e=>e.type==="string"&&e.name.toLowerCase().includes("class")||e.name.toLowerCase().includes("type")||e.name.toLowerCase().includes("name"))??t.fields.find(e=>e.type==="string"))?.name}};c([m({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),c([m({type:io,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),c([m()],dt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],dt.prototype,"_categoryConfig",void 0),dt=c([F("esri.layers.support.rasterFunctions.ComputeChangeFunction")],dt);const ao=dt;var be;let $t=be=class extends D{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new be({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([m({json:{write:!0}})],$t.prototype,"contrastOffset",void 0),c([m({json:{write:!0}})],$t.prototype,"brightnessOffset",void 0),$t=be=c([F("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],$t);const uo=$t;let ft=class extends M{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:o}=this.functionArguments;return this.lookup=Qs(n,o),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:ne(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([m({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([m({type:uo,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([m()],ft.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],ft.prototype,"lookup",void 0),ft=c([F("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],ft);const lo=ft;function ve(t,e,s,n,o){const i=Math.floor(n/2);for(let r=0;r<i;r++)for(let u=0;u<e;u++)t[r*e+u]=t[(o-1-r)*e+u],t[(s-1-r)*e+u]=t[(s-o+r)*e+u];const a=Math.floor(o/2);for(let r=0;r<s;r++){const u=r*e;for(let l=0;l<a;l++)t[u+l]=t[u+o-1-l],t[u+e-l-1]=t[u+e+l-o]}}const z=new Map;function co(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let o=1;o<e;o++){let i=null;for(let a=0;a<e;a++){const r=t[a+o*e],u=t[a];if(i==null)if(u===0){if(r)return{separable:!1,row:null,col:null}}else i=r/u;else if(r/u!==i)return{separable:!1,row:null,col:null}}if(i==null)return{separable:!1,row:null,col:null};n.push(i)}return{separable:!0,row:s,col:n}}function Ns(t,e,s,n,o,i,a){const r=new Float32Array(e*s),u=i.length,l=a?0:n,h=a?n:0,p=a?1:e;for(let d=l;d<s-l;d++){const g=d*e;for(let y=h;y<e-h;y++){if(o&&!o[g+y])continue;let x=0;for(let f=0;f<u;f++)x+=t[g+y+(f-n)*p]*i[f];r[g+y]=x}}return r}function po(t,e,s,n,o,i,a){const r=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(o/2);for(let h=u;h<s-u;h++){const p=h*e;for(let d=l;d<e-l;d++){if(i&&!i[p+d])continue;let g=0;for(let y=0;y<n;y++)for(let x=0;x<o;x++)g+=t[p+d+(y-u)*e+x-l]*a[y*o+x];r[p+d]=g}}return r}function ho(t,e,s=!0){const{pixels:n,width:o,height:i,pixelType:a,mask:r}=t,u=n.length,l=[],{kernel:h,rows:p,cols:d}=e;for(let g=0;g<u;g++){const y=po(n[g],o,i,p,d,r,h);s&&ve(y,o,i,p,d),l.push(y)}return new A({width:o,height:i,pixelType:a,pixels:l,mask:r})}function mo(t,e,s,n=!0){const{pixels:o,width:i,height:a,pixelType:r,mask:u}=t,l=o.length,h=[],p=e.length,d=s.length,g=Math.floor(p/2),y=Math.floor(d/2);for(let x=0;x<l;x++){let f=Ns(o[x],i,a,g,u,e,!0);f=Ns(f,i,a,y,u,s,!1),n&&ve(f,i,a,p,d),h.push(f)}return new A({width:i,height:a,pixelType:r,pixels:h,mask:u})}function fo(t,e){const s=co(e.kernel),n=e.mirrorEdges!==!1,o=s.separable?mo(t,s.row,s.col,n):ho(t,e,n),{outputPixelType:i}=e;return i&&o.clamp(i),o}z.set(S.none,[0,0,0,0,1,0,0,0,0]),z.set(S.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),z.set(S.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),z.set(S.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),z.set(S.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),z.set(S.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),z.set(S.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),z.set(S.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),z.set(S.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),z.set(S.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),z.set(S.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),z.set(S.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),z.set(S.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),z.set(S.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),z.set(S.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),z.set(S.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),z.set(S.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),z.set(S.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),z.set(S.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),z.set(S.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),z.set(S.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),z.set(S.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),z.set(S.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Ae;let gt=Ae=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=z.get(t);if(!e||t===S.userDefined||t===S.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new Ae({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:q(this.raster)})}};c([m({json:{type:Number,write:!0}})],gt.prototype,"rows",void 0),c([m({json:{type:Number,write:!0}})],gt.prototype,"cols",void 0),c([m({json:{name:"type",type:Number,write:!0}})],gt.prototype,"convolutionType",null),c([m({json:{type:[Number],write:!0}})],gt.prototype,"kernel",void 0),gt=Ae=c([F("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],gt);const go=gt,Rs=25;let yt=class extends M{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((n,o)=>n+o);return e===-1||s===0||s===1?t:t.map(n=>n/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(S).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==S.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const i=o.clone();i.pixelType=this.outputPixelType;const a=[S.none,S.sharpen,S.sharpen2,S.sharpening3x3,S.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!a.includes(t))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:n.length<=Rs}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null||this.functionArguments.convolutionType===S.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:o}=this;return fo(e,{kernel:o,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(Rs);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:ut(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),c([m({type:go,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),c([m()],yt.prototype,"rasterArgumentNames",void 0),c([m()],yt.prototype,"_normalizedKernel",null),yt=c([F("esri.layers.support.rasterFunctions.ConvolutionFunction")],yt);const yo=yt;var Te;const Is=new J({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let Mt=Te=class extends D{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Is.fromJSON(e.type??e.curvatureType??0)}clone(){return new Te({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([m({json:{write:{target:"type"}}}),X(Is)],Mt.prototype,"curvatureType",void 0),c([Vt("curvatureType",["type","curvatureType"])],Mt.prototype,"readCurvatureType",null),c([m({type:Number,json:{write:!0}})],Mt.prototype,"zFactor",void 0),Mt=Te=c([F("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Mt);const xo=Mt;let xt=class extends M{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:o,primaryPixelSizes:i}=t,a=i?.[0],r=a??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*Lt:s;return Ys(e,{zFactor:u,curvatureType:n,resolution:r})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Lt:t}}};c([m({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([m({type:xo,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([m()],xt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],xt.prototype,"isGCS",void 0),xt=c([F("esri.layers.support.rasterFunctions.CurvatureFunction")],xt);const wo=xt;var Pe;let et=Pe=class extends D{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=Je.bestMatch}clone(){return new Pe({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([m({json:{write:!0}})],et.prototype,"bandIds",void 0),c([m({json:{write:!0}})],et.prototype,"bandNames",void 0),c([m({json:{write:!0}})],et.prototype,"bandWavelengths",void 0),c([X({0:"name",1:"wavelength",2:"id"})],et.prototype,"method",void 0),c([m({json:{write:!0}})],et.prototype,"missingBandAction",void 0),c([m({json:{write:!0}})],et.prototype,"wavelengthMatchTolerance",void 0),et=Pe=c([F("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],et);const bo=et;let Gt=class extends M{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:o,bandWavelengths:i,bandIds:a,missingBandAction:r}=t,u=o?.length&&(n==="name"||n!=="id"&&!a?.length),l=i?.length&&(n==="wavelength"||n!=="id"&&!a?.length),h=r===Je.fail,p=u?Ao(s,o):l?Po(s,i,this.functionArguments,h):To(s,a,h);if(p==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=p.length;const{statistics:g,histograms:y}=d;g!=null&&g.length&&(d.statistics=p.map(f=>g[f]||g[g.length-1])),y!=null&&y.length&&(d.histograms=p.map(f=>y[f]||y[y.length-1])),d.multidimensionalInfo&&d.multidimensionalInfo.variables.forEach(f=>{const{statistics:b,histograms:w}=f;b!=null&&b.length&&(f.statistics=p.map(v=>b[v]||b[b.length-1])),w!=null&&w.length&&(f.histograms=p.map(v=>w[v]||w[w.length-1]))});let x=d.keyProperties?.BandProperties;return x?.length&&(x=p.map(f=>f>=x.length?x[x.length-1]:x[f]),d.keyProperties={...d.keyProperties,BandProperties:x}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map(o=>o>=s?s-1:o);return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:V(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}};c([m({json:{write:!0,name:"rasterFunction"}})],Gt.prototype,"functionName",void 0),c([m({type:bo,json:{write:!0,name:"rasterFunctionArguments"}})],Gt.prototype,"functionArguments",void 0),c([m()],Gt.prototype,"rasterArgumentNames",void 0),Gt=c([F("esri.layers.support.rasterFunctions.ExtractBandFunction")],Gt);const vo=Gt;function Ao(t,e){const s=t.bandInfos.map(({name:o})=>o.toLowerCase()),n=[];for(let o=0;o<e.length;o++){const i=e[o].toLowerCase();let a=s.indexOf(i);if(a===-1&&i==="nearinfrared"&&(a=s.findIndex(r=>r.startsWith("nearinfrared_1")),a===-1&&(a=s.findIndex(r=>r.startsWith("nearinfrared")))),a===-1)return null;n.push(a)}return n}function To(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some(o=>o<0||o>=n)?null:e}function Po(t,e,{wavelengthMatchTolerance:s},n){const{bandInfos:o}=t,i=[];for(let r=0;r<o.length;r++){const{minWavelength:u,maxWavelength:l}=o[r];if(!u||!l)return null;i.push({minWavelength:u,maxWavelength:l})}const a=[];for(let r=0;r<e.length;r++){const u=e[r];let l=!1,h=-1,p=Number.MAX_VALUE;for(let d=0;d<i.length;d++){const g=i[d],y=u>=g.minWavelength&&u<=g.maxWavelength,x=Math.abs(u-(g.minWavelength+g.maxWavelength)/2);y?x<p&&(l=!0,h=d,p=x):!l&&x<p&&(h=d,p=x)}if(!l&&s&&p<s&&(l=!0),!l&&n)return null;a.push(h)}return a}function Fo(t,e,s){const{pixels:n,width:o,height:i,mask:a,bandMasks:r}=t,u=o*i,l=r?.length?A.combineBandMasks(r):a,h=Math.min(e.length,n.length),p=s.startsWith("f"),d=!p&&s!==t.pixelType,[g,y]=ut(s),x=A.createEmptyBand(s,u);for(let b=0;b<i;b++){let w=b*o;for(let v=0;v<o;v++,w++)if(!l||l[w]){let T=0;for(let N=0;N<h;N++)T+=e[N]*n[N][w];p||(T=Math.round(T),d&&(T=T>y?y:T<g?g:T)),x[w]=T}}const f=new A({width:o,height:i,pixels:[x],pixelType:s,mask:l});return f.updateStatistics(),f}var Fe;let Qt=Fe=class extends D{clone(){return new Fe({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([m({type:[Number],json:{write:!0}})],Qt.prototype,"conversionParameters",void 0),Qt=Fe=c([F("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Qt);const No=Qt;let wt=class extends M{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,n)=>s+n);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Fo(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([m({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),c([m({type:No,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),c([m()],wt.prototype,"rasterArgumentNames",void 0),c([m()],wt.prototype,"_normalizedWeights",null),wt=c([F("esri.layers.support.rasterFunctions.GrayscaleFunction")],wt);const Ro=wt;var Ne;const Io=new J({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),ko=new J({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let K=Ne=class extends D{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Ne({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([m({type:Number,json:{write:!0}})],K.prototype,"altitude",void 0),c([m({type:Number,json:{write:!0}})],K.prototype,"azimuth",void 0),c([m(),X(Io)],K.prototype,"hillshadeType",void 0),c([m({type:Number,json:{write:!0,name:"psPower"}})],K.prototype,"pixelSizePower",void 0),c([m({type:Number,json:{write:!0,name:"psZFactor"}})],K.prototype,"pixelSizeFactor",void 0),c([m(),X(ko)],K.prototype,"slopeType",void 0),c([m({type:Number,json:{write:!0}})],K.prototype,"zFactor",void 0),c([m({type:Boolean,json:{write:!0}})],K.prototype,"removeEdgeEffect",void 0),K=Ne=c([F("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],K);const ks=K;let bt=class extends M{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:s,primaryPixelSizes:n}=t,o=n?.[0],i=o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),a=Jt(this.functionArguments,i,this.isGCS),r=ts(e,a);return r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=Jt(this.functionArguments,{x:1,y:1},this.isGCS),e=es(t),{slopeType:s,zFactor:n,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a=s==="scaled",r=W(this.outputPixelType);return{...e,zFactor:n,gcsFactor:this.isGCS?Lt:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,isOutputRounded:r}}};c([m({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),c([m({type:ks,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),c([m()],bt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],bt.prototype,"isGCS",void 0),bt=c([F("esri.layers.support.rasterFunctions.HillshadeFunction")],bt);const Co=bt;var Re;let vt=Re=class extends D{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new Re({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:q(this.rasters)})}};c([m({json:{write:!0}})],vt.prototype,"operation",void 0),c([m({json:{write:!0}})],vt.prototype,"rasters",void 0),c([Kt("rasters")],vt.prototype,"writeRasters",null),c([m({json:{write:!0}})],vt.prototype,"processAsMultiband",void 0),vt=Re=c([F("esri.layers.support.rasterFunctions.LocalFunctionArguments")],vt);const _o=vt;let zt=class extends M{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some(u=>u.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:i}=this.functionArguments,a=as[o];if(!(a===999||i.length===a||i.length<=1&&a===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${a}`};const r=e.clone();return r.bandCount=a!==999||n?s:1,this._removeStatsHistColormapVAT(r),this._updateStatistics(r),this._updatePixelType(r),this.rasterInfo=r,{success:!0,supportsGPU:r.bandCount===1&&a<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:vs(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=as[t],s=Object.keys(rs).find(r=>rs[r]===t)?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[o,i]=ut(n);const a=W(n);return a&&(o-=1e-4,i+=1e-4),{imageCount:e,operationName:s,domainRange:[o,i],isOutputRounded:a}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=is(s)?.domain;if(n){t.statistics=[];for(let o=0;o<t.bandCount;o++)t.statistics[o]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else s===45&&e.statistics?.length&&(t.statistics=e.statistics.map(o=>({min:-o.max,max:-o.min,avg:o.avg!=null?-o.avg:void 0,stddev:o.stddev!=null?-o.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:o,isInteger:i}=is(n)??{domain:null,isInteger:!1};let a="f32";if(o&&i)a=re(o[0],o[1]);else if(n===30){const r=e?.[0];a=r?re(r.min,r.max):W(s)?s:"s32"}else if(n===45&&W(s)){const r=e?.map(({max:p})=>-p),u=e?.map(({min:p})=>-p),l=r?.length?Math.min(...r):null,h=u?.length?Math.min(...u):null;a=l!=null&&h!=null?re(l,h):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};c([m({json:{write:!0,name:"rasterFunction"}})],zt.prototype,"functionName",void 0),c([m({type:_o,json:{write:!0,name:"rasterFunctionArguments"}})],zt.prototype,"functionArguments",void 0),c([m()],zt.prototype,"rasterArgumentNames",void 0),zt=c([F("esri.layers.support.rasterFunctions.LocalFunction")],zt);const So=zt;var Ie;let At=Ie=class extends D{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Xe.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map(n=>{if(typeof n=="number")return e=!0,[n];if(typeof n=="string"){const o=n.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return e=e||o.length>0,o.length===0?null:o}return null});return e?s:null}clone(){return new Ie({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};c([m({json:{write:!0}})],At.prototype,"includedRanges",void 0),c([m({json:{write:!0}})],At.prototype,"noDataValues",void 0),c([m()],At.prototype,"normalizedNoDataValues",null),c([m({json:{write:!0}})],At.prototype,"noDataInterpretation",void 0),At=Ie=c([F("esri.layers.support.rasterFunctions.MaskFunctionArguments")],At);const Bo=At;let Tt=class extends M{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let a=0;a<t.bandCount;a++){const r=Ws(e,s?.slice(2*a,2*a+2),n?.[a]);if(r==null){o=null;break}o.push(r)}this.lookups=o;const i=n!=null&&n.every(a=>a?.length===n[0]?.length);return{success:!0,supportsGPU:(!s||s.length<=2*Y)&&(!n||i&&n[0].length<=Y)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:o,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,r=i===Xe.matchAll;return Hs(e,{includedRanges:o,noDataValues:a,outputPixelType:s,matchAll:r,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(Y);s.fill(kt),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(Y);for(let o=0;o<n.length;o+=2)n[o]=t?.[o]??-kt,n[o+1]=t?.[o+1]??kt;return t?.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};c([m({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([m({type:Bo,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([m()],Tt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],Tt.prototype,"lookups",void 0),Tt=c([F("esri.layers.support.rasterFunctions.MaskFunction")],Tt);const jo=Tt;var ke;let Ot=ke=class extends D{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new ke({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};c([m({json:{write:!0}})],Ot.prototype,"visibleBandID",void 0),c([m({json:{write:!0}})],Ot.prototype,"infraredBandID",void 0),c([m({json:{write:!0}})],Ot.prototype,"scientificOutput",void 0),Ot=ke=c([F("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Ot);const Mo=Ot;let Dt=class extends M{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],o=Math.max(e,s);if(n.bandCount<2||o>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const i=n.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[a,r,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:a,max:r,avg:u,stddev:l}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:o}=this.functionArguments;return pr(e,s,n,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:V(n),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(n=>t[n])}};c([m({json:{write:!0,name:"rasterFunction"}})],Dt.prototype,"functionName",void 0),c([m({type:Mo,json:{write:!0,name:"rasterFunctionArguments"}})],Dt.prototype,"functionArguments",void 0),c([m()],Dt.prototype,"rasterArgumentNames",void 0),Dt=c([F("esri.layers.support.rasterFunctions.NDVIFunction")],Dt);const Go=Dt;var Ce;let nt=Ce=class extends D{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ce({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([m({json:{write:!0}})],nt.prototype,"inputRanges",void 0),c([m({json:{write:!0}})],nt.prototype,"outputValues",void 0),c([m({json:{write:!0}})],nt.prototype,"noDataRanges",void 0),c([m({json:{write:!0}})],nt.prototype,"allowUnmatched",void 0),c([m({json:{write:!0}})],nt.prototype,"isLastInputRangeInclusive",void 0),nt=Ce=c([F("esri.layers.support.rasterFunctions.RemapFunctionArguments")],nt);const zo=nt;let Pt=class extends M{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,outputValues:o,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:r}=this.functionArguments;if(s!=null&&s.length&&o?.length)if(n){const u=Math.min.apply(null,[...o,s[0].min]),l=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:u,max:l}]}else{let u=o[0],l=u;for(let h=0;h<o.length;h++)u=u>o[h]?o[h]:u,l=l>o[h]?l:o[h];t.statistics=[{...s[0],min:u,max:l}]}return this.rasterInfo=t,this.lookup=n?null:qs({srcPixelType:e,inputRanges:i,outputValues:o,noDataRanges:a,allowUnmatched:n,isLastInputRangeInclusive:r,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=Y)&&(!a||a.length<=Y)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{lookup:s,outputPixelType:n}=this;if(s){const l=ne(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return l!=null&&s.mask&&(l.mask=$s(e.pixels[0],e.mask,s.mask,s.offset,"u8")),l}const{inputRanges:o,outputValues:i,noDataRanges:a,allowUnmatched:r,isLastInputRangeInclusive:u}=this.functionArguments;return Ks(e,{inputRanges:o,outputValues:i,noDataRanges:a,outputPixelType:n,allowUnmatched:r,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*Y),o=1e-5,i=this.functionArguments.inputRanges??[],a=this.functionArguments.outputValues??[],r=a.length;for(let l=0;l<Y;l++)n[3*l]=i[2*l]??kt-1,n[3*l+1]=i[2*l+1]??kt,n[3*l+2]=a[l]??0,l<r&&(l>0&&(n[3*l]-=o),(l<r-1||!s)&&(n[3*l+1]-=o));const u=new Float32Array(2*Y);return u.fill(kt),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:ut(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],Pt.prototype,"functionName",void 0),c([m({type:zo,json:{write:!0,name:"rasterFunctionArguments"}})],Pt.prototype,"functionArguments",void 0),c([m()],Pt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],Pt.prototype,"lookup",void 0),Pt=c([F("esri.layers.support.rasterFunctions.RemapFunction")],Pt);const Oo=Pt;var _e;let Et=_e=class extends ks{readColorRamp(t){if(typeof t=="string"){const e=lt.jsonValues.find(s=>s.toLowerCase()===t.toLowerCase());return e?Qe(lt.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new _e({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};c([m({json:{write:!0}})],Et.prototype,"colorRamp",void 0),c([Vt("colorRamp")],Et.prototype,"readColorRamp",null),c([m({type:[[Number]],json:{write:!0}})],Et.prototype,"colormap",void 0),Et=_e=c([F("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Et);const Do=Et;let rt=class extends M{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:s}=this.functionArguments;if(!e&&!s?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const n=t.clone();this._removeStatsHistColormapVAT(n),n.pixelType=this.outputPixelType,n.bandCount=3,n.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=n,this.isGCS=n.spatialReference?.isGeographic??!1,s?.length||(s=oe(e,{interpolateAlpha:!0}));const{indexedColormap:o,offset:i}=Ke({colormap:s});if(!o?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const a=tn(o);return this.lookup={indexedColormap:o,offset:i,hsvMap:a},{success:!0,supportsGPU:Ye(o)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let s=t.primaryPixelSizes?.[0];if(s==null){const{extent:a}=t;s=a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1}}const n=Jt(this.functionArguments,s,this.isGCS),o=ts(e,n),i=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return en(o,e,this.lookup.hsvMap,i),o.pixelType=this.outputPixelType,o}_getWebGLParameters(){const t=Jt(this.functionArguments,{x:1,y:1},this.isGCS),e=es(t),{slopeType:s,zFactor:n,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a=s==="scaled",{indexedColormap:r,offset:u}=this.lookup,l=this.sourceRasterInfos[0].statistics?.[0],h=W(this.outputPixelType);return{...e,indexedColormap:r,offset:u,zFactor:n,gcsFactor:this.isGCS?Lt:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,minValue:l?.min??0,maxValue:l?.max??8e3,isOutputRounded:h}}};c([m({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([m({type:Do,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([m()],rt.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],rt.prototype,"isGCS",void 0),c([m({json:{write:!0}})],rt.prototype,"lookup",void 0),rt=c([F("esri.layers.support.rasterFunctions.ShadedReliefFunction")],rt);const Eo=rt;var Se;const Uo=new J({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let ot=Se=class extends D{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Se({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([X(Uo)],ot.prototype,"slopeType",void 0),c([m({type:Number,json:{write:!0}})],ot.prototype,"zFactor",void 0),c([m({type:Number,json:{name:"psPower",write:!0}})],ot.prototype,"pixelSizePower",void 0),c([m({type:Number,json:{name:"psZFactor",write:!0}})],ot.prototype,"pixelSizeFactor",void 0),c([m({type:Boolean,json:{write:!0}})],ot.prototype,"removeEdgeEffect",void 0),ot=Se=c([F("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],ot);const Vo=ot;let Ft=class extends M{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:i}=this.functionArguments,{isGCS:a}=this,{extent:r,primaryPixelSizes:u}=t,l=u?.[0],h=l??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1});return sn(e,{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:i,isGCS:a,resolution:h})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Lt:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:W(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),c([m({type:Vo,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),c([m()],Ft.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],Ft.prototype,"isGCS",void 0),Ft=c([F("esri.layers.support.rasterFunctions.SlopeFunction")],Ft);const Lo=Ft,Cs=new J({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Wo(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:i,mask:a,outBand:r}=t;if(s&&!a)return void r.set(n);const{statisticsType:u,kernelRows:l,kernelCols:h}=e,p=u==="stddev",d=o*i,g=new Float64Array(d),y=new Float64Array(d),x=new Uint32Array(d);for(let P=0;P<i;P++){const R=P*o;let _=0,k=0,C=0;for(let B=0;B<h;B++)a&&!a[R+B]||(_+=n[R+B],p&&(k+=n[R+B]**2),C++);g[R]=_,y[R]=k,x[R]=C;for(let B=1;B<=o-h;B++){const O=R+B-1,Q=O+h;a?(a[O]&&(C--,_-=n[O],p&&(k-=n[O]**2)),a[Q]&&(C++,_+=n[Q],p&&(k+=n[Q]**2))):(_-=n[O],_+=n[Q],p&&(k-=n[O]**2,k+=n[Q]**2)),g[R+B]=_,x[R+B]=C,p&&(y[R+B]=k)}}const f=new Float64Array(d),b=new Float64Array(d),w=new Uint32Array(d),v=l*o;for(let P=0;P<=o-h;P++){let R=0,_=0,k=0;for(let C=0;C<l;C++){const B=C*o+P;R+=g[B],k+=x[B],p&&(_+=y[B])}f[P]=R,b[P]=_,w[P]=k;for(let C=1;C<=i-l;C++){const B=(C-1)*o+P,O=B+v;R-=g[B],R+=g[O],k-=x[B],k+=x[O],p&&(_-=y[B],_+=y[O]),f[C*o+P]=R,b[C*o+P]=_,w[C*o+P]=k}}const T=Math.floor(l/2),N=Math.floor(h/2);for(let P=T;P<i-T;P++){const R=P*o;for(let _=N;_<o-N;_++){const k=(P-T)*o+_-N,C=w[k];if(C===0||s&&(!a||a[R+_]))continue;const B=f[k]/C,O=p?Math.sqrt((b[k]-f[k]*B)/C):B;r[R+_]=O,a&&(a[R+_]=255)}}}function Ho(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:i,mask:a,outBand:r}=t;if(s&&!a)return void r.set(n);const{kernelRows:u,kernelCols:l,statisticsType:h}=e,p=Math.floor(u/2),d=Math.floor(l/2),g=h==="min",y=r.slice(),x=new Uint32Array(o*i);for(let f=p;f<i-p;f++){const b=f*o;for(let w=d;w<o-d;w++){let v=g?Number.MAX_VALUE:-Number.MAX_VALUE,T=0;for(let N=0;N<u;N++)for(let P=0;P<l;P++){const R=b+w+(N-p)*o+P-d;a&&!a[R]||(v=g?Math.min(v,n[R]):Math.max(v,n[R]),T++)}a?(y[b+w]=T===0?0:v,x[b+w]=T):r[b+w]=T===0?0:v}}if(a)for(let f=p;f<i-p;f++){const b=f*o;for(let w=d;w<o-d;w++)if(x[b+w]){if(s&&a[b+w])continue;r[b+w]=y[b+w],a[b+w]=255}}}function qo(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:i,mask:a,outBand:r}=t;if(s&&!a)return void r.set(n);const{kernelRows:u,kernelCols:l}=e,h=Math.floor(u/2),p=Math.floor(l/2),d=r.slice(),g=new Uint32Array(o*i);for(let y=h;y<i-h;y++){const x=y*o;for(let f=p;f<o-p;f++){if(s&&a?.[x+f])continue;const b=[];for(let w=0;w<u;w++)for(let v=0;v<l;v++){const T=x+f+(w-h)*o+v-p;a&&!a[T]||b.push(n[T])}b.length&&(b.sort((w,v)=>w-v),a?(d[x+f]=b[Math.floor((b.length-1)/2)],g[x+f]=b.length):r[x+f]=b[Math.floor((b.length-1)/2)])}}if(a)for(let y=h;y<i-h;y++){const x=y*o;for(let f=p;f<o-p;f++)if(g[x+f]){if(s&&a[x+f])continue;r[x+f]=d[x+f],a[x+f]=255}}}function $o(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:i,mask:a,outBand:r}=t;if(s&&!a)return void r.set(n);const{kernelRows:u,kernelCols:l}=e,h=Math.floor(u/2),p=Math.floor(l/2),d=e.statisticsType==="majority",g=u*l,y=r.slice(),x=new Uint32Array(o*i);for(let f=h;f<i-h;f++){const b=f*o;for(let w=p;w<o-p;w++){if(s&&a?.[b+w])continue;const v=new Map;for(let R=0;R<u;R++)for(let _=0;_<l;_++){const k=b+w+(R-h)*o+_-p;if(a&&!a[k])continue;const C=n[k];v.set(C,v.has(C)?v.get(C)+1:1)}if(v.size===0)continue;let T=0,N=0,P=d?0:g+1;for(const R of v.keys())N=v.get(R),d===N>P&&(P=N,T=R);a?(y[b+w]=T,x[b+w]=v.size):r[b+w]=T}}if(a)for(let f=h;f<i-h;f++){const b=f*o;for(let w=p;w<o-p;w++)if(x[b+w]){if(s&&a[b+w])continue;r[b+w]=y[b+w],a[b+w]=255}}}function Ko(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:o,width:i,height:a,bandMasks:r,pixelType:u}=t,l=o.length,h=i*a,p=[],{kernelRows:d,kernelCols:g,statisticsType:y,mirrorEdges:x}=e;if(n&&!s)return t;const f=e.outputPixelType??u,b=[];for(let T=0;T<l;T++){const N=o[T],P=A.createEmptyBand(f,h);n&&P.set(N);const R=r?.[T]??s,_=R?.slice()??null,k={band:N,width:i,height:a,mask:_,outBand:P};switch(y){case"min":case"max":Ho(k,e);break;case"mean":case"stddev":Wo(k,e);break;case"median":qo(k,e);break;case"majority":case"minority":$o(k,e)}x&&!n&&ve(P,i,a,d,g),p.push(P),_&&b.push(_)}let w=b[0]??s;b.length!==l&&(b.length=0),l>1&&r?.length&&(w=A.combineBandMasks(r));const v=new A({pixelType:f,width:i,height:a,pixels:p,bandMasks:r&&b.length?b:null,mask:w});return v.updateStatistics(),v}var Be;let Nt=Be=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Be({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:q(this.raster)})}};c([m({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Nt.prototype,"rows",void 0),c([m({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Nt.prototype,"cols",void 0),c([m({json:{write:!0}})],Nt.prototype,"fillNoDataOnly",void 0),c([m({json:{read:{source:["statisticsType","type"],reader:(t,e)=>Cs.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),X(Cs)],Nt.prototype,"statisticsType",void 0),Nt=Be=c([F("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Nt);const Jo=Nt;let Ut=class extends M{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return n==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{statisticsType:s,rows:n,cols:o,fillNoDataOnly:i}=this.functionArguments;return Ko(e,{kernelRows:n,kernelCols:o,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:ut(this.outputPixelType)}}};c([m({json:{write:!0,name:"rasterFunction"}})],Ut.prototype,"functionName",void 0),c([m({type:Jo,json:{write:!0,name:"rasterFunctionArguments"}})],Ut.prototype,"functionArguments",void 0),c([m()],Ut.prototype,"rasterArgumentNames",void 0),Ut=c([F("esri.layers.support.rasterFunctions.StatisticsFunction")],Ut);const Xo=Ut;var je;let Rt=je=class extends D{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach(n=>{const o={min:n.min,max:n.max,avg:n.avg??n.mean,stddev:n.stddev??n.standardDeviation};s.push(o)}),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach(o=>{const i={...o,mean:o.avg,standardDeviation:o.stddev};delete i.avg,delete i.stddev,n.push(i)}),e[s]=n}clone(){return new je({statistics:q(this.statistics),histograms:q(this.histograms)})}};c([m({json:{write:!0}})],Rt.prototype,"statistics",void 0),c([Vt("statistics")],Rt.prototype,"readStatistics",null),c([Kt("statistics")],Rt.prototype,"writeStatistics",null),c([m({json:{write:!0}})],Rt.prototype,"histograms",void 0),Rt=je=c([F("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Rt);const Zo=Rt;let it=class extends M{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([m({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0),c([m({type:Zo,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0),c([m()],it.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],it.prototype,"indexedColormap",void 0),c([m()],it.prototype,"isNoopProcess",void 0),it=c([F("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],it);const Qo=it;var Me;const Yo=new J({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let L=Me=class extends D{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map(n=>[n.min,n.max,n.avg,n.stddev])),e[s]=t)}clone(){return new Me({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:q(this.statistics),gamma:q(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:q(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([m({type:Boolean,json:{write:!0}})],L.prototype,"computeGamma",void 0),c([m({type:Boolean,json:{name:"dra",write:!0}})],L.prototype,"dynamicRangeAdjustment",void 0),c([m({type:[Number],json:{write:!0}})],L.prototype,"gamma",void 0),c([m()],L.prototype,"histograms",void 0),c([m({type:Number,json:{write:!0}})],L.prototype,"maxPercent",void 0),c([m({type:Number,json:{write:!0}})],L.prototype,"minPercent",void 0),c([m({type:Number,json:{write:!0}})],L.prototype,"numberOfStandardDeviations",void 0),c([m({type:Number,json:{name:"max",write:!0}})],L.prototype,"outputMax",void 0),c([m({type:Number,json:{name:"min",write:!0}})],L.prototype,"outputMin",void 0),c([m({type:Number,json:{write:!0}})],L.prototype,"sigmoidStrengthLevel",void 0),c([m({json:{type:[[Number]],write:!0}})],L.prototype,"statistics",void 0),c([Kt("statistics")],L.prototype,"writeStatistics",null),c([X(Yo)],L.prototype,"stretchType",void 0),c([m({type:Boolean,json:{write:!0}})],L.prototype,"useGamma",void 0),L=Me=c([F("esri.layers.support.rasterFunctions.StretchFunctionArguments")],L);const ti=L;let at=class extends M{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:o,useGamma:i}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const l=ie(s.toJSON(),{rasterInfo:t}),h=W(this.outputPixelType)?"round":"float";this.lookup=nn({pixelType:e,...l,gamma:i?o:null,rounding:h}),this.cutOffs=l}else n||(this.cutOffs=ie(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const a=t.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),this.outputPixelType==="u8"&&(a.keyProperties.DataType="processed");const{outputMin:r=0,outputMax:u=255}=this.functionArguments;a.statistics=[];for(let l=0;l<a.bandCount;l++)a.statistics[l]={min:r,max:u};return this.rasterInfo=a,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{lookup:s}=this;if(s)return ne(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,o=this.cutOffs||ie(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=n.useGamma?n.gamma:null;return rn(e,{...o,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,i=n&&s?.length?on(o,s):[1,1,1],{minCutOff:a,maxCutOff:r}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};a.length===1&&(a[1]=a[2]=a[0],r[1]=r[2]=r[0]);const u=r.map((d,g)=>(e-t)/(r[g]-a[g])),l=W(this.outputPixelType),h=n&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],p=n?[i[0],i[1]??i[0],i[2]??i[0]]:[1,1,1];return{bandCount:o,minOutput:t,maxOutput:e,minCutOff:a,maxCutOff:r,factor:u,useGamma:n,gamma:h,gammaCorrection:p,stretchType:this.functionArguments.stretchType,isOutputRounded:l,type:"stretch"}}};c([m({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([m({type:ti,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([m()],at.prototype,"rasterArgumentNames",void 0),c([m({json:{write:!0}})],at.prototype,"lookup",void 0),c([m({json:{write:!0}})],at.prototype,"cutOffs",void 0),at=c([F("esri.layers.support.rasterFunctions.StretchFunction")],at);const ei=at;var Ge;let Yt=Ge=class extends D{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Ge({attributeTableAsRecordSet:q(this.attributeTableAsRecordSet)})}};c([m({json:{write:!0}})],Yt.prototype,"attributeTableAsRecordSet",void 0),Yt=Ge=c([F("esri.layers.support.rasterFunctions.TableFunctionArguments")],Yt);const si=Yt;let It=class extends M{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,s.dataType!=="thematic"&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([m({json:{write:!0,name:"rasterFunction"}})],It.prototype,"functionName",void 0),c([m({type:si,json:{write:!0,name:"rasterFunctionArguments"}})],It.prototype,"functionArguments",void 0),c([m()],It.prototype,"rasterArgumentNames",void 0),c([m()],It.prototype,"isNoopProcess",void 0),It=c([F("esri.layers.support.rasterFunctions.TableFunction")],It);const ni=It,j=new Map;function _s(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster,s.raster2]).forEach(n=>{n&&typeof n!="number"&&(typeof n=="string"?n.startsWith("http")&&(e.includes(n)||e.push(n)):"rasterFunctionArguments"in n&&_s(n,e))})}function ri(t,e){if(e=e??{},"function"in(t=q(t))&&"arguments"in t&&t.arguments){const s=Gs(t,new Map,e);if(De(s),!s.renderingRule)throw new Ct("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return Bs(t=ze(t),e);throw new Ct("raster-function-helper","unsupported raster function json.")}function oi(t,e){return e[0]==="rasters"&&Array.isArray(t.rasters)?t.rasters:e.map(s=>t[s])}function Ss(t){return!!(t&&typeof t=="object"&&t.rasterFunction&&t.rasterFunctionArguments)}function ze(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const o in s){let i=s[o];const a=o.toLowerCase();if(a==="rasters"&&Array.isArray(i))n.rasters=i.map(r=>Ss(r)?ze(r):r);else switch(Ss(i)&&(i=ze(i)),a){case"dra":n.dra=i;break;case"pspower":n.psPower=i;break;case"pszfactor":n.psZFactor=i;break;case"bandids":n.bandIds=i;break;default:n[o[0].toLowerCase()+o.slice(1)]=i}}return e!=="Local"||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function Bs(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,o=t.outputPixelType?.toLowerCase();if(s==null||!j.has(s))throw new Ct("raster-function-helper",`unsupported raster function: ${s}`);const i=j.get(s),a=(typeof i.ctor=="function"?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:r}=a,u=[],l=oi(n,r),h=r[0]==="rasters"||r.length>1,p=[];for(let d=0;d<l.length;d++){const g=l[d];let y;g==null||typeof g=="string"&&g.startsWith("$")?u.push(e?.raster):typeof g=="string"?e[g]&&u.push(e[g]):typeof g!="number"&&"rasterFunction"in g&&(y=Bs(g,e),h||(a.functionArguments[r[d]]=y),u.push(y)),h&&p.push(y??g)}if(h&&(r[0]==="rasters"?a.functionArguments.rasters=p:r.forEach((d,g)=>{a.functionArguments[d]=p[g]})),e){a.sourceRasters=u;const d=e.raster?.url;d&&(a.mainPrimaryRasterId=d)}return a}function js(t,e){if(t&&e)for(const s in t){const n=t[s];n&&typeof n=="object"&&"type"in n&&(n.type==="RasterFunctionTemplate"?js(n.arguments,e):n.type==="RasterFunctionVariable"&&e[n.name]!=null&&(n.value=e[n.name]))}}function Oe(t,e){if(!t||typeof t!="object")return t;const{value:s}=t;if(!s||typeof s!="object")return t.isDataset?"$$":s;if(Array.isArray(s))return s.length===0?[]:s.map(o=>typeof o=="object"&&o.type==="RasterFunctionVariable"?Oe(o,e):o);if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&s.type!=="Scalar")return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=Ms(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(Ms)};break;case"ArgumentArray":if(s.elements?.length&&s.elements[0].type!=="RasterStatistics"){const o=[];for(let i=0;i<s.elements.length;i++){const a=s.elements[i],{type:r}=a;if(r)if(r==="RasterFunctionTemplate"){const{renderingRule:u}=Gs(a,e);o.push(u),a._object_id!=null&&e.set(a._object_id,u)}else{if(r!=="RasterFunctionVariable")throw new Ct("raster-function-helper","unsupported raster function json.");{const u=Oe(a,e);o.push(u),a._object_id!=null&&e.set(a._object_id,u)}}else o.push(a)}n=o}else n=s.elements}return s._object_id!=null&&e.set(s._object_id,n),n}function Ms(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r:o,g:i,b:a}=Ve({h:s.Hue,s:s.Saturation,v:s.Value});s=[o,i,a,s.AlphaValue]}if(!Array.isArray(n)){const{r:o,g:i,b:a}=Ve({h:n.Hue,s:n.Saturation,v:n.Value});n=[o,i,a,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function Gs(t,e,s){s&&js(t,s);const n={renderingRule:{},templates:e};return zs(t,n),n}function zs(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:o,arguments:i,_object_id:a}=t;if(!o||!i)return;a!=null&&n.set(a,s),s.rasterFunction=o.type.replace("Function",""),s.outputPixelType=o.pixelType;const r={};s.rasterFunctionArguments=r;for(const u in i){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=i[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?r[u]=Oe(l,n):(s.rasterFunctionArguments[u]={},zs(l,{renderingRule:s.rasterFunctionArguments[u],templates:n})),l._object_id!=null&&n.set(l._object_id,r[u])):r[u]=l}switch(r.DEM&&!r.Raster&&(r.Raster=r.DEM,delete r.DEM),s.rasterFunction){case"Stretch":ii(r);break;case"Colormap":ai(r);break;case"Convolution":ui(r);break;case"Mask":li(r)}}function De(t){const{renderingRule:e,templates:s}=t;if(typeof e!="object"||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const o in n){const i=n[o],a=o==="_object_ref_id"?i:i&&typeof i=="object"&&"_object_ref_id"in i?i._object_ref_id:null;if(a==null)i&&typeof i=="object"&&(i.rasterFunctionArguments&&De({renderingRule:i,templates:s}),Array.isArray(i)&&i.forEach((r,u)=>{if(typeof r=="object")if(r._object_ref_id!=null){if(!s.has(r._object_ref_id))throw new Ct("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const l=s.get(a);l&&typeof l=="object"?Object.assign(r,l):i[u]=l}else De({renderingRule:r,templates:s})}));else{if(!s.has(a))throw new Ct("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const r=s.get(a);o!=="_object_ref_id"?n[o]=r:r&&typeof r=="object"&&Object.assign(n,r)}}}function ii(t){t.Statistics?.length&&typeof t.Statistics=="object"&&(t.Statistics=t.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),t.NumberOfStandardDeviation!=null&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function ai(t){t.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete t.ColorRamp,t.ColormapName="Random"),t.ColorSchemeType===0&&delete t.ColorRamp}function ui(t){t.ConvolutionType!=null&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function li(t){t.NoDataValues?.length&&typeof t.NoDataValues[0]=="string"&&(t.NoDataValues=t.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}j.set("Arithmetic",{desc:"Arithmetic Function",ctor:tr,rasterArgumentNames:["rasters"]}),j.set("Aspect",{desc:"Aspect Function",ctor:sr,rasterArgumentNames:["raster"]}),j.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:kr,rasterArgumentNames:["raster"]}),j.set("Colormap",{desc:"Colormap Function",ctor:$r,rasterArgumentNames:["raster"]}),j.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Jr,rasterArgumentNames:["raster"]}),j.set("CompositeBand",{desc:"CompositeBand Function",ctor:Zr,rasterArgumentNames:["rasters"]}),j.set("ComputeChange",{desc:"ComputeChange Function",ctor:ao,rasterArgumentNames:["rasters"]}),j.set("Convolution",{desc:"Convolution Function",ctor:yo,rasterArgumentNames:["raster"]}),j.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:lo,rasterArgumentNames:["raster"]}),j.set("ExtractBand",{desc:"ExtractBand Function",ctor:vo,rasterArgumentNames:["raster"]}),j.set("Curvature",{desc:"Curvature Function",ctor:wo,rasterArgumentNames:["raster"]}),j.set("Hillshade",{desc:"Hillshade Function",ctor:Co,rasterArgumentNames:["raster"]}),j.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:Eo,rasterArgumentNames:["raster"]}),j.set("Grayscale",{desc:"Grayscale Function",ctor:Ro,rasterArgumentNames:["raster"]}),j.set("Clip",{desc:"Clip Function",ctor:zr,rasterArgumentNames:["raster"]}),j.set("Local",{desc:"Local Function",ctor:So,rasterArgumentNames:["rasters"]}),j.set("Mask",{desc:"Mask Function",ctor:jo,rasterArgumentNames:["raster"]}),j.set("NDVI",{desc:"NDVI Function",ctor:Go,rasterArgumentNames:["raster"]}),j.set("Remap",{desc:"Remap Function",ctor:Oo,rasterArgumentNames:["raster"]}),j.set("Slope",{desc:"Slope Function",ctor:Lo,rasterArgumentNames:["raster"]}),j.set("Statistics",{desc:"Focal Statistics Function",ctor:Xo,rasterArgumentNames:["raster"]}),j.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Qo,rasterArgumentNames:["raster"]}),j.set("Stretch",{desc:"Stretch Function",ctor:ei,rasterArgumentNames:["raster"]}),j.set("Table",{desc:"Attribute Table Function",ctor:ni,rasterArgumentNames:["raster"]});export{ri as T,Sr as h,Fs as l,_s as w};
