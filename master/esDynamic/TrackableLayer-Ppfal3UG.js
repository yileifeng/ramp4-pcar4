import{aX as y,G as d,x as e,z as t,K as n,ge as m,gf as u,aV as c,B as w,b7 as f}from"./main-BC8gbEPx.js";import{a as h}from"./FeatureReductionLayer-Dk9bSnv2.js";import{p as j,l as x}from"./commonProperties-Bzkkp1tE.js";import{C as T}from"./labelingInfo-CcucrdJw.js";import{m as k}from"./typeUtils-Yq1DJvE8.js";import{p as l}from"./SimpleRenderer-D395Is_B.js";import{l as g}from"./TimeInfo-CahXbw08.js";let r=class extends y.ClonableMixin(d){constructor(s){super(s),this.labelingInfo=null,this.labelsVisible=!0,this.renderer=null,this.visible=!0}};e([t({type:[T],json:{write:!0}})],r.prototype,"labelingInfo",void 0),e([t(j)],r.prototype,"labelsVisible",void 0),e([t({types:k,json:{write:!0}})],r.prototype,"renderer",void 0),e([t({type:Boolean,json:{write:!0}})],r.prototype,"visible",void 0),r=e([n("esri.layers.support.TrackPartInfo")],r);const p=r;let o=class extends y.ClonableMixin(d){constructor(s){super(s),this.enabled=!0,this.fields=[],this.latestObservations=new p({renderer:new l({symbol:m.clone()})}),this.maxDisplayDuration=null,this.maxDisplayObservationsPerTrack=0,this.popupEnabled=!0,this.popupTemplate=null,this.previousObservations=new p({renderer:new l({symbol:m.clone()})}),this.trackLines=new p({renderer:new l({symbol:u.clone()})}),this.timeField="startTimeField"}writeFields(s,i,v){const b=s.filter(a=>a.statisticType!=="avg_angle").map(a=>a.toJSON());c(v,b,i)}};e([t({type:Boolean,json:{write:!0}})],o.prototype,"enabled",void 0),e([t({type:[h],json:{write:!0}})],o.prototype,"fields",void 0),e([w("fields")],o.prototype,"writeFields",null),e([t({type:p,json:{write:!0}})],o.prototype,"latestObservations",void 0),e([t({type:g,json:{write:!0}})],o.prototype,"maxDisplayDuration",void 0),e([t({type:Number,json:{write:!0}})],o.prototype,"maxDisplayObservationsPerTrack",void 0),e([t(x)],o.prototype,"popupEnabled",void 0),e([t({type:f,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),e([t({type:p,json:{write:!0}})],o.prototype,"previousObservations",void 0),e([t({type:p,json:{write:!0}})],o.prototype,"trackLines",void 0),e([t({type:["timeReceived","startTimeField","endTimeField"],json:{read:!0,write:!0}})],o.prototype,"timeField",void 0),o=e([n("esri.layers.support.TrackInfo")],o);const F=o,I=s=>{let i=class extends s{constructor(){super(...arguments),this.trackInfo=null}};return e([t({type:F})],i.prototype,"trackInfo",void 0),i=e([n("esri.layers.mixins.TrackableLayer")],i),i};export{I as e};
