import{fp as F,c1 as J,x as h,z as p,K as C,aL as ge,e4 as _e,bz as ye,an as xe,bC as be,U as z,n as V,aM as G,s as we,b4 as ve,aH as Te,df as Pe}from"./main-BC8gbEPx.js";import{n as Se,t as M,V as Ue,l as Y}from"./multidimensionalUtils-Cp9Fyxq1.js";import{f as Re,d as Ie,a as Fe}from"./RasterVFDisplayObject-BYwLsBF3.js";import{a as Ce,S as ze,y as Ve}from"./LayerView-B6gjJHK-.js";import{e as O,E as k,m as Me,B as K}from"./MapView-CCgzpEAk.js";import{o as Oe,M as q,h as Be,b as Le,i as X,r as Ge}from"./mat3-DOnW3DjW.js";import{t as D}from"./vec2f32-CVhmN3Me.js";import{e as ke}from"./Container-CAAmY-5G.js";import{L as j,P as De,U as Ee,D as Ae,R as E,O as $}from"./enums-DBi1-Mm2.js";import{m as qe,f as je,c as W,h as S,O as v,_ as N,A as We,p as Ne,l as Qe,T as He,g as Ze}from"./rasterUtils-BFzNPOom.js";import{l as ee}from"./vec2f64-CEUyUoff.js";import{p as Je,w as Ye}from"./Texture-CgORJFQB.js";import{a as B}from"./definitions-CBIQmVpq.js";import{n as te}from"./VertexStream-D99exGBh.js";import{t as Ke,r as se}from"./WGLContainer-Cc3ZY9-l.js";import{x as Xe}from"./FramebufferObject-2-llqxa3.js";import{i as re}from"./TileContainer-COhgRkrz.js";import{h as $e}from"./UpdatingHandles-MKkd7IEO.js";import{g as et,S as tt}from"./dataUtils-DwTUUyvb.js";import{z as ie}from"./TileInfo-DcHqeHqG.js";import{g as ae,a as ne,i as st,u as rt}from"./RawBlockCache-Cq3Pc2nz.js";import{t as it,h as at,_ as nt,x as oe,O as ot}from"./rasterProjectionHelper-7n7CHYkF.js";import{r as le,h as lt,p as ut}from"./Tile-CVY6CM6q.js";import"./TileKey-BqqXrsHm.js";import{g as ct}from"./Scheduler-D6n_mU38.js";import{t as ht}from"./capabilities-B7_EbmeV.js";import{i as dt}from"./timeSupport-as7kSPKT.js";import{p as mt}from"./popupUtils-ptZwWLOM.js";import{i as pt}from"./RefreshableLayerView-4_klmxvN.js";const ft={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class gt extends ke{constructor(e=null,s=null,r=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=s,this.interpolation=r}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(F(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||ft}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?j.LINEAR:j.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=F(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const s=e||this.projected;return[s?this.width:this.source?.width||this.width,s?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:s,resolution:r}=this;return e&&!s?[e.x,e.y]:[r,r]}_createTransforms(){return{displayViewScreenMat3:O()}}setTransform(e){const s=Oe(this.transforms.displayViewScreenMat3),[r,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,n=a*this.width,o=a*this.height,l=Math.PI*this.rotation/180;q(s,s,D(r,i)),q(s,s,D(n/2,o/2)),Be(s,s,-l),q(s,s,D(-n/2,-o/2)),Le(s,s,D(n,o)),X(this.transforms.displayViewScreenMat3,e.displayViewMat3,s)}getTextures({forProcessing:e=!1,useProcessedTexture:s=!1}={}){const r=s?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return r?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),s?(a.push(r),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(a.push(r),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a})):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const s=this._isValidSource(this.source);s&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(s?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=qe(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(s=>s?.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){const s=this.source?.extractBands(this.bandIds);if(!this._isValidSource(s))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const r=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(r)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=je(e,s,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const s=this._rasterTextureBandIds;return!(s==null&&e==null||s&&e&&s.join("")===e.join(""))}_isValidSource(e){return e!=null&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:s}=this.symbolizerParameters,r=s==="lut"&&!this.symbolizerParameters.isClassBreaks||s==="hillshade"||s==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||r||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const s=this._colormap,r=this.symbolizerParameters.colormap;return r?s?r.length!==s.length||r.some((i,a)=>i!==s[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=W(e,r),void(this._colormap=r)):void 0:(this._colormapTexture=W(e,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function _t(t){return t.source!=null}function Q(t){const e=[];return t&&(e.push("applyProjection"),t.spacing[0]===1&&e.push("lookupProjection")),e}function ue(t,e,s){const r=!s.capabilities.textureFloatLinear,i=[];return t==="cubic"?i.push("bicubic"):t==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):r&&i.push("bilinear")),i}const yt={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function xt(t,e,s){const r=s?[]:Q(e.transformGrid);return{defines:r,program:t.painter.materialManager.getProgram(yt,r)}}function bt(t,e,s,r,i=!1){const{names:a,textures:n}=s.getTextures({useProcessedTexture:i});S(t.context,e,a,n),v(e,r,s.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",s.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=s.symbolizerParameters,c=N(o,l);v(e,r,c)}const wt={createProgram:xt,bindTextureAndUniforms:bt},vt={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Tt(t,e,s){const{colormap:r}=e.symbolizerParameters,i=[...s?[]:Q(e.transformGrid),...ue(e.interpolation,!0,t.context)];return r!=null&&i.push("applyColormap"),{defines:i,program:t.painter.materialManager.getProgram(vt,i)}}function Pt(t,e,s,r,i=!1){const{names:a,textures:n}=s.getTextures({useProcessedTexture:i});S(t.context,e,a,n),v(e,r,s.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",s.transforms.displayViewScreenMat3);const o=s.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=N(l,c);v(e,r,u)}const m=We(o);v(e,r,{...m,u_scaling:1})}const St={createProgram:Tt,bindTextureAndUniforms:Pt},Ut={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Rt(t,e,s){const{colormap:r,bandCount:i}=e.symbolizerParameters,a=[...s?[]:Q(e.transformGrid),...ue(e.interpolation,i===1,t.context)];return e.isRendereredSource&&!s?a.push("noop"):r!=null&&a.push("applyColormap"),{defines:a,program:t.painter.materialManager.getProgram(Ut,a)}}function It(t,e,s,r,i=!1){const{names:a,textures:n}=s.getTextures({useProcessedTexture:i});S(t.context,e,a,n),v(e,r,s.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",s.transforms.displayViewScreenMat3);const o=s.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=N(l,c);v(e,r,u)}const m=Ne(o);v(e,r,m)}const Ft={createProgram:Rt,bindTextureAndUniforms:It},A=new Map;function Ct(t){return A.get(t)}A.set("lut",wt),A.set("hillshade",St),A.set("stretch",Ft);const zt=[1,1],Vt=[2,0,0,0,2,0,-1,-1,0];function y(t,e,s,r){const{context:i,rasterFunction:a,hasBranches:n}=t,{raster:o}=a.parameters,l=n?o?.id??-1:0,c=[s.functionTextures[l]??s.rasterTexture],m=["u_image"];if(r){const u=W(i,r);s.functionTextures[100]=u,c.push(u),m.push("u_colormap")}S(i,e,m,c)}function H(t,e,s){const{rasters:r}=t.rasterFunction.parameters;if(!r)return;if(r.length<2)return y(t,e,s);const i=r.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?s.functionTextures[a.id]:s.rasterTexture);if(S(t.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==r.length){if(r.length===2){const a=r.findIndex(l=>l.name==="Constant"),n=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:o}=r[a].parameters;e.setUniform1f("u_image1Const",o),e.setUniformMatrix3fv("u_imageSwap",n)}else if(r.length===3){const a=[];if(r.forEach((n,o)=>n.name==="Constant"&&a.push(o)),a.length===1){const{value:n}=r[a[0]].parameters;e.setUniform1f("u_image1Const",n);const o=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",o)}else if(a.length===2){const{value:n}=r[a[0]].parameters;e.setUniform1f("u_image1Const",n);const{value:o}=r[a[1]].parameters;e.setUniform1f("u_image2Const",o);const l=r.findIndex(m=>m.name!=="Constant"),c=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",c)}}}}function g(t){t.setUniform2fv("u_coordScale",zt),t.setUniformMatrix3fv("u_dvsMat3",Vt)}const Mt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ot(t,e){return t.painter.materialManager.getProgram(Mt,[])}function Bt(t,e,s){y(t,e,s),g(e);const r=s.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",r);const i=s.getRasterCellSize();e.setUniform2fv("u_cellSize",i)}const Lt={createProgram:Ot,bindTextureAndUniforms:Bt},Gt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function kt(t,e){const{painter:s,rasterFunction:r}=t,{indexType:i,isOutputRounded:a}=r.parameters,n=[i];return a&&n.push("roundOutput"),s.materialManager.getProgram(Gt,n)}function Dt(t,e,s){y(t,e,s),g(e);const{bandIndexMat3:r,adjustments:i}=t.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",r),e.setUniform1fv("u_adjustments",i)}const Et={createProgram:kt,bindTextureAndUniforms:Dt},At={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/colormap2rgb",attributes:new Map([["a_position",0],["a_texcoord",1]])};function qt(t){const{painter:e}=t;return e.materialManager.getProgram(At,[])}function jt(t,e,s){const{indexedColormap:r,offset:i}=t.rasterFunction.parameters;y(t,e,s,r),g(e),e.setUniform1f("u_colormapOffset",i),e.setUniform1f("u_colormapMaxIndex",r.length/4-1)}const Wt={createProgram:qt,bindTextureAndUniforms:jt},Nt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Qt(t,e){const s=t.rasterFunction.parameters.rasters.filter(i=>i.name==="Constant"),r=[];return s.length&&(r.push("oneConstant"),s.length===2&&r.push("twoConstant")),t.painter.materialManager.getProgram(Nt,r)}function Ht(t,e,s){H(t,e,s),g(e)}const Zt={createProgram:Qt,bindTextureAndUniforms:Ht},Jt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/computechange",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Yt(t){const{painter:e,rasterFunction:s}=t,{method:r,rasters:i,isOutputRounded:a}=s.parameters,n=[r.includes("-")?r.slice(0,r.indexOf("-")):r];return i.filter(o=>o.name==="Constant").length&&n.push("oneConstant"),a&&n.push("roundOutput"),e.materialManager.getProgram(Jt,n)}function Kt(t,e,s){H(t,e,s),g(e);const{domainRange:r}=t.rasterFunction.parameters;e.setUniform2fv("u_domainRange",r)}const Xt={createProgram:Yt,bindTextureAndUniforms:Kt},$t={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function es(t,e){return t.painter.materialManager.getProgram($t,[])}function ts(t,e,s){y(t,e,s),g(e);const{contrastOffset:r,brightnessOffset:i}=t.rasterFunction.parameters;e.setUniform1f("u_contrastOffset",r),e.setUniform1f("u_brightnessOffset",i)}const ss={createProgram:es,bindTextureAndUniforms:ts},rs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function is(t,e){const{painter:s,rasterFunction:r}=t,{kernelRows:i,kernelCols:a}=r.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return s.materialManager.getProgram(rs,n)}function as(t,e,s){y(t,e,s),g(e),e.setUniform2fv("u_srcImageSize",[s.width,s.height]);const{kernel:r,clampRange:i}=t.rasterFunction.parameters;e.setUniform1fv("u_kernel",r),e.setUniform2fv("u_clampRange",i)}const ns={createProgram:is,bindTextureAndUniforms:as},os={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ls(t,e){const{painter:s,rasterFunction:r}=t,{curvatureType:i}=r.parameters,a=[i];return s.materialManager.getProgram(os,a)}function us(t,e,s){y(t,e,s),g(e);const r=s.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",r);const{zFactor:i}=t.rasterFunction.parameters,a=s.getRasterCellSize();e.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}const cs={createProgram:ls,bindTextureAndUniforms:us},hs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ds(t,e){return t.painter.materialManager.getProgram(hs,[])}function ms(t,e,s){y(t,e,s),g(e);const{bandIndexMat3:r}=t.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",r)}const ps={createProgram:ds,bindTextureAndUniforms:ms},fs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function gs(t,e){const{painter:s,rasterFunction:r}=t,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=r.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),s.materialManager.getProgram(fs,l)}function _s(t,e,s){y(t,e,s),g(e),e.setUniform2fv("u_srcImageSize",[s.width,s.height]);const{clampRange:r}=t.rasterFunction.parameters;e.setUniform2fv("u_clampRange",r)}const ys={createProgram:gs,bindTextureAndUniforms:_s},xs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function bs(t,e){return t.painter.materialManager.getProgram(xs,[])}function ws(t,e,s){y(t,e,s),g(e);const{weights:r}=t.rasterFunction.parameters;e.setUniform3fv("u_weights",r)}const vs={createProgram:bs,bindTextureAndUniforms:ws},Ts={vsPath:"raster/rfx/vs",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ps(t,e){const{indexedColormap:s}=t.rasterFunction.parameters,r=[];return s?.length&&r.push("applyColormap"),t.painter.materialManager.getProgram(Ts,r)}function Ss(t,e,s){const r=t.rasterFunction.parameters,{indexedColormap:i}=r;y(t,e,s,i),g(e);const a=s.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",a);const n=s.getRasterCellSize();e.setUniform2fv("u_cellSize",n);const{pixelSizeFactor:o}=r;if(o===0)e.setUniform2fv("u_factor",[r.factor[0]/n[0],r.factor[1]/n[1]]);else{const{zFactor:l,pixelSizePower:c,gcsFactor:m}=r,u=n[0]*m,d=n[1]*m,x=(l+u**c*o)/(8*u),w=(l+d**c*o)/(8*d);e.setUniform2fv("u_factor",[x,w])}e.setUniform1i("u_hillshadeType",r.hillshadeType),e.setUniform1fv("u_sinZcosAs",r.sinZcosAs),e.setUniform1fv("u_sinZsinAs",r.sinZsinAs),e.setUniform1fv("u_cosZs",r.cosZs),e.setUniform1fv("u_weights",r.weights),e.setUniform1f("u_opacity",1),e.setUniform1i("u_flipY",0),e.setUniform1f("u_scaling",255),e.setUniform1f("u_minValue",r.minValue),e.setUniform1f("u_maxValue",r.maxValue),i&&(e.setUniform1f("u_colormapOffset",r.offset),e.setUniform1f("u_colormapMaxIndex",i.length/4-1))}const ce={createProgram:Ps,bindTextureAndUniforms:Ss},Us={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Rs(t){const{painter:e,rasterFunction:s}=t,{imageCount:r,operationName:i,rasters:a,isOutputRounded:n}=s.parameters,o=[i.toLowerCase()];r===2&&o.push("twoImages");const l=a.filter(c=>c.name==="Constant");return l.length&&(o.push("oneConstant"),l.length===2&&o.push("twoConstant")),n&&o.push("roundOutput"),e.materialManager.getProgram(Us,o)}function Is(t,e,s){H(t,e,s),g(e);const{domainRange:r}=t.rasterFunction.parameters;e.setUniform2fv("u_domainRange",r)}const he={createProgram:Rs,bindTextureAndUniforms:Is},Fs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Cs(t,e){const{painter:s,rasterFunction:r}=t,i=r.parameters.bandCount>1?["multiBand"]:[];return s.materialManager.getProgram(Fs,i)}function zs(t,e,s){y(t,e,s),g(e);const{includedRanges:r,noDataValues:i}=t.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",r),e.setUniform1fv("u_noDataValues",i)}const Vs={createProgram:Cs,bindTextureAndUniforms:zs},Ms={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Os(t,e){const{painter:s,rasterFunction:r}=t,i=r.parameters.scaled?["scaled"]:[];return s.materialManager.getProgram(Ms,i)}function Bs(t,e,s){y(t,e,s),g(e);const{bandIndexMat3:r}=t.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",r)}const Ls={createProgram:Os,bindTextureAndUniforms:Bs},Gs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ks(t,e){return t.painter.materialManager.getProgram(Gs,[])}function Ds(t,e,s){y(t,e,s),g(e);const{noDataRanges:r,rangeMaps:i,allowUnmatched:a,clampRange:n}=t.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",r),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",n)}const Es={createProgram:ks,bindTextureAndUniforms:Ds},As={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function qs(t,e){const{painter:s}=t,r=[],{interpolation:i,transformGrid:a}=e,n=t.rasterFunction?.parameters;return i==="cubic"?r.push("bicubic"):i==="bilinear"&&(r.push("bilinear"),n?.requireNNEdge&&r.push("nnedge")),a&&(r.push("applyProjection"),a.spacing[0]===1&&r.push("lookupProjection")),s.materialManager.getProgram(As,r)}function js(t,e,s){const{names:r,textures:i}=s.getTextures({forProcessing:!0});S(t.context,e,r,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=s;e.setUniform2fv("u_srcImageSize",[o.width,o.height]),e.setUniform2fv("u_targetImageSize",[a,n]),e.setUniform2fv("u_transformSpacing",l?l.spacing:ee),e.setUniform2fv("u_transformGridSize",l?l.size:ee)}const Ws={createProgram:qs,bindTextureAndUniforms:js},Ns={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Qs(t,e){const{painter:s,rasterFunction:r}=t,{slopeType:i,isOutputRounded:a}=r.parameters,n=[];return i==="percent-rise"&&n.push("percentRise"),a&&n.push("roundOutput"),s.materialManager.getProgram(Ns,n)}function Hs(t,e,s){y(t,e,s),g(e);const r=s.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",r);const i=s.getRasterCellSize();e.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=t.rasterFunction.parameters;e.setUniform1f("u_zFactor",a),e.setUniform1f("u_pixelSizePower",n==="adjusted"?o:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?l:0)}const Zs={createProgram:Qs,bindTextureAndUniforms:Hs},Js={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ys(t,e){const{useGamma:s,bandCount:r,isOutputRounded:i}=t.rasterFunction.parameters,a=[];return s&&a.push("useGamma"),r>1&&a.push("multiBand"),i&&a.push("roundOutput"),t.painter.materialManager.getProgram(Js,a)}function Ks(t,e,s){y(t,e,s),g(e);const{width:r,height:i}=s,a=t.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[r,i]),e.setUniform1f("u_minOutput",a.minOutput),e.setUniform1f("u_maxOutput",a.maxOutput),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Xs={createProgram:Ys,bindTextureAndUniforms:Ks},f=new Map;function de(t,e){const s=new Je;return s.width=t,s.height=e,s.internalFormat=De.RGBA32F,s.samplingMode=j.NEAREST,s.dataType=Ee.FLOAT,s.isImmutable=!0,s.wrapMode=Ae.CLAMP_TO_EDGE,s}function $s(t,e,s,r){const{context:i,requestRender:a,allowDelayedRender:n}=t,o=r.createProgram(t,s);return n&&a!=null&&!o.compiled?(a(),null):(i.bindFramebuffer(e),i.setViewport(0,0,e.width,e.height),i.useProgram(o),o)}function er(t){return f.get(t.toLowerCase())}function tr(t,e,s,r){const i=t.rasterFunction.name.toLowerCase(),a=i==="reproject"?Ws:er(i);if(a==null)return;const n=$s(t,s,r,a);if(!n)return;a.bindTextureAndUniforms(t,n,r);const{interpolation:o}=r;i==="reproject"&&(r.interpolation="nearest"),e.draw();const[l,c]=r.getRasterTextureSize(i==="reproject"),m=de(l,c),u=new Ye(t.context,m);if(s.copyToTexture(0,0,l,c,0,0,u),i==="reproject")r.rasterTexture=u,r.projected=!0,r.interpolation=o;else{const d=t.hasBranches?t.rasterFunction.id:0;r.functionTextures[d]=u}}f.set("arithmetic",he),f.set("aspect",Lt),f.set("bandarithmetic",Et),f.set("colormaptorgb",Wt),f.set("computechange",Xt),f.set("compositeband",Zt),f.set("convolution",ns),f.set("contrastbrightness",ss),f.set("curvature",cs),f.set("extractband",ps),f.set("statistics",ys),f.set("grayscale",vs),f.set("hillshade",ce),f.set("shadedrelief",ce),f.set("local",he),f.set("mask",Vs),f.set("ndvi",Ls),f.set("remap",Es),f.set("slope",Zs),f.set("stretch",Xs);class sr extends Ke{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){F(this._quad),F(this._fbo)}prepareState(e){const{context:s,renderPass:r}=e,i=r==="raster";s.setBlendingEnabled(!i),s.setBlendFunctionSeparate(E.ONE,E.ONE_MINUS_SRC_ALPHA,E.ONE,E.ONE_MINUS_SRC_ALPHA),s.setColorMask(!0,!0,!0,!0),s.setStencilWriteMask(0),s.setStencilTestEnabled(!i)}draw(e,s){if(!_t(s)||s.suspended)return;const{renderPass:r}=e;if(r!=="raster-bitmap")return r==="raster"?this._process(e,s):void this._drawBitmap(e,s,!0);this._drawBitmap(e,s)}_process(e,s){const{rasterFunction:r}=e,i=r.name==="Reproject";if(!(i?!(s.rasterTexture&&s.projected):!s.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(s.processedTexture=F(s.processedTexture)),n.setStencilFunction($.EQUAL,s.stencilRef,255),s.updateTexture(e),this._initQuad(n);const[c,m]=s.getRasterTextureSize(i),{isStandardRasterTileSize:u,fbo:d}=this._getRasterFBO(n,c,m);tr(e,this._quad,d,s),u||d.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,s,r=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction($.EQUAL,s.stencilRef,255),s.updateTexture(e),r&&!s.processedTexture){if(s.updateProcessedTexture(),!s.processedTexture)return void i.end(this.name);s.processed=!0}this._initBitmapCommonUniforms(s);const n=s.symbolizerParameters.type,o=Ct(n),{requestRender:l,allowDelayedRender:c}=e,{defines:m,program:u}=o.createProgram(e,s,s.projected&&r);if(c&&l!=null&&!u.compiled)return void l();a.useProgram(u);const d=this._getUniformInfos(n,a,u,m);this._quad||(this._quad=new te(a,[0,0,1,0,0,1,1,1])),o.bindTextureAndUniforms(e,u,s,d,r),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const s=Ze(1,[0,0]),{transformGrid:r,width:i,height:a}=e,n=Qe(r,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...s,...n,u_coordScale:e.coordScale}}}_getRasterFBO(e,s,r){const i=s===B&&r===B;return i?(this._fbo||(this._fbo=this._createNewFBO(e,s,r)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,s,r)}}_createNewFBO(e,s,r){const i=de(s,r);return new Xe(e,i)}_initQuad(e){this._quad||(this._quad=new te(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,s,r,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const n=He(s,r);return this._rendererUniformInfos.set(a,n),n}}class rr extends se{constructor(e,s,r,i,a,n,o=null){super(e,s,r,i,a,n),this.bitmap=null,this.bitmap=new gt(o,null,null),this.bitmap.coordScale=[a,n],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:O(),tileMat3:O()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let ir=class extends re{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const e=this._getTileBounds(t),[s,r]=this.tileInfoView.tileInfo.size,i=this.tileInfoView.getTileResolution(t.level);return new rr(t,i,e[0],e[3],s,r)}prepareRenderPasses(t){const e=t.registerRenderPass({name:"imagery (tile)",brushes:[sr],target:()=>this.children.map(s=>s.bitmap),drawPhase:k.MAP});return[...super.prepareRenderPasses(t),e]}doRender(t){if(!this.visible||t.drawPhase!==k.MAP)return;const{rasterFunctionChain:e}=this;if(!e)return t.renderPass="raster-bitmap",void super.doRender(t);if(!e.hasFocalFunction){const[s,r]=this.tileInfoView.tileInfo.size;t.renderPass="raster",t.rasterFunction={name:"Reproject",parameters:{targetImageSize:[s,r],requireNNEdge:e.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(t)}if(e?.functions.length){const{functions:s,hasBranches:r}=e;for(let i=0;i<s.length;i++){const a=s[i];a.name!=="Constant"&&a.name!=="Identity"&&(t.renderPass="raster",t.rasterFunction=a,t.hasBranches=r,super.doRender(t))}}t.rasterFunction=null,t.renderPass="bitmap",super.doRender(t)}_getTileBounds(t){const e=this.tileInfoView.getTileBounds(J(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:s}=this.tileInfoView,r=Me(s.spatialReference);if(r){const i=s.lodAt(t.level);if(!i)return e;const{resolution:a}=i,n=a*s.size[0];e[0]=r*t.world+s.origin.x+t.col*n,e[2]=e[0]+n}}return e}};const ar=[0,0];let b=class extends ge{constructor(){super(...arguments),this._updatingHandles=new $e,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=_e(async(t={})=>{const e=this._rasterFunctionState;if(t.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const s=this._rasterFunctionState,{type:r}=this;return t.refetch||r!=="raster"&&t.reprocess||s==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(t.signal))})}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(t){this._set("useWebGLForProcessing",t)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(t){if(this._tileStrategy&&this.useProgressiveUpdate!==t){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(t);this._tileStrategy=new le({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",t),this.layerView.requestUpdate()}}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume();const{extent:e,resolution:s,scale:r}=t.state,i=this._tileInfoView.getClosestInfoForScale(r);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[i.level],n="toJSON"in e?e:ye.fromJSON(e);ae(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,s,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(t),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const t=ht();this._maxIndexedColormapSize=4*(t.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new lt(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new ut({tileInfoView:this._tileInfoView,concurrency:e,process:(r,i)=>this._fetchTile(r,i),priority:ct.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new le({cachePolicy:"purge",acquireTile:r=>this.acquireTile(r),releaseTile:r=>this.releaseTile(r),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,ne(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(t){const e=this.container.createTile(t);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(t){this._fetchQueue.abort(t.key.id),this.container.removeChild(t),t.once("detach",()=>{t.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(t=null){const e=t==null||t.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;t=t||this._tileInfoView.tileInfo.size;const[s,r]=t,i=new et({width:s,height:r,pixels:[new Uint8Array(s*r)],mask:new Uint8Array(s*r),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:t,raster:e}=this.layer,s="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return t?.length&&s?.length&&e.rasterInfo.bandCount!==1?t.map(r=>s[Math.min(r,s.length-1)]):"rasterFunction"in e?s:t}updateRasterFunctionParameters(){}_fetchTile(t,e){const s=this._getFetchOptions(t.level,e.signal);return this.fetchTile(t,s)}_getFetchOptions(t,e){const s=this.canUseWebGLForProcessing(),{layerView:r}=this,{tileInfo:i}=r,a=!i.isWrappable&&it(r.view.spatialReference)!=null,n=s&&this.layer.raster.hasUniqueSourceStorageInfo;return{allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[t],timeExtent:r.timeExtent,tileInfo:i,disableWrapAround:a}}_getCacheSize(t){return t?40:0}_initializeTileInfo(){const{layerView:t}=this,e=t.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:m}=this.layer.tileInfo,u=m.map(({scale:x})=>x),d=ie.create({spatialReference:e,size:B,scales:u,origin:c});return t.set("tileInfo",d),void(this._srcResolutions=m.map(({resolution:x})=>({x,y:x})))}const{scales:s,srcResolutions:r,isCustomTilingScheme:i}=at(this.layer.serviceRasterInfo,e,{tileSize:B,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),a=ie.create({spatialReference:e,size:B,scales:s}),n=a.origin.x===0;xe(t.fullExtent);const{xmin:o,ymax:l}=t.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new be({x:o,y:l,spatialReference:e})),this._isCustomTilingScheme=i,t.set("tileInfo",a),this._srcResolutions=r??[]}_canUseLayerLODs(){const{layer:t,layerView:e}=this;if(t.raster.tileType!=="Map")return!1;const{lods:s}=t.tileInfo,r=e.view.constraints?.effectiveLODs;return r?.length===s.length&&r.every(({scale:i},a)=>Math.abs(i-s[a].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:t}=this.layer.serviceRasterInfo.storageInfo,e=t[t.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(t,e){if(!this._fetchQueue.has(t.key.id)){try{const s=await this._fetchQueue.push(t.key),r=this._getBandIds();let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){i=!1;try{await this._redrawImage(this._abortController?.signal)}catch(o){z(o)&&V.getLogger(this).error(o)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(ar,t.key),n=this._tileInfoView.getTileResolution(t.key);await this.updateTileSource(t,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:r,coords:a,resolution:n}),t.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(t)}catch(s){z(s)||V.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(t){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(t):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async s=>this.updateTileSymbolizerParameters(s,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(t){const e=this._getFetchOptions(this.previousLOD.level,t),s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!s?.pixelBlock)return;const{resolution:r}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(n=>255*n),a.minOutput=Math.round(255*a.minOutput),a.maxOutput=Math.round(255*a.maxOutput)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:t}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:e})}_updateBlockCacheRegistry(t=!1){const{layer:e,layerView:s}=this,{raster:r}=e,{multidimensionalDefinition:i}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:s.timeExtent}),a=r.rasterInfo.multidimensionalInfo?r.getSliceIndex(i):null,n=st(r.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&ne(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=rt(n,r.rasterInfo),t){const{view:o}=s,l=this._tileInfoView.getClosestInfoForScale(o.scale),c=this._srcResolutions[l.level];ae(n,this._blockCacheRegistryId,o.extent,o.resolution,c,r.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const t=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>t.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(t))}};h([p()],b.prototype,"_globalUpdateRequested",void 0),h([p()],b.prototype,"attached",void 0),h([p()],b.prototype,"container",void 0),h([p()],b.prototype,"layer",void 0),h([p()],b.prototype,"layerView",void 0),h([p()],b.prototype,"scheduler",void 0),h([p()],b.prototype,"type",void 0),h([p()],b.prototype,"useWebGLForProcessing",null),h([p()],b.prototype,"useProgressiveUpdate",null),h([p()],b.prototype,"timeExtent",void 0),h([p()],b.prototype,"updating",null),b=h([C("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],b);let U=class extends b{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new ir(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:t}=this.layer,e=t.lookup?.colormapLut?.indexedColormap,s=e&&e.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&t.canRenderInWebGL&&!s&&!(this.layer.interpolation==="majority"&&K(this.layer))}fetchTile(t,e){return this.layer.fetchTile(t.level,t.row,t.col,e)}updateRasterFunctionParameters(){const{clips:t,view:e}=this.layerView;this._geometry!=null&&t.remove(this._geometry);const{raster:s,type:r}=this.layer;if(s.datasetFormat==="Function"){const w=s.getClippingGeometry(e.spatialReference);if(w){const _=new Ce({geometry:w});t.add(_),this._geometry=_}}const{container:i}=this;if(s.datasetFormat!=="Function"||r==="wcs")return i.rasterFunctionChain=null,i.children.forEach(w=>{const{bitmap:_}=w;_&&(_.suspended=!0,_.processed=!1,_.projected&&(_.invalidateTexture(),_.rasterTexture=null))}),void(this._rasterFunctionState="na");const a=this._rasterFunctionState,{rasterFunction:n,primaryRasters:o}=s,l=n.supportsGPU&&(!o||o.rasters.length<=1),c=l?n.flatWebGLFunctionChain:null,{renderer:m}=this.layer,u=!l||!c?.functions.length||m?.type==="raster-stretch"&&m.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();i.rasterFunctionChain=u?null:c;const d=n==null?"na":i.rasterFunctionChain?"gpu":"cpu",x=a===d||a==="na"&&d==="cpu"&&c?.functions?.length===0;i.children.forEach(w=>{const{bitmap:_}=w;_&&(_.suspended=!x,_.processed=!1,_.processedTexture=null)}),this._rasterFunctionState=d}async updateTileSource(t,e){const s=this._getBandIds(),r=this._getLayerInterpolation(),i=this.canUseWebGLForProcessing(),{source:a,globalSymbolizerParams:n,suspended:o,coords:l,resolution:c}=e,m=this.layerView.hasTilingEffects?n:e.symbolizerParams,{bitmap:u}=t;if([u.x,u.y]=l,u.resolution=c,a?.pixelBlock!=null){const d={extent:a.extent,pixelBlock:a.pixelBlock,srcPixelSize:a.srcTilePixelSize};if(u.rawPixelData=d,i)u.source=a.pixelBlock,u.isRendereredSource=!1;else{const x=await this.layer.applyRenderer(d,n?.type==="stretch"?n:void 0);u.source=x,u.isRendereredSource=!0}u.symbolizerParameters=i?m:null,u.transformGrid=i?a.transformGrid:null}else{const d=this.createEmptyTilePixelBlock();u.source=d,u.symbolizerParameters=i?m:null,u.transformGrid=null}u.bandIds=i?s:null,u.width=this._tileInfoView.tileInfo.size[0],u.height=this._tileInfoView.tileInfo.size[1],u.interpolation=r,u.suspended=o,u.invalidateTexture()}async updateTileSymbolizerParameters(t,e){const{local:s,global:r}=e,i=this._getBandIds(),a=this._getLayerInterpolation(),n=this.canUseWebGLForProcessing(),{bitmap:o}=t,{rawPixelData:l}=o;n||l==null?(o.isRendereredSource&&l!=null&&(o.source=l.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(l,r?.type==="stretch"?r:void 0),o.isRendereredSource=!0),o.symbolizerParameters=n?this.layerView.hasTilingEffects?r:s:null,o.bandIds=n?i:null,o.interpolation=a,o.suspended=!1}_getLayerInterpolation(){const{interpolation:t,renderer:e}=this.layer;if(!e)return t;const s=e.type;return s==="raster-colormap"||s==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}};h([p()],U.prototype,"container",void 0),h([p()],U.prototype,"layer",void 0),h([p()],U.prototype,"type",void 0),U=h([C("esri.views.2d.layers.imagery.ImageryTileView2D")],U);const nr=U;class or extends se{constructor(e,s,r,i,a,n,o=null){super(e,s,r,i,a,n),this.tileData=new Re(o),this.tileData.coordScale=[a,n],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:O(),tileMat3:O()}}setTransform(e){super.setTransform(e);const s=this.resolution/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[i,a]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-a*this.resolution],[o,l]=e.toScreenNoRotation([0,0],n),{symbolTileSize:c}=this.tileData.symbolizerParameters,m=Math.round((this.width-this.tileData.offset[0])/c)*c,u=Math.round((this.height-this.tileData.offset[1])/c)*c,d=m/this.rangeX*s,x=u/this.rangeY*s;Ge(r,d,0,0,0,x,0,o,l,1),X(this.transforms.displayViewScreenMat3,e.displayViewMat3,r),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class lr extends re{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const s=this.tileInfoView.getTileBounds(J(),e),[r,i]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(e.level);return new or(e,a,s[0],s[3],r,i)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Ie],target:()=>this.children.map(r=>r.tileData),drawPhase:k.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===k.MAP&&this.symbolTypes.forEach(s=>{e.renderPass=s,super.doRender(e)})}}let R=class extends b{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(t,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(t.level,t.row,t.col,e);return this.layer.serviceRasterInfo?.dataType==="vector-magdir"&&s?.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,e)),s}updateTileSource(t,e){const s=e.symbolizerParams,{tileData:r}=t;r.key=t.key,r.width=this._tileInfoView.tileInfo.size[0],r.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=s,{source:a}=e;if(r.offset=this._getTileSymbolOffset(r.key,i),a?.pixelBlock!=null){const n={extent:a.extent,pixelBlock:a.pixelBlock};r.rawPixelData=n,r.symbolizerParameters=s,r.source=this._sampleVectorFieldData(a.pixelBlock,s,r.offset)}else{const n=[Math.round((this._tileInfoView.tileInfo.size[0]-r.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-r.offset[1])/i)],o=this.createEmptyTilePixelBlock(n);r.source=o,r.symbolizerParameters=s}return r.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(t,e){const s=e.local,{symbolTileSize:r}=s,{tileData:i}=t;i.offset=this._getTileSymbolOffset(i.key,r);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=s;const n=i.rawPixelData?.pixelBlock;return n!=null&&a!==r&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new lr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=G(()=>this.layer.renderer,t=>this._updateSymbolType(t))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(t,e){const s=t.col*this._tileInfoView.tileInfo.size[0]%e,r=t.row*this._tileInfoView.tileInfo.size[1]%e;return[s>e/2?e-s:-s,r>e/2?e-r:-r]}_sampleVectorFieldData(t,e,s){const{symbolTileSize:r}=e;return tt(t,"vector-uv",r,s)}_updateSymbolType(t){t?.type==="vector-field"&&(this.container.symbolTypes=t.style==="wind-barb"?["scalar","triangle"]:t.style==="simple-scalar"?["scalar"]:["triangle"])}};h([p()],R.prototype,"container",void 0),h([p()],R.prototype,"layer",void 0),h([p()],R.prototype,"type",void 0),R=h([C("esri.views.2d.layers.imagery.VectorFieldTileView2D")],R);const ur=R,cr=t=>{let e=class extends t{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return dt(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?nt(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(s){try{return!this.layer.loaded||!!oe(this.layer.serviceRasterInfo,s)}catch{return!1}}async fetchPopupFeaturesAtLocation(s,r){const{layer:i}=this;if(!s)throw new we("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,n=mt(i,r);if(!a||n==null)return[];const o=[],{value:l,magdirValue:c,processedValue:m}=await i.identify(s,{timeExtent:this.timeExtent,signal:r?.signal});let u="";if(l?.length){u=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(I=>i.getStandardTimeValue(I)).join(", "):l.join(", ");const d={ObjectId:0};d[M.servicePixelValue]=i.type==="imagery-tile"&&i.raster.datasetFormat==="Function"?m?.join(", "):u,d[M.rawServicePixelValue]=u;const x=i.raster?.rasterInfo??i.serviceRasterInfo,w=x?.attributeTable;if(w!=null){const{fields:I,features:pe}=w,Z=I.find(({name:T})=>T.toLowerCase()==="value"),fe=d[M.servicePixelValue],L=Z?pe.find(T=>String(T.attributes[Z.name])===fe):null;if(L)for(const T in L.attributes)L.attributes.hasOwnProperty(T)&&(d[Se+T]=L.attributes[T])}const _=x?.dataType;if(_!=="vector-magdir"&&_!=="vector-uv"||(d[M.magnitude]=c?.[0],d[M.direction]=c?.[1]),i.type==="imagery-tile"){const{multidimensionalDefinition:I}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});Ue(i.rasterFields,d,I)}const me=new ve({geometry:this.fullExtent?.clone(),attributes:d,layer:i,sourceLayer:i});o.push(me)}return o}async getSourceScale(){return await this.layer.load(),ot(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return oe(this.layer.serviceRasterInfo,this.view.spatialReference)}};return h([p()],e.prototype,"fullExtent",null),h([p()],e.prototype,"layer",void 0),h([p({readOnly:!0})],e.prototype,"timeExtent",null),h([p()],e.prototype,"tileInfo",void 0),h([p({readOnly:!0})],e.prototype,"hasTilingEffects",null),h([p()],e.prototype,"datumTransformation",null),e=h([C("esri.views.layers.ImageryTileLayerView")],e),e};let P=class extends cr(pt(ze(Ve))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(t){this._useWebGLForProcessing=t,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=t)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(t){this._useProgressiveUpdate=t,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=t)}get displayParameters(){const{layer:t}=this,e=this._get("displayParameters");return t.renderer&&t.visible?{bandIds:t.bandIds,renderer:t.renderer,interpolation:t.interpolation,multidimensionalDefinition:t.multidimensionalDefinition,rasterFunction:t.type==="imagery-tile"?t.rasterFunction:null}:e}update(t){this.subview?.update(t),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([G(()=>this.displayParameters,(t,e)=>{const s=t.interpolation!==e?.interpolation&&(t.interpolation==="majority"||e?.interpolation==="majority")&&K(this.layer),r=t.renderer!==e?.renderer&&this._getSubviewType(e?.renderer)!==this._getSubviewType(t.renderer);r&&this._updateSubview();const i=t.multidimensionalDefinition!==e?.multidimensionalDefinition,a=t.rasterFunction!==e?.rasterFunction,n=a&&!this._useWebGLForProcessing,o=i||s||r||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch(l=>{z(l)||V.getLogger(this).error(l)}),this.notifyChange("updating")}),G(()=>this.layer.multidimensionalSubset??null,(t,e)=>{const{multidimensionalDefinition:s}=this.layer;s!=null&&Y(s,t)!==Y(s,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{z(r)||V.getLogger(this).error(r)}),this.notifyChange("updating"))},Te),G(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(t=>{z(t)||V.getLogger(this).error(t)})},Pe)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:t}=this.layer;if(!t)return;const e=this._getSubviewType(t);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:s}=this;let r;if(r=e==="rasterVF"?new ur({layer:s,layerView:this,scheduler:this.scheduler}):e==="flow"?new Fe({layer:s,layerView:this,scheduler:this.scheduler}):new nr({layer:s,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in r&&(r.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in r&&(r.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in r){const{subview:i}=this;r.previousLOD=i&&"previousLOD"in i?i.previousLOD:null}this._attachSubview(r),this.subview=r,this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}_getSubviewType(t){const e=t?.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};h([p()],P.prototype,"subview",void 0),h([p()],P.prototype,"useWebGLForProcessing",null),h([p()],P.prototype,"useProgressiveUpdate",null),h([p({readOnly:!0})],P.prototype,"displayParameters",null),P=h([C("esri.views.2d.layers.ImageryTileLayerView2D")],P);const hr=P;export{hr as default};
