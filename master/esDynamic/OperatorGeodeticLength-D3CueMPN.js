import{d2 as h,d3 as S}from"./main-BC8gbEPx.js";import{P as E,j as G,a as p,f as P,d as T}from"./Transformation2D-Dqu-RtOz.js";import{w as v}from"./OperatorShapePreservingLength-B-28xX0b.js";import{a4 as w,N as C,o as L,p as X,a5 as D,a6 as Y,m as q,J as N,K as b,L as j}from"./ProjectionTransformation-DKC-VGdP.js";class I{getOperatorType(){return 10311}supportsCurves(){return!0}accelerateGeometry(t,n,u){return!1}canAccelerateGeometry(t){return!1}execute(t,n,u,o){if(u===4)return new v().execute(t,n,o);if(n.getCoordinateSystemType()===0&&E(""),G(t),t.isEmpty()||t.getDimension()<1)return 0;const s=n.getGCS(),a=j();s.querySpheroidData(a);const c=a.majorSemiAxis,g=a.e2,m=s.getUnit().getUnitToBaseFactor();let e;const r=t.getGeometryType();if(r===p.enumPolygon?e=t.getBoundary():r===p.enumEnvelope?e=w(t):P(r)?(e=new C({vd:t.getDescription()}),e.addSegment(t,!0)):e=t,e.hasNonLinearSegments()&&(e=new L().execute(e,0,n.getTolerance(0),0,o)),s!==n){const i=n.getSRToGCSTransform();if(n.isPannable()){e=X(e,n),r===p.enumPolyline&&e===t&&(e=t.clone());const d=new T;n.getPannableExtent().queryIntervalX(d);for(let l=0,f=e.getPointCount();l<f;l++){const y=e.getXY(l);y.x=D(y.x,d),e.setXY(l,y)}}const x=e.createInstance();e=Y(i,e,x,o)?x:new q().execute(e,i,o)}return this._ExecuteMultiPathGeodeticLength(e,u,c,g,m)}_ExecuteMultiPathGeodeticLength(t,n,u,o,s){const a={stack:[],error:void 0,hasError:!1};try{const c=h(a,new N,!1);let g=0;const m=t.querySegmentIterator();for(;m.nextPath();)for(;m.hasNextSegment();){const e=m.nextSegment(),r=e.getStartXY(),i=e.getEndXY();r.scale(s),i.scale(s),b.geodeticDistance(u,o,r.x,r.y,i.x,i.y,c,null,null,n),g+=c.val}return g}catch(c){a.error=c,a.hasError=!0}finally{S(a)}}}export{I as OperatorGeodeticLength};
