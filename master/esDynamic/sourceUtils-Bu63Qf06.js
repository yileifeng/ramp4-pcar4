import{n as f}from"./date-Cqvy-TgA.js";import{cl as d,cm as g,ap as h,cn as m,ao as y,co as I,cp as c}from"./main-BC8gbEPx.js";class E{constructor(){this.code=null,this.description=null}}class S{constructor(t){this.error=new E,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function a(n){return new S(n)}class T{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function w(n){return new T(n)}const u=new Set;function C(n,t,r,p=!1){u.clear();for(const o in r){const s=n.get(o);if(!s)continue;const i=N(s,r[o]);if(u.add(s.name),s&&(p||s.editable)){const l=d(s,i);if(l)return a(g(l,s,i));t[s.name]=i}}for(const o of n.requiredFields??[])if(!u.has(o.name))return a(`missing required field "${o.name}"`);return null}function N(n,t){let r=t;return h(n)&&typeof t=="string"?r=parseFloat(t):m(n)&&t!=null&&typeof t!="string"?r=String(t):y(n)&&typeof t=="string"&&(r=f(t)),I(r)}let e;function A(n,t){if(!n||!c(t))return n;if("rings"in n||"paths"in n){if(e==null)throw new TypeError("geometry engine not loaded");return e.simplify(t,n)}return n}async function B(){return e==null&&(e=await import("./geometryEngineJSON-CGn_tfx8.js").then(n=>n.g)),e}async function b(n,t){!c(n)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await B()}const q={supportsAutoIntervalBin:!0,supportsFixedIntervalBin:!0,supportsFixedBoundariesBin:!0,supportsDateBin:!0,supportsStackBy:!0,supportsSplitBy:!0,supportsNormalization:!0,supportedStatisticTypes:["COUNT","SUM","AVG","VAR","STDDEV","MIN","MAX","PERCENTILE_CONT","PERCENTILE_DISC","CentroidAggregate","EnvelopeAggregate","ConvexHullAggregate"],supportedNormalizationTypes:["field","log","naturalLog","percentOfTotal","squareRoot"]};export{b as E,q as S,w as f,C as g,A as h,a as p};
