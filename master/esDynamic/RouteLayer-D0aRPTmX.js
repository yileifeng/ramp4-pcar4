import{x as r,z as s,jK as V,K as O,G as C,dJ as z,jL as we,jM as et,dH as ge,dK as tt,bi as A,D as R,B as U,s as k,a2 as X,iQ as be,t as rt,n as Le,aF as ot,bC as Ce,aQ as ne,b4 as K,bz as ke,M as q,b$ as Me,g3 as it,aX as Se,b5 as st,b6 as nt,bq as at,V as j,aO as lt,aV as ut,bP as pt,ci as _e,Y as xe,O as ct,I as yt,C as dt,U as mt,b7 as ft,ab as ht}from"./main-BC8gbEPx.js";import{S as vt}from"./MultiOriginJSONSupport-BMkaNBEB.js";import{i as wt}from"./originUtils-BLsWtgV9.js";import{Q as gt,O as bt}from"./projection-CS2SYuKw.js";import{f as St}from"./Layer-CMe3ITJC.js";import{p as Tt}from"./BlendLayer-CcxvVUY7.js";import{b as Bt}from"./OperationalLayer-BZK79oBo.js";import{j as Nt}from"./PortalLayer-DiglAdqG.js";import{t as Pt}from"./ScaleRangeLayer-DmABrUi1.js";import Rt from"./PortalItem-SSaZ6vTt.js";import{E as It}from"./portalItemUtils-YlBSOPjE.js";import{read as At}from"./jsonUtils-DpLLpSxY.js";import{i as ae,f as Je}from"./utils-BauPDoiO.js";import{D as H,U as Te,n as Ot,b as jt,a as Ee,q as Dt,R as Lt,M as Ct,w as Fe,o as kt,f as Mt,r as _t,l as xt,m as Jt}from"./networkEnums-DVtxduWf.js";import{b as Be,n as Et,o as Ft,c as le,y as ue,T as ee,a as te,j as re,w as oe,S as Ne,d as Gt}from"./Stop-Bb-Wd5iU.js";import{R as Ut}from"./normalizeUtils-BcS9eell.js";import{d as J}from"./FeatureSet-DagJuGrs.js";import{a as qt}from"./GPMessage-BRdJgmvB.js";let W=class extends C{constructor(e){super(e),this.break=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new z({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new z({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new z({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new z({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};r([s({types:V})],W.prototype,"break",void 0),r([s({types:V})],W.prototype,"first",void 0),r([s({types:V})],W.prototype,"unlocated",void 0),r([s({types:V})],W.prototype,"last",void 0),r([s({types:V})],W.prototype,"middle",void 0),r([s({types:V})],W.prototype,"waypoint",void 0),W=r([O("esri.layers.support.RouteStopSymbols")],W);const Ge=W;let E=class extends C{constructor(e){super(e),this.directionLines=new ge({color:[0,122,194],width:6}),this.directionPoints=new z({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new z({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new tt({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new ge({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new ge({width:8,color:[20,89,127]}),this.stops=new Ge}};r([s({types:we})],E.prototype,"directionLines",void 0),r([s({types:V})],E.prototype,"directionPoints",void 0),r([s({types:V})],E.prototype,"pointBarriers",void 0),r([s({types:et})],E.prototype,"polygonBarriers",void 0),r([s({types:we})],E.prototype,"polylineBarriers",void 0),r([s({types:we})],E.prototype,"routeInfo",void 0),r([s({type:Ge})],E.prototype,"stops",void 0),E=r([O("esri.layers.support.RouteSymbols")],E);const Ue=E;let x=class extends C{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};r([s({type:String})],x.prototype,"dataType",void 0),r([A(H,{ignoreUnknown:!1})],x.prototype,"name",void 0),r([s({type:[String]})],x.prototype,"parameterNames",void 0),r([s({type:String})],x.prototype,"restrictionUsageParameterName",void 0),r([A(Te,{ignoreUnknown:!1})],x.prototype,"timeNeutralAttributeName",void 0),r([s({type:String})],x.prototype,"trafficSupport",void 0),r([A(Ot)],x.prototype,"units",void 0),r([A(jt)],x.prototype,"usageType",void 0),x=r([O("esri.rest.support.NetworkAttribute")],x);const Wt=x;let $=class extends C{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};r([s({type:Number})],$.prototype,"buildTime",void 0),r([s({type:String})],$.prototype,"name",void 0),r([s({type:[Wt]})],$.prototype,"networkAttributes",void 0),r([s()],$.prototype,"networkSources",void 0),r([s({type:String})],$.prototype,"state",void 0),$=r([O("esri.rest.support.NetworkDataset")],$);const Zt=$;let I=class extends C{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return e==null?null:e.map(o=>H.fromJSON(o))}writeAccumulateAttributes(e,o,t){e?.length&&(o[t]=e.map(i=>H.toJSON(i)))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(e,o){const t=o.supportedTravelModes?.find(({id:i})=>i===o.defaultTravelMode)??o.supportedTravelModes?.find(({itemId:i})=>i===o.defaultTravelMode);return t?Be.fromJSON(t):null}};r([s()],I.prototype,"accumulateAttributeNames",void 0),r([R("accumulateAttributeNames")],I.prototype,"readAccumulateAttributes",null),r([U("accumulateAttributeNames")],I.prototype,"writeAccumulateAttributes",null),r([s()],I.prototype,"attributeParameterValues",void 0),r([s()],I.prototype,"capabilities",null),r([s()],I.prototype,"currentVersion",void 0),r([s()],I.prototype,"defaultTravelMode",void 0),r([R("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],I.prototype,"readDefaultTravelMode",null),r([s()],I.prototype,"directionsLanguage",void 0),r([A(Ee)],I.prototype,"directionsLengthUnits",void 0),r([s()],I.prototype,"directionsSupportedLanguages",void 0),r([A(Te,{ignoreUnknown:!1})],I.prototype,"directionsTimeAttribute",void 0),r([s()],I.prototype,"hasZ",void 0),r([A(H,{ignoreUnknown:!1})],I.prototype,"impedance",void 0),r([s({type:Zt})],I.prototype,"networkDataset",void 0),r([s({type:[Be]})],I.prototype,"supportedTravelModes",void 0),I=r([O("esri.rest.support.NetworkServiceDescription")],I);const Vt=I,zt=()=>Le.getLogger("esri.rest.networkService");function pe(e,o,t,i){i[t]=[o.length,o.length+e.length],e.forEach(n=>{o.push(n.geometry)})}function $t(e,o){for(let t=0;t<o.length;t++){const i=e[o[t]];if(i&&i.length)for(const n of i)n.z=void 0}zt().warnOnce(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function Kt(e,o){for(let t=0;t<o.length;t++){const i=e[o[t]];if(i&&i.length){for(const n of i)if(n!=null&&n.hasZ)return!0}}return!1}async function qe(e,o,t){if(!e)throw new k("network-service:missing-url","Url to Network service is missing");const i=ae({f:"json",token:o},t),{data:n}=await X(e,i),p=n.currentVersion>=10.4?Qt(e,o,t):Ht(e,t),{defaultTravelMode:l,supportedTravelModes:d}=await p;return n.defaultTravelMode=l,n.supportedTravelModes=d,Vt.fromJSON(n)}async function Ht(e,o){const t=ae({f:"json"},o),{data:i}=await X(e.replace(/\/rest\/.*$/i,"/info"),t);if(!i?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:n}=i,p=be(n)+"/sharing/rest/portals/self",{data:l}=await X(p,t),d=rt("helperServices.routingUtilities.url",l);if(!d)return{supportedTravelModes:[],defaultTravelMode:null};const g=Je(n),N=/\/solve$/i.test(g.path)?"Route":/\/solveclosestfacility$/i.test(g.path)?"ClosestFacility":"ServiceAreas",a=ae({f:"json",serviceName:N},o),m=be(d)+"/GetTravelModes/execute",w=await X(m,a),B=[];let v=null;if(w?.data?.results?.length){const b=w.data.results;for(const y of b)if(y.paramName==="supportedTravelModes"){if(y.value?.features){for(const{attributes:S}of y.value.features)if(S){const f=JSON.parse(S.TravelMode);B.push(f)}}}else y.paramName==="defaultTravelMode"&&(v=y.value)}return{supportedTravelModes:B,defaultTravelMode:v}}async function Qt(e,o,t){try{const i=ae({f:"json",token:o},t),n=be(e)+"/retrieveTravelModes",{data:{supportedTravelModes:p,defaultTravelMode:l}}=await X(n,i);return{supportedTravelModes:p,defaultTravelMode:l}}catch(i){throw new k("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:i})}}const We=new ot({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let ce=class extends qt{constructor(e){super(e),this.type=null}};r([s({type:String,json:{read:We.read,write:We.write}})],ce.prototype,"type",void 0),ce=r([O("esri.rest.support.NAMessage")],ce);const Yt=ce;let ie=class extends C{constructor(e){super(e)}};r([s({json:{read:{source:"string"}}})],ie.prototype,"text",void 0),r([A(Dt,{name:"stringType"})],ie.prototype,"type",void 0),ie=r([O("esri.rest.support.DirectionsString")],ie);const Ze=ie;let Z=class extends C{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,o){return Et(o.ETA,o.arriveTimeUTC)}readGeometry(e,o){return Ce.fromJSON(o.point)}};r([s({type:Date,json:{read:{source:"arriveTimeUTC"}}})],Z.prototype,"arriveTime",void 0),r([s()],Z.prototype,"arriveTimeOffset",void 0),r([R("arriveTimeOffset",["arriveTimeUTC","ETA"])],Z.prototype,"readArriveTimeOffset",null),r([s({type:Ce})],Z.prototype,"geometry",void 0),r([R("geometry",["point"])],Z.prototype,"readGeometry",null),r([s({type:[Ze]})],Z.prototype,"strings",void 0),Z=r([O("esri.rest.support.DirectionsEvent")],Z);const Xt=Z;function er(e){if(e==null||e==="")return null;let o=0,t=0,i=0,n=0;const p=[];let l,d,g,N,a,m,w,B,v=0,b=0,y=0;if(a=e.match(/((\+|-)[^+\-|]+|\|)/g),a||(a=[]),parseInt(a[v],32)===0){v=2;const S=parseInt(a[v],32);v++,m=parseInt(a[v],32),v++,1&S&&(b=a.indexOf("|")+1,w=parseInt(a[b],32),b++),2&S&&(y=a.indexOf("|",b)+1,B=parseInt(a[y],32),y++)}else m=parseInt(a[v],32),v++;for(;v<a.length&&a[v]!=="|";){l=parseInt(a[v],32)+o,v++,o=l,d=parseInt(a[v],32)+t,v++,t=d;const S=[l/m,d/m];b&&(N=parseInt(a[b],32)+i,b++,i=N,S.push(N/w)),y&&(g=parseInt(a[y],32)+n,y++,n=g,S.push(g/B)),p.push(S)}return{paths:[p],hasZ:b>0,hasM:y>0}}let Q=class extends K{constructor(e){super(e),this.events=null,this.geometry=null,this.strings=null}readGeometry(e,o){const t=er(o.compressedGeometry);return t!=null?ne.fromJSON(t):null}};r([s({type:[Xt]})],Q.prototype,"events",void 0),r([s({type:ne})],Q.prototype,"geometry",void 0),r([R("geometry",["compressedGeometry"])],Q.prototype,"readGeometry",null),r([s({type:[Ze]})],Q.prototype,"strings",void 0),Q=r([O("esri.rest.support.DirectionsFeature")],Q);const tr=Q;function rr(e,o){if(e.length===0)return new ne({spatialReference:o});const t=[];for(const l of e)for(const d of l.paths)t.push(...d);const i=[];t.forEach((l,d)=>{d!==0&&l[0]===t[d-1][0]&&l[1]===t[d-1][1]||i.push(l)});const{hasM:n,hasZ:p}=e[0];return new ne({hasM:n,hasZ:p,paths:[i],spatialReference:o})}let L=class extends J{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,o){if(!e)return[];const t=o.summary.envelope.spatialReference??o.spatialReference,i=t&&q.fromJSON(t);return e.map(n=>{const p=tr.fromJSON(n);if(p.geometry!=null&&(p.geometry.spatialReference=i),p.events!=null)for(const l of p.events)l.geometry!=null&&(l.geometry.spatialReference=i);return p})}get mergedGeometry(){return this.features?rr(this.features.map(({geometry:e})=>e),this.extent.spatialReference):null}get strings(){return this.features.flatMap(({strings:e})=>e).filter(Me)}};r([s({type:ke,json:{read:{source:"summary.envelope"}}})],L.prototype,"extent",void 0),r([s({nonNullable:!0})],L.prototype,"features",void 0),r([R("features")],L.prototype,"readFeatures",null),r([s()],L.prototype,"geometryType",void 0),r([s({readOnly:!0})],L.prototype,"mergedGeometry",null),r([s()],L.prototype,"routeId",void 0),r([s()],L.prototype,"routeName",void 0),r([s({value:null,readOnly:!0})],L.prototype,"strings",null),r([s({json:{read:{source:"summary.totalDriveTime"}}})],L.prototype,"totalDriveTime",void 0),r([s({json:{read:{source:"summary.totalLength"}}})],L.prototype,"totalLength",void 0),r([s({json:{read:{source:"summary.totalTime"}}})],L.prototype,"totalTime",void 0),L=r([O("esri.rest.support.DirectionsFeatureSet")],L);const or=L;let M=class extends C{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};r([s({type:J,json:{write:!0}})],M.prototype,"directionLines",void 0),r([s({type:J,json:{write:!0}})],M.prototype,"directionPoints",void 0),r([s({type:or,json:{write:!0}})],M.prototype,"directions",void 0),r([s({type:K,json:{write:!0}})],M.prototype,"route",void 0),r([s({type:String,json:{write:!0}})],M.prototype,"routeName",void 0),r([s({type:[K],json:{write:!0}})],M.prototype,"stops",void 0),r([s({type:J,json:{write:!0}})],M.prototype,"traversedEdges",void 0),r([s({type:J,json:{write:!0}})],M.prototype,"traversedJunctions",void 0),r([s({type:J,json:{write:!0}})],M.prototype,"traversedTurns",void 0),M=r([O("esri.rest.support.RouteResult")],M);const ir=M;function Pe(e){return e?J.fromJSON(e).features.filter(Me):[]}let _=class extends C{constructor(e){super(e),this.checksum=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,o){return Pe(o.barriers)}readPolylineBarriers(e){return Pe(e)}readPolygonBarriers(e){return Pe(e)}};r([s({type:String})],_.prototype,"checksum",void 0),r([s({type:[Yt]})],_.prototype,"messages",void 0),r([s({type:[K]})],_.prototype,"pointBarriers",void 0),r([R("pointBarriers",["barriers"])],_.prototype,"readPointBarriers",null),r([s({type:[K]})],_.prototype,"polylineBarriers",void 0),r([R("polylineBarriers")],_.prototype,"readPolylineBarriers",null),r([s({type:[K]})],_.prototype,"polygonBarriers",void 0),r([R("polygonBarriers")],_.prototype,"readPolygonBarriers",null),r([s({type:[ir]})],_.prototype,"routeResults",void 0),_=r([O("esri.rest.support.RouteSolveResult")],_);const sr=_;function ye(e){return e instanceof J}async function nr(e,o,t){const i=[],n=[],p={},l={},d=Je(e),{path:g}=d;ye(o.stops)&&pe(o.stops.features,n,"stops.features",p),ye(o.pointBarriers)&&pe(o.pointBarriers.features,n,"pointBarriers.features",p),ye(o.polylineBarriers)&&pe(o.polylineBarriers.features,n,"polylineBarriers.features",p),ye(o.polygonBarriers)&&pe(o.polygonBarriers.features,n,"polygonBarriers.features",p);const N=await Ut(n);for(const B in p){const v=p[B];i.push(B),l[B]=N.slice(v[0],v[1])}if(Kt(l,i)){let B=null;try{B=await qe(g,o.apiKey,t)}catch{}B&&!B.hasZ&&$t(l,i)}for(const B in l)l[B].forEach((v,b)=>{it(o,B)[b].geometry=v});const a={...t,query:{...d.query,...Ft(o),f:"json"}},m=g.endsWith("/solve")?g:`${g}/solve`,{data:w}=await X(m,a);return ar(w)}function ar(e){const{barriers:o,checksum:t,directionLines:i,directionPoints:n,directions:p,messages:l,polygonBarriers:d,polylineBarriers:g,routes:N,stops:a,traversedEdges:m,traversedJunctions:w,traversedTurns:B}=e,v=f=>{const P=y.find(D=>D.routeName===f);if(P!=null)return P;const T={routeId:y.length+1,routeName:f};return y.push(T),T},b=f=>{const P=y.find(D=>D.routeId===f);if(P!=null)return P;const T={routeId:f,routeName:null};return y.push(T),T},y=[];N?.features.forEach((f,P)=>{f.geometry.spatialReference=N.spatialReference??void 0;const T=f.attributes.Name,D=P+1;y.push({routeId:D,routeName:T,route:f})}),p?.forEach(f=>{const{routeName:P}=f;v(P).directions=f});const S=(a?.features.every(f=>f.attributes.RouteName==null)??!1)&&y.length>0?y[0].routeName:null;return a?.features.forEach(f=>{f.geometry&&(f.geometry.spatialReference??=a.spatialReference??void 0);const P=S??f.attributes.RouteName,T=v(P);T.stops??=[],T.stops.push(f)}),i?.features.forEach(f=>{const P=f.attributes.RouteID,T=b(P),{geometryType:D,spatialReference:G}=i;T.directionLines??={features:[],geometryType:D,spatialReference:G},T.directionLines.features.push(f)}),n?.features.forEach(f=>{const P=f.attributes.RouteID,T=b(P),{geometryType:D,spatialReference:G}=n;T.directionPoints??={features:[],geometryType:D,spatialReference:G},T.directionPoints.features.push(f)}),m?.features.forEach(f=>{const P=f.attributes.RouteID,T=b(P),{geometryType:D,spatialReference:G}=m;T.traversedEdges??={features:[],geometryType:D,spatialReference:G},T.traversedEdges.features.push(f)}),w?.features.forEach(f=>{const P=f.attributes.RouteID,T=b(P),{geometryType:D,spatialReference:G}=w;T.traversedJunctions??={features:[],geometryType:D,spatialReference:G},T.traversedJunctions.features.push(f)}),B?.features.forEach(f=>{const P=f.attributes.RouteID,T=b(P);T.traversedTurns??={features:[]},T.traversedTurns.features.push(f)}),sr.fromJSON({barriers:o,checksum:t,messages:l,polygonBarriers:d,polylineBarriers:g,routeResults:y})}const lr={type:String,json:{read:{source:"token"},write:{target:"token"}}};let F=class extends Se.ClonableMixin(C){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};r([s({type:Boolean,json:{write:!0}})],F.prototype,"doNotLocateOnRestrictedElements",void 0),r([s({types:st,json:{read:nt,write:!0}})],F.prototype,"geometry",void 0),r([A(Lt)],F.prototype,"geometryType",void 0),r([s({type:String,json:{name:"layerName",write:!0}})],F.prototype,"name",void 0),r([A(Ct,{name:"spatialRel"})],F.prototype,"spatialRelationship",void 0),r([s({type:String,json:{write:!0}})],F.prototype,"type",void 0),r([s({type:String,json:{write:!0}})],F.prototype,"where",void 0),F=r([O("esri.rest.support.DataLayer")],F);const ur=F;var Re;let de=Re=class extends J{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Re({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};r([s({type:Boolean,json:{write:!0}})],de.prototype,"doNotLocateOnRestrictedElements",void 0),de=Re=r([O("esri.rest.support.NetworkFeatureSet")],de);const pr=de;let se=class extends Se.ClonableMixin(C){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};r([s({type:Boolean,json:{write:!0}})],se.prototype,"doNotLocateOnRestrictedElements",void 0),r([s({type:String,json:{write:!0}})],se.prototype,"url",void 0),se=r([O("esri.rest.support.NetworkUrl")],se);const cr=se;var Ie;let u=Ie=class extends Se.ClonableMixin(C){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.checksum=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return at(Ie,e)}readAccumulateAttributes(e){return e==null?null:e.map(o=>H.fromJSON(o))}writeAccumulateAttributes(e,o,t){e?.length&&(o[t]=e.map(i=>H.toJSON(i)))}writePointBarriers(e,o,t){me(e,o,t)}writePolygonBarrier(e,o,t){me(e,o,t)}writePolylineBarrier(e,o,t){me(e,o,t)}readRestrictionAttributes(e){return e==null?null:e.map(o=>Fe.fromJSON(o))}writeRestrictionAttributes(e,o,t){e?.length&&(o[t]=e.map(i=>Fe.toJSON(i)))}readStartTime(e,o){const{startTime:t}=o;return t==null?null:t==="now"?"now":new Date(t)}writeStartTime(e,o){e!=null&&(o.startTime=e==="now"?"now":e.getTime())}readStops(e,o){return vr(o.stops)}writeStops(e,o,t){me(e,o,t)}};r([s({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],u.prototype,"accumulateAttributes",void 0),r([R("accumulateAttributes")],u.prototype,"readAccumulateAttributes",null),r([U("accumulateAttributes")],u.prototype,"writeAccumulateAttributes",null),r([s(lr)],u.prototype,"apiKey",void 0),r([s({json:{write:!0}})],u.prototype,"attributeParameterValues",void 0),r([s({type:String,json:{write:!0}})],u.prototype,"checksum",void 0),r([s({type:String,json:{write:!0}})],u.prototype,"directionsLanguage",void 0),r([A(Ee)],u.prototype,"directionsLengthUnits",void 0),r([A(kt)],u.prototype,"directionsOutputType",void 0),r([A(Mt)],u.prototype,"directionsStyleName",void 0),r([A(Te,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],u.prototype,"directionsTimeAttribute",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"findBestSequence",void 0),r([s({type:Number,json:{write:!0}})],u.prototype,"geometryPrecision",void 0),r([s({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionM",void 0),r([s({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionZ",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"ignoreInvalidLocations",void 0),r([A(H,{name:"impedanceAttributeName",ignoreUnknown:!1})],u.prototype,"impedanceAttribute",void 0),r([s({type:Number,json:{write:!0}})],u.prototype,"outputGeometryPrecision",void 0),r([A(_t)],u.prototype,"outputGeometryPrecisionUnits",void 0),r([A(xt)],u.prototype,"outputLines",void 0),r([s({type:q,json:{name:"outSR",write:!0}})],u.prototype,"outSpatialReference",void 0),r([s({json:{write:!0}})],u.prototype,"overrides",void 0),r([s({json:{name:"barriers",write:!0}})],u.prototype,"pointBarriers",void 0),r([U("pointBarriers")],u.prototype,"writePointBarriers",null),r([s({json:{write:!0}})],u.prototype,"polygonBarriers",void 0),r([U("polygonBarriers")],u.prototype,"writePolygonBarrier",null),r([s({json:{write:!0}})],u.prototype,"polylineBarriers",void 0),r([U("polylineBarriers")],u.prototype,"writePolylineBarrier",null),r([s({type:Boolean,json:{write:!0}})],u.prototype,"preserveFirstStop",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"preserveLastStop",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"preserveObjectID",void 0),r([s({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],u.prototype,"restrictionAttributes",void 0),r([R("restrictionAttributes")],u.prototype,"readRestrictionAttributes",null),r([U("restrictionAttributes")],u.prototype,"writeRestrictionAttributes",null),r([A(Jt)],u.prototype,"restrictUTurns",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnBarriers",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnDirections",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnPolygonBarriers",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnPolylineBarriers",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnRoutes",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnStops",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedEdges",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedJunctions",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedTurns",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"returnZ",void 0),r([s({json:{write:!0}})],u.prototype,"startTime",void 0),r([R("startTime")],u.prototype,"readStartTime",null),r([U("startTime")],u.prototype,"writeStartTime",null),r([s({type:Boolean,json:{write:!0}})],u.prototype,"startTimeIsUTC",void 0),r([s({json:{write:!0}})],u.prototype,"stops",void 0),r([R("stops")],u.prototype,"readStops",null),r([U("stops")],u.prototype,"writeStops",null),r([s({type:Boolean,json:{write:!0}})],u.prototype,"timeWindowsAreUTC",void 0),r([s({type:Be,json:{write:!0}})],u.prototype,"travelMode",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"useHierarchy",void 0),r([s({type:Boolean,json:{write:!0}})],u.prototype,"useTimeWindows",void 0),u=Ie=r([O("esri.rest.support.RouteParameters")],u);const yr=u;function dr(e){return e&&"type"in e}function mr(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function fr(e){return e&&"url"in e}function hr(e){return e&&"features"in e}function vr(e){return dr(e)?ur.fromJSON(e):fr(e)?cr.fromJSON(e):mr(e)?pr.fromJSON(e):hr(e)?J.fromJSON(e):null}function me(e,o,t){e!=null&&(o[t]=j.isCollection(e)?{features:e.toArray().map(i=>i.toJSON())}:e.toJSON())}function fe(e){if(!e.length)return;const o=e.toArray(),t=o.map(({objectId:n})=>n).filter(n=>n!=null);let i=Math.max(...t,0);for(const n of o)n.objectId==null&&(n.objectId=++i)}function he(e,o){return!!e.length&&e.length===o.length&&Ve(e)&&Ve(o)}function Ve(e){return e.every(({objectId:o})=>o!=null)}function Ae(e){return e.length?e:null}function Oe(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Oe("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Oe("esriGeometryPolyline")}}}function ve(e){return"layers"in e}function wr(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function gr(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function br(e,o,t){const i=o.networkDataset?.networkAttributes,n=i?.filter(({usageType:c})=>c==="cost")??[],p=t.travelMode??o.defaultTravelMode;if(p==null)return void Xe().warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:l,distanceAttributeName:d}=p,g=n.find(({name:c})=>c===l),N=n.find(({name:c})=>c===d),a=t.travelMode?.impedanceAttributeName??t.impedanceAttribute??o.impedance,m=g?.units,w=N?.units;if(!m||!w)throw new k("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const B=t.directionsLanguage??o.directionsLanguage,v=t.accumulateAttributes??o.accumulateAttributeNames??[],b=new Set(n.filter(({name:c})=>c===l||c===d||c===a||c!=null&&v.includes(c)).map(({name:c})=>c)),y=c=>{for(const De in c)b.has(De)||delete c[De]};for(const c of e.pointBarriers)c.costs!=null&&(c.addedCost=c.costs[a]??0,y(c.costs));for(const c of e.polygonBarriers)c.costs!=null&&(c.scaleFactor=c.costs[a]??1,y(c.costs));for(const c of e.polylineBarriers)c.costs!=null&&(c.scaleFactor=c.costs[a]??1,y(c.costs));const{routeInfo:S}=e,{findBestSequence:f,preserveFirstStop:P,preserveLastStop:T,startTimeIsUTC:D,timeWindowsAreUTC:G}=t;S.analysisSettings=new Gt({accumulateAttributes:v,directionsLanguage:B,findBestSequence:f,preserveFirstStop:P,preserveLastStop:T,startTimeIsUTC:D,timeWindowsAreUTC:G,travelMode:p}),S.totalDuration=Y(S.totalCosts?.[l]??0,m),S.totalDistance=je(S.totalCosts?.[d]??0,w),S.totalLateDuration=Y(S.totalViolations?.[l]??0,m),S.totalWaitDuration=Y(S.totalWait?.[l]??0,m),S.totalCosts!=null&&y(S.totalCosts),S.totalViolations!=null&&y(S.totalViolations),S.totalWait!=null&&y(S.totalWait);for(const c of e.stops)c.serviceCosts!=null&&(c.serviceDuration=Y(c.serviceCosts[l]??0,m),c.serviceDistance=je(c.serviceCosts[d]??0,w),y(c.serviceCosts)),c.cumulativeCosts!=null&&(c.cumulativeDuration=Y(c.cumulativeCosts[l]??0,m),c.cumulativeDistance=je(c.cumulativeCosts[d]??0,w),y(c.cumulativeCosts)),c.violations!=null&&(c.lateDuration=Y(c.violations[l]??0,m),y(c.violations)),c.wait!=null&&(c.waitDuration=Y(c.wait[l]??0,m),y(c.wait))}function Sr(e,o){for(const t of e){const i=o.find(n=>n.objectId===t.objectId);i&&(i.addedCost=t.addedCost,i.barrierType=t.barrierType,i.costs=t.costs,i.curbApproach=t.curbApproach,i.fullEdge=t.fullEdge,i.geometry=t.geometry,i.name=t.name,i.sideOfEdge=t.sideOfEdge,i.sourceId=t.sourceId,i.sourceOid=t.sourceOid,i.status=t.status,i.symbol=t.symbol)}}function Tr(e,o){for(const t of e){const i=o.find(n=>n.objectId===t.objectId);i&&(i.barrierType=t.barrierType,i.costs=t.costs,i.geometry=t.geometry,i.name=t.name,i.scaleFactor=t.scaleFactor,i.symbol=t.symbol)}}function Br(e,o){for(const t of e){const i=o.find(n=>n.objectId===t.objectId);i&&(i.barrierType=t.barrierType,i.costs=t.costs,i.geometry=t.geometry,i.name=t.name,i.scaleFactor=t.scaleFactor,i.symbol=t.symbol)}}function Nr(e,o){for(const t of e){const i=o.find(n=>n.objectId===t.objectId);i&&(i.arriveCurbApproach=t.arriveCurbApproach,i.arriveTime=t.arriveTime,i.arriveTimeOffset=t.arriveTimeOffset,i.cumulativeCosts=t.cumulativeCosts,i.cumulativeDistance=t.cumulativeDistance,i.cumulativeDuration=t.cumulativeDuration,i.curbApproach=t.curbApproach,i.departCurbApproach=t.departCurbApproach,i.departTime=t.departTime,i.departTimeOffset=t.departTimeOffset,i.distanceToNetworkInMeters=t.distanceToNetworkInMeters,i.geometry=t.geometry,i.lateDuration=t.lateDuration,i.name=t.name,i.navLatency=t.navLatency,i.posAlong=t.posAlong,i.routeName=t.routeName,i.serviceCosts=t.serviceCosts,i.serviceDistance=t.serviceDistance,i.serviceDuration=t.serviceDuration,i.sequence=t.sequence,i.sideOfEdge=t.sideOfEdge,i.snapX=t.snapX,i.snapY=t.snapY,i.snapZ=t.snapZ,i.sourceId=t.sourceId,i.sourceOid=t.sourceOid,i.status=t.status,i.symbol=t.symbol,i.timeWindowEnd=t.timeWindowEnd,i.timeWindowStart=t.timeWindowStart,i.violations=t.violations,i.waitDuration=t.waitDuration,i.wait=t.wait)}}async function ze(e){const o=q.WGS84;return await gt(e.spatialReference,o),bt(e,o)}function Y(e,o){switch(o){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function je(e,o){return o==="decimal-degrees"||o==="points"||o==="unknown"?e:ht(e,o,"meters")}function Pr(e){const{attributes:o,geometry:t,popupTemplate:i,symbol:n}=e.toGraphic().toJSON();return{attributes:o,geometry:t,popupInfo:i,symbol:n}}const Rr=j.ofType(le),Ir=j.ofType(ue),$e=j.ofType(ee),Ke=j.ofType(te),He=j.ofType(re),Qe=j.ofType(oe),Ye="esri.layers.RouteLayer",Xe=()=>Le.getLogger(Ye);let h=class extends Tt(Pt(Bt(Nt(vt(St))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.checksum=null,this.defaultSymbols=new Ue,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new $e,this.polygonBarriers=new Ke,this.polylineBarriers=new He,this.routeInfo=null,this.spatialReference=q.WGS84,this.stops=new Qe,this.type="route";const o=()=>{this._setStopSymbol(this.stops)};this.addHandles(lt(()=>this.stops,"change",o,{sync:!0,onListenerAdd:o}))}writeFeatureCollectionWebmap(e,o,t,i){const n=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(d=>!!d),p=n.map((d,g)=>g),l=i.origin==="web-map"?"featureCollection.layers":"layers";ut(l,n,o),o.opacity=this.opacity,o.visibility=this.visible,o.visibleLayers=p}readDirectionLines(e,o){return this._getNetworkFeatures(o,"DirectionLines",t=>le.fromGraphic(t))}readDirectionPoints(e,o){return this._getNetworkFeatures(o,"DirectionPoints",t=>ue.fromGraphic(t))}get fullExtent(){const e=new ke({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:q.WGS84});if(this.routeInfo?.geometry!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const o=this.stops.filter(n=>n.geometry!=null);if(o.length<2)return e;const{spatialReference:t}=o.at(0).geometry;if(t==null)return e;const i=o.toArray().map(n=>{const p=n.geometry;return[p.x,p.y]});return new pt({points:i,spatialReference:t}).extent}readMaxScale(e,o){return(ve(o)?o.layers:o.featureCollection?.layers)?.find(t=>t.layerDefinition.maxScale!=null)?.layerDefinition.maxScale??0}readMinScale(e,o){return(ve(o)?o.layers:o.featureCollection?.layers)?.find(t=>t.layerDefinition.minScale!=null)?.layerDefinition.minScale??0}readPointBarriers(e,o){return this._getNetworkFeatures(o,"Barriers",t=>ee.fromGraphic(t))}readPolygonBarriers(e,o){return this._getNetworkFeatures(o,"PolygonBarriers",t=>te.fromGraphic(t))}readPolylineBarriers(e,o){return this._getNetworkFeatures(o,"PolylineBarriers",t=>re.fromGraphic(t))}readRouteInfo(e,o){return this._getNetworkFeatures(o,"RouteInfo",t=>Ne.fromGraphic(t)).at(0)??null}readSpatialReference(e,o){const t=ve(o)?o.layers:o.featureCollection?.layers;if(!t?.length)return q.WGS84;const{layerDefinition:i,featureSet:n}=t[0],p=n.features[0],l=p?.geometry?.spatialReference??n.spatialReference??i.spatialReference??i.extent.spatialReference??_e;return q.fromJSON(l)}readStops(e,o){return this._getNetworkFeatures(o,"Stops",t=>oe.fromGraphic(t),t=>this._setStopSymbol(t))}get title(){return this.routeInfo?.name??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return xe.routeServiceUrl}set url(e){e!=null?this._set("url",ct(e,Xe())):this._set("url",xe.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:o}=this;if(!o)throw new k("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!o.id)throw new k("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(o.type!=="Feature Collection")throw new k("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(this.routeInfo==null)throw new k("routelayer:route-unsolved","save() requires a solved route");const{portal:t}=o;await t.signIn(),t.user||await o.reload();const{itemUrl:i,itemControl:n}=o;if(n!=="admin"&&n!=="update")throw new k("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const p={messages:[],origin:"portal-item",portal:t,url:i?yt(i):void 0,writtenProperties:[]},l=this.write(void 0,p);return o.extent=await ze(e),o.title=this.title,await o.update({data:l}),o}async saveAs(e,o={}){if(await this.load(),this.routeInfo==null)throw new k("routelayer:route-unsolved","saveAs() requires a solved route");const t=Rt.from(e).clone();t.extent??=await ze(this.fullExtent),t.id=null,t.portal??=dt.getDefault(),t.title??=this.title,t.type="Feature Collection",t.typeKeywords=["Data","Feature Collection",It.MULTI_LAYER,"Route Layer"];const{portal:i}=t,n={messages:[],origin:"portal-item",portal:i,url:null,writtenProperties:[]};await i.signIn();const p=o?.folder,l=this.write(void 0,n);return await i.user.addItem({item:t,folder:p,data:l}),this.portalItem=t,wt(n),n.portalItem=t,t}async solve(e,o){fe(this.stops),fe(this.pointBarriers),fe(this.polylineBarriers),fe(this.polygonBarriers);const t=e?.stops??this.stops,i=e?.pointBarriers??Ae(this.pointBarriers),n=e?.polylineBarriers??Ae(this.polylineBarriers),p=e?.polygonBarriers??Ae(this.polygonBarriers);if(t==null)throw new k("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((wr(t)||gr(t))&&t.features.length<2||j.isCollection(t)&&t.length<2)throw new k("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(j.isCollection(t))for(const y of t)y.routeName=null;const l=e?.apiKey,{checksum:d,url:g}=this,N=await this._getServiceDescription(g,l,o),a=e?.travelMode??N.defaultTravelMode,m=e?.accumulateAttributes??[];a&&(m.push(a.distanceAttributeName),a.timeAttributeName&&m.push(a.timeAttributeName));const w={accumulateAttributes:m,checksum:d,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:i,polylineBarriers:n,polygonBarriers:p,preserveObjectID:!0,returnBarriers:!!i,returnDirections:!0,returnPolygonBarriers:!!p,returnPolylineBarriers:!!n,returnRoutes:!0,returnStops:!0,stops:t},B=yr.from(e??{});let v;B.set(w);try{v=await nr(g,B,o)}catch(y){throw mt(y)?y:new k("routelayer:failed-route-request","the routing request failed",{error:y})}const b=this._toRouteLayerSolution(v);return this._isOverridden("title")||(this.title=b.routeInfo.name??"Route"),br(b,N,B),b}update(e){const{checksum:o,directionLines:t,directionPoints:i,pointBarriers:n,polygonBarriers:p,polylineBarriers:l,routeInfo:d,stops:g}=e;he(g,this.stops)?Nr(g,this.stops):this.set({stops:g}),he(n,this.pointBarriers)?Sr(n,this.pointBarriers):this.set({pointBarriers:n}),he(l,this.polylineBarriers)?Tr(l,this.polylineBarriers):this.set({polylineBarriers:l}),he(p,this.polygonBarriers)?Br(p,this.polygonBarriers):this.set({polygonBarriers:p}),this.set({checksum:o}),this._set("directionLines",t),this._set("directionPoints",i),this._set("routeInfo",d),d.geometry!=null&&(this.spatialReference=d.geometry.spatialReference)}_getNetworkFeatures(e,o,t,i){const n=ve(e)?e.layers:e.featureCollection?.layers,p=n?.find(b=>b.layerDefinition.name===o);if(p==null)return new j;const{layerDefinition:l,popupInfo:d,featureSet:g}=p,N=l.drawingInfo.renderer,{features:a}=g,m=g.spatialReference??l.spatialReference??l.extent.spatialReference??_e,w=N&&At(N),B=q.fromJSON(m),v=a.map(b=>{const y=K.fromJSON(b);y.geometry!=null&&b.geometry!=null&&b.geometry.spatialReference==null&&(y.geometry.spatialReference=B);const S=t(y);return S.symbol??=w?.getSymbol(y)??this._getNetworkSymbol(o),S.popupTemplate??=d&&ft.fromJSON(d),S});return i&&v.some(({symbol:b})=>!b)&&i(v),new j(v)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,o,t){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const i=await qe(e,o,t);return this._cachedServiceDescription={serviceDescription:i,url:e},i}_setStopSymbol(e){if(!e||!e.length||!this.defaultSymbols.stops||e.every(({symbol:a})=>!!a))return;const{first:o,last:t,middle:i,unlocated:n,waypoint:p,break:l}=this.defaultSymbols.stops;if(this.routeInfo==null||e.length===1)return void e.forEach((a,m)=>{switch(m){case 0:a.symbol=o;break;case e.length-1:a.symbol=t;break;default:a.symbol=i}});const d=e.map(({sequence:a})=>a).filter(a=>a!=null),g=Math.min(...d),N=Math.max(...d);for(const a of e)a.sequence!==g?a.sequence!==N?a.status==="ok"||a.status==="not-located-on-closest"?a.locationType!=="waypoint"?a.locationType!=="break"?a.symbol=i:a.symbol=l:a.symbol=p:a.symbol=n:a.symbol=t:a.symbol=o}_toRouteLayerSolution(e){const{checksum:o,routeResults:t}=e,i=t[0].stops?.map(m=>oe.fromJSON(m.toJSON()));this._setStopSymbol(i);const n=new Qe(i),p=new Ke(e.polygonBarriers?.map(m=>{const w=te.fromJSON(m.toJSON());return w.symbol=this.defaultSymbols.polygonBarriers,w})),l=new He(e.polylineBarriers?.map(m=>{const w=re.fromJSON(m.toJSON());return w.symbol=this.defaultSymbols.polylineBarriers,w})),d=new $e(e.pointBarriers?.map(m=>{const w=ee.fromJSON(m.toJSON());return w.symbol=this.defaultSymbols.pointBarriers,w})),g=t[0].route?.toJSON(),N=Ne.fromJSON(g);N.symbol=this.defaultSymbols.routeInfo;const a=new Ir(t[0].directionPoints?.features.map(m=>{const w=ue.fromJSON(m.toJSON());return w.symbol=this.defaultSymbols.directionPoints,w}));return{checksum:o,directionLines:new Rr(t[0].directionLines?.features.map(m=>{const w=le.fromJSON(m.toJSON());return w.symbol=this.defaultSymbols.directionLines,w})),directionPoints:a,pointBarriers:d,polygonBarriers:p,polylineBarriers:l,routeInfo:N,stops:n}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",le.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",ue.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,o,t,i,n,p){if(!e?.length)return null;const l=this.spatialReference.toJSON(),{fullExtent:d,maxScale:g,minScale:N}=this;return{featureSet:{features:e.toArray().map(a=>Pr(a)),geometryType:t,spatialReference:l},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:o!=null?o.toJSON():Oe(t)}},extent:d.toJSON(),fields:i,geometryType:t,hasM:!1,hasZ:!1,maxScale:g,minScale:N,name:n,objectIdField:"ObjectID",spatialReference:l,title:p,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",ee.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",te.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",re.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new j([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Ne.fields,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",oe.fields,"Stops","Stops");if(e==null)return null;const{stops:o}=this.defaultSymbols,t=o?.first?.toJSON(),i=o?.middle?.toJSON(),n=o?.last?.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:i,uniqueValueInfos:[{value:"1",symbol:t,label:"First Stop"},{value:`${this.stops.length}`,symbol:n,label:"Last Stop"}]},e}};r([s({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],h.prototype,"_featureCollection",void 0),r([U(["web-map","portal-item"],"_featureCollection")],h.prototype,"writeFeatureCollectionWebmap",null),r([s({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],h.prototype,"_type",void 0),r([s({type:String})],h.prototype,"checksum",void 0),r([s({nonNullable:!0,type:Ue})],h.prototype,"defaultSymbols",void 0),r([s({readOnly:!0})],h.prototype,"directionLines",void 0),r([R(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],h.prototype,"readDirectionLines",null),r([s({readOnly:!0})],h.prototype,"directionPoints",void 0),r([R(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],h.prototype,"readDirectionPoints",null),r([s({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],h.prototype,"featureCollectionType",void 0),r([s({readOnly:!0})],h.prototype,"fullExtent",null),r([s({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],h.prototype,"legendEnabled",void 0),r([s({type:["show","hide"]})],h.prototype,"listMode",void 0),r([s({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"maxScale",void 0),r([R(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],h.prototype,"readMaxScale",null),r([s({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"minScale",void 0),r([R(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],h.prototype,"readMinScale",null),r([s({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],h.prototype,"operationalLayerType",void 0),r([s({nonNullable:!0,type:j.ofType(ee)})],h.prototype,"pointBarriers",void 0),r([R(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],h.prototype,"readPointBarriers",null),r([s({nonNullable:!0,type:j.ofType(te)})],h.prototype,"polygonBarriers",void 0),r([R(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolygonBarriers",null),r([s({nonNullable:!0,type:j.ofType(re)})],h.prototype,"polylineBarriers",void 0),r([R(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolylineBarriers",null),r([s({readOnly:!0})],h.prototype,"routeInfo",void 0),r([R(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],h.prototype,"readRouteInfo",null),r([s({type:q})],h.prototype,"spatialReference",void 0),r([R(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],h.prototype,"readSpatialReference",null),r([s({nonNullable:!0,type:j.ofType(oe)})],h.prototype,"stops",void 0),r([R(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],h.prototype,"readStops",null),r([s()],h.prototype,"title",null),r([s({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),r([s()],h.prototype,"url",null),h=r([O(Ye)],h);const Ar=h;export{Ar as default};
