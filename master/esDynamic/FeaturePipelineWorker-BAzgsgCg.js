import{b_ as xe,iO as Cs,bZ as ke,M as R,bj as Ms,bk as Ts,bO as Os,d_ as As,dx as nt,ad as ot,aY as y,b$ as qs,n as Z,an as K,k$ as Rs,am as ht,hR as Ds,c5 as ct,kL as ut,kx as ee,h_ as Fe,Q as dt,T as j,bA as lt,b2 as Ps,x as L,z as te,K as _t,aL as pt,aM as Ce,s as A,e4 as Es,fu as se,a as re,ax as js,g5 as Ws,hV as Us,hS as Ls,i8 as ft,aP as zs,eP as gt,a2 as Gs,bs as Bs,hl as Ns,L as Vs}from"./main-BC8gbEPx.js";import{O as Me,c as $s}from"./workers-BT3Yd1UI.js";import{z as Qs}from"./TileInfo-DcHqeHqG.js";import{a as F}from"./definitions-CBIQmVpq.js";import{y as mt,a as yt,s as Te}from"./defaultCIMValues-BdDBSmzz.js";import{j as Oe,i as Xs,h as Ys,k as Hs}from"./Tile-CVY6CM6q.js";import{e as Ae}from"./TileKey-BqqXrsHm.js";import{a as bt,p as ie,c as qe,i as ae,u as C,d as Js,M as Re,s as Zs,x as Ks,e as er,f as tr}from"./AttributeStore-DnmfRxpw.js";import{r as z,s as G,t as sr,i as De,_ as rr,e as It}from"./streamLayerUtils-Dae818Yl.js";import{r as ir,F as ar}from"./MeshWriterRegistry-DGrgaWNJ.js";import{QueueProcessor as vt}from"./QueueProcessor-buPyW8Di.js";import{p as nr,r as wt,M as or,w as hr,N as cr,d as W,W as St,U as ur,u as xt,X as Q,f as dr,h as kt}from"./featureConversionUtils-D2eD4q8B.js";import{s as O,e as k}from"./OptimizedFeature-DuSNmhSJ.js";import{x as lr,j as ne}from"./queryUtils-Cai_XSQo.js";import{Z as oe}from"./FieldsIndex-Dj6cAdqw.js";import{e as _r}from"./optimizedFeatureQueryEngineAdapter-BHAC2Txt.js";import{L as Ft}from"./QueryEngine-D_nQ9Z3n.js";import{s as Pe}from"./memoryEstimations-Cij6FoJa.js";import{u as Ee,i as Ct,a as Mt,s as Tt}from"./quantizationUtils-BjEbvvIf.js";import{s as pr,i as fr,u as gr}from"./operatorGeodeticDensify-BrMdA70T.js";import{e as mr}from"./geodeticCurveType-D_etKnbP.js";import{P as yr}from"./normalizeUtils-BcS9eell.js";import{a as br}from"./normalizeUtilsSync-DizCKgRV.js";import{d as Ir,c as Ot,S as vr}from"./query-DJPSoDkm.js";import{c as wr}from"./displayFilterUtils-ubGHEDep.js";import{b as At}from"./Query-BDnleJ4k.js";import{p as Sr}from"./TimeExtent-B3UXB00l.js";import{n as xr}from"./uuid-Dj9mdEVg.js";import{$ as qt}from"./ogcFeatureUtils-C2s82zsJ.js";import{a as kr}from"./pbf-D0PvmNRs.js";import{b as Fr,h as Cr}from"./pbfQueryUtils-BLXiwLKW.js";import{J as Mr}from"./parquet-Dg4R7NTr.js";import{t as Rt}from"./CircularArray-DaQg3PQl.js";import{createConnection as Tr}from"./createConnection-Kazj2xa8.js";import{d as Or}from"./UpdateTracking2D-CRljlfYI.js";let Ar=class{constructor(i){this._client=i,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(i){Me(this._eventLog.onEvent(i))}};const he=1,je=2,ce=4,We=8,Ue=16,ue=32,Le=64,de=128;function ze(i){switch(i){case he:case We:case ue:return-1;case je:case Le:return 0;case ce:case Ue:case de:return 1}}function Ge(i){switch(i){case he:case je:case ce:return-1;case We:case Ue:return 0;case ue:case Le:case de:return 1}}const Dt=he|We|ue,Pt=ce|Ue|de,Et=he|je|ce,jt=ue|Le|de;let qr=class{constructor(i,e,t,s,r=0){this.tileKey=i,this._bufferingEnabled=e,this._sizeHint=r,this._meshes={self:new bt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const a=s?1:0;this._copyBufferedDataIntoSelf=t&&this._bufferingEnabled&&i.level===a}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(i){this._meshes.self.indexEnsureSize(i)}entityStart(i,e=i){this._currentEntityOverlaps=0,this._meshes.self.entityStart(i,e)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let i=0;i<8;i++){const e=1<<i;this._currentEntityOverlaps&e&&this._meshes.neighbors[i].entityEnd()}}}recordStart(i,e,t){this._currentRecordOverlaps=0,this._meshes.self.recordStart(i,e,t)}recordEnd(i=0){const e=this._meshes.self.recordEnd(this._currentRecordOverlaps);return e&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):e}recordBounds(i,e,t,s){this._bufferingEnabled&&this._addOverlap(i,e,t,s)}recordCount(){return this._meshes.self.recordCount()}metricStart(i){this._meshes.self.metricStart(i)}metricBoxWrite(i){this._meshes.self.metricBoxWrite(i)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(i){this._meshes.self.vertexWrite(i)}vertexWriteF32(i){this._meshes.self.vertexWriteF32(i)}vertexWriteRegion(i){this._meshes.self.vertexWriteRegion(i)}indexWrite(i){this._meshes.self.indexWrite(i)}serialize(i){const e={message:[],transferList:[]},t=this._meshes.self.serialize();return e.message.push({tileId:this.tileKey.id,...t.message}),e.transferList.push(...t.transferList),this._meshes.neighbors.forEach((s,r)=>{const a=s.serialize(),n=1<<r,o=ze(n),h=Ge(n),c=new Ae(this.tileKey).getNormalizedNeighbor(o,h,i);e.message.push({tileId:c.id,...a.message}),e.transferList.push(...a.transferList)}),e}_addOverlap(i,e,t,s){const r=Math.min(F/2,t),a=Math.min(F/2,s),n=255^((i<0+r?Pt:i>=F-r?Dt:Pt|Dt)|(e<0+a?jt:e>=F-a?Et:jt|Et));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let i=0;i<8;i++){const e=1<<i;if(this._currentRecordOverlaps&e){if(this._copyBufferedDataIntoSelf){const a=-ze(e)*F,n=-Ge(e)*F;if(n!==0)continue;this._meshes.self.copyLast(a,n);continue}if(!this._meshes.neighbors[i]){const a=Math.floor(this._sizeHint/16);this._meshes.neighbors[i]=new bt(e,a)}const t=this._meshes.neighbors[i],s=-ze(e)*F,r=-Ge(e)*F;t.copyLastFrom(this._meshes.self,s,r)}}}},Rr=class{},D=class as{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new as;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){return this._defaultResult?.some(t=>t.hasArcadeDependency(e))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const a=this.getBackgroundFill();if(a)return[...a,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Dr=class ns extends D{static async fromDictionaryRenderer(e,t){return new ns(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const a=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!a)return;const n=await this._context.createMeshWriters(a.meshes);this._hashToGroup.set(r,n)}},Pr=class os extends D{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new os(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async o=>{const h=await e.createMeshWriters(o.meshes);r.add(o,h)}));const a=await e.createMeshWriters(t.defaultSymbol);r.setDefault(a);const n=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(n),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){return this._field?.hasArcadeDependency(e)||this._intervals.some(t=>t.result.some(s=>s.hasArcadeDependency(e)))}doMatch(e,t){const s=this._field?.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:a,result:n}=this._intervals[r],o=s>=a.min,h=this._isMaxInclusive?s<=a.max:s<a.max;if(o&&h)return n}return null}},Er=class hs extends D{static async fromLabelSchema(e,t){const s=t.classes.map(async a=>{const n=await e.createMeshWriters(a.meshes);return{minScale:a.minScale,maxScale:a.maxScale,meshes:n,expression:null,where:await e.storage.createWhereClause(a.where)}}),r=await Promise.all(s);return new hs(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),a=[];for(const n of r)n.where&&!n.where(e,s)||a.push(...n.meshes);return a}hasArcadeDependency(e){return this._labels.some(t=>t.meshes.some(s=>s.hasArcadeDependency(e)))}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},jr=class cs extends D{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(h=>!!h),a=new cs(r,t.fieldDelimiter),n=await e.createMeshWriters(t.defaultSymbol);a.setDefault(n);const o=await e.createMeshWriters(t.backgroundFill);return a.setBackgroundFill(o),await Promise.all(t.map.map(async(h,c)=>{const u=await e.createMeshWriters(h.symbol);h.value==="<Null>"?a.setNullResult(u):a.add(h.value,u,c+1)})),a}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){return this._fields.some(t=>t.hasArcadeDependency(e))||[...this._resultsMap.values()].some(t=>t.meshWriters.some(s=>s.hasArcadeDependency(e)))||this._nullResult?.some(t=>t.hasArcadeDependency(e))||!1}doMatch(e,t){const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const a=r.read(e,t);a==null||a===""?s.push("<Null>"):s.push(a)}return s.join(this._separator)}};async function P(i,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return D.from(i,e);case"interval":return Pr.fromIntervalSchema(i,e);case"dictionary":return Dr.fromDictionaryRenderer(i,e);case"label":return Er.fromLabelSchema(i,e);case"map":return jr.fromMatcherSchema(i,e);case"subtype":return Wr.fromSubtypes(i,e);case"cluster":return Ur.fromClusterSchema(i,e);case"track":return Lr.fromTrackSchema(i,e);default:throw new Error("Impl")}}let Wr=class us extends D{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const a in t.renderers){const n=parseInt(a,10),o=P(e,t.renderers[a]).then(h=>s.set(n,h));r.push(o)}return await Promise.all(r),new us(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),a=this._subMatchers.get(r);return a?a.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}},Ur=class ds extends D{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([P(e,t.feature),P(e,t.cluster)]);return new ds(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}},Lr=class ls extends D{static async fromTrackSchema(e,t){const[s,r,a]=await Promise.all([P(e,t.previousObservation),P(e,t.latestObservation),P(e,t.trackLine)]);return new ls(s,r,a)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(z)){case G.TrackLine:return this._trackLineMatcher.match(e,t,s);case G.LatestObservation:return this._latestObservationMatcher.match(e,t,s);case G.PreviousObservation:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}},zr=class _s extends Rr{static async create(e,t){const s=await P(e,t.symbology),r=t.labels?await P(e,t.labels):null;return new _s(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const a=this._symbology.match(t,s,r);if(a){for(const n of a)n.enqueueRequest(e,t,s);if(this._labels){const n=this._labels.match(t,s,r);if(!n)return;for(const o of n)o.enqueueRequest(e,t,s)}}}write(e,t,s,r,a,n){const o=this._symbology.match(s,r,a);if(o){for(const h of o)h.write(e,t,s,r,n);if(e.entityRecordCount()>=1&&this._labels){const h=this._labels.match(s,r,a);if(!h)return;for(const c of h)c.setReferences(o),c.write(e,t,s,r,n)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){return!(!this._symbology.hasArcadeDependency(e)&&!this._labels?.hasArcadeDependency(e))}},Gr=class{constructor(i,e,t,s){this.storage=i,this.proxy=e,this.viewParams=t,this.registry=s}async createMeshWriters(i){const e=i.map(t=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,t));return Promise.all(e)}},Br=class{constructor(i){this._outstandingMessages=[],this._queue=new vt({concurrency:i.concurrency,process:e=>i.process(e)})}async push(i){if(i.end)return await Promise.all(this._outstandingMessages),await this._queue.push(i),void(this._outstandingMessages=[]);const e=this._queue.push(i);return this._outstandingMessages.push(e),e}},Be=class tt{static async create(e,t){if(t.statisticType==="count"){const r=new ir(1);return new tt(t.name,t.alias,t.type,t.statisticType,r)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new tt(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,a){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=a}},le=class{constructor(i){this.subscription=i,this.handledChunks=new Set}destroy(){}},Wt=class{constructor(i,e,t){this._source=i,this._attributeStore=e,this._sqlOptions=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}onSubscribe(i){const e=this.createState(i);this._sendStates.set(i.key.id,e),this.updateChunks()}onUnsubscribe(i){this._sendStates.get(i.key.id)?.destroy(),this._sendStates.delete(i.key.id)}invalidate(){const i=Array.from(this._sendStates.values());this._sendStates.clear();for(const e of i)e.destroy(),this.onSubscribe(e.subscription)}invalidateAttributeData(i){}hasArcadeDependency(i){return!1}getFeatureObjectIdsForAggregate(i){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(i){return this.displayMap(i,e=>e,e=>e)}getDisplayAndObjectIds(i){return this.displayMap(i,e=>e,(e,t,s)=>[e,s])}afterUpdateChunks(){}},Ne=class extends Wt{constructor(i,e,t,s,r){super(i,e,r),this.spatialReference=t,this.aggregateFields=s,this._arcadeDependencies=new Set,this.events=new xe,this.featureAdapter=_r;for(const a of s)Cs(this._arcadeDependencies,a.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new Ft({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(i){}hasArcadeDependency(i){return this._arcadeDependencies.has(i)}forEach(i){return this.forEachAggregateWorldSpace(i)}forEachInBounds(i,e){}forEachBounds(i,e){const t=ke();for(const s of i){const r=nr(t,s.geometry,!1,!1);r&&e(r)}}},B=class{constructor(i,e,t,s,r){this.subscription=i,this.reader=e,this.clear=t,this.end=s,this.debugInfo=r,this.type="append"}get id(){return this.subscription.tile.id}createMessage(i,e,t){return{type:"append",clear:this.clear,id:this.id,append:i,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:e,attributeEpoch:t}}},Ve=class{constructor(i,e,t,s,r){this.subscription=i,this.reader=e,this.remove=t,this.end=s,this.debugInfo=r,this.type="update"}get id(){return this.subscription.tile.id}createMessage(i,e,t){return{type:"update",id:this.id,modify:i,debugInfo:this.debugInfo,remove:this.remove,version:e,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:t}}},Nr=class extends le{constructor(i,e){super(i),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=e}reset(){this.destroy(),this.done=!1}destroy(){const i=this.subscription.tile.key.level;for(const e of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${e}.${i}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const i of this.featureCache.values()){const e=i.clone();e.geometry&&or(e.geometry,e.geometry,!1,!1,this.subscription.tile.transform),yield e}}},Vr=class ps extends Ne{static async create(e,t,s,r,a,n){const o=new ie({spatialReference:t}),h=await Promise.all(e.fields.map(async u=>Be.create(o,u))),c=e.featureFilter?await qe.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await lr(t,R.WGS84),new ps(e,c,a,h,t,s,r,n)}constructor(e,t,s,r,a,n,o,h){super(n,o,a,r,h),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=ae.createFeature({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fieldsIndex:new oe(e.fields).toJSON(),globalIdField:null,spatialReference:n.metadata.spatialReference,outSpatialReference:n.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new Nr(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values())t.reset(),yield new B(t.subscription,C.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),a=[];for(const n of this._sendStates.values())for(const o of n.featuresWorldSpace()){const{objectId:h,displayId:c}=o,u=r.get(h);if(u!=null){const d=s(c,u,h);a.push(d),r.delete(h)}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const a of this._sendStates.values())for(const n of a.featuresWorldSpace())t.has(n.displayId)&&!s.has(n.objectId)&&(n.geometry&&r.push({...wt(n,this._metadata.geometryType,!1,!1),displayId:n.displayId}),s.add(n.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:a,featureCache:n}=e,o=r.tile;if(e.done)return;for(const l of t.chunks()){if(s.has(l.chunkId))continue;s.add(l.chunkId);const f=l.queryInfo;if("tileId"in f){const g=new Ae(f.tileId);if(g.level!==o.level||g.world!==o.key.world)continue}l.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(a,e.tile.extent,e.tile.resolution)}const h=[],c=r.tile.transform,u=r.tile.key.level;for(const l of a.values()){let f=n.get(l.id);if(f)f.attributes=l.getAttributes();else{const g=l.getGeometry(this.spatialReference,c);f=new O(g,l.getAttributes(),null,l.id),g||(f.centroid=l.getGeometricCentroid(this.spatialReference,c)),f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${u}`),n.set(l.id,f)}h.push(f)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const d=C.fromOptimizedFeatures(h,this._metadata,c),_=d.getCursor(),p=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;_.next();)this._attributeStore.setAttributeData(_.getDisplayId(),_,p,this._sqlOptions);yield new Ve(e.subscription,d,[],e.done,{})}},Ut=class{constructor(i){this._statistics=i}get statistics(){return this._statistics}};const Lt=Math.PI/180;let $e=class st{static create(e){return new st(e.map(t=>$r(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new st(this._statistics.map(e=>e.clone()))}};function $r(i){switch(i.statisticType){case"min":return new Qr(i);case"max":return new Xr(i);case"avg":return new Hr(i);case"avg_angle":return new Jr(i);case"sum":case"count":return new Yr(i);case"mode":return new Zr(i)}}let N=class{constructor(i){this.field=i}insert(i,e){if(!this.field.computed)return;const t=this.field.computed.read(i,e);Js(t)||this._insertValue(t)}},Qr=class fs extends N{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new fs(this.field);return e.value=this.value,e}},Xr=class gs extends N{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new gs(this.field);return e.value=this.value,e}},Yr=class ms extends N{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new ms(this.field);return e.value=this.value,e}},Hr=class ys extends N{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new ys(this.field);return e._total=this._total,e._count=this._count,e}},Jr=class bs extends N{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*Lt),this._y=this._y+Math.sin(e*Lt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new bs(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},Zr=class Is extends N{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new Is(this.field);return e._frequencies=new Map(this._frequencies),e}},Qe=class ye extends Ut{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new ye(e,t,$e.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ye.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ye(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:hr(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:cr(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,a=new k([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const n=new k;return W(n,a,!1,!1,"esriGeometryPolygon",t)}return a}getCentroid(e){const t=new k([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new k;return W(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,a=new k([],[s,r]);if(t!=null){const n=new k;return W(n,a,!1,!1,"esriGeometryPoint",t)}return a}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},zt=class{constructor(i){this._options=i}insert(i,e){const t=i.getCursor(),{arcadeContextInfo:s,scale:r}=this._options,a=Oe(r,s);for(;t.next();)this._insertFeature(t,a,this._options.sqlOptions,e)}_insertFeature(i,e,t,s){const{featureFilter:r}=this._options;if(r!==null&&!r.check(i,t))return;let a=0,n=0;if(i.geometryType==="esriGeometryPoint")a=i.readXWorldSpace(),n=i.readYWorldSpace();else{if(s){const h=i.readCentroidForDisplay();if(h==null)return;const[c,u]=h.coords;if(c<0||c>F||u<0||u>F)return}const o=i.readCentroidWorldSpace();if(o==null)return;a=o.coords[0],n=o.coords[1]}this._insert(i,a,n,e)}};const Kr=96;function Xe(i,e){return Ms(i)*Ts*Kr/e}let ei=class extends zt{constructor(i){super(i),this._cells=new Map,this._pixelsPerMapUnit=Xe(i.spatialReference,i.scale)}put(i){for(const e of this._cells.values()){const t=i.get(e.id);t?t.merge(e):i.set(e.id,e.clone())}}putBounded(i,e,t){const s=[e.xmin,e.ymin,e.xmax,e.ymax],[r,a,n,o]=s,h=Math.floor(r*this._pixelsPerMapUnit/this._options.cellSize),c=Math.floor(a*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize),d=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let _=c;_<=d;_++)for(let p=h;p<=u;p++){const l=`${p}.${_}`,f=this._cells.get(l);if(!f)continue;const g=i.get(f.id);g?f&&!i.has(f.id)&&g.merge(f):i.set(f.id,f.clone())}}_insert(i,e,t,s){const r=e*this._pixelsPerMapUnit,a=t*this._pixelsPerMapUnit,n=Math.floor(r/this._options.cellSize),o=Math.floor(a/this._options.cellSize);this._getCellOrCreate(n,o).insert(i,s,e,t)}_getCellOrCreate(i,e){const t=Qe.createId(i,e);let s=this._cells.get(t);if(!s){const r=1*this._options.cellSize/this._pixelsPerMapUnit;s=Qe.create(i,e,this._options.fields,r),this._cells.set(t,s)}return s}},ti=class{constructor(i,e){this.inner=i,this.displayId=e}};const Gt=128;let si=class extends le{constructor(i){super(i),this.didSend=!1,this.done=!1}},ri=class{constructor(i,e,t,s,r){this._level=i,this._scale=e,this._indexOptions=t,this._clusterRadius=s,this._store=r,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const i of this._clusters.values())this._store.releaseDisplayIdForObjectId(i.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const i of this._clusters.values()){const e=i.inner.getCentroid(null);yield new O(e,i.inner.getAttributes(),null,i.inner.id,i.displayId)}}clusters(){return this._clusters.values()}updateChunks(i,e){let t=!1;for(const n of i){const o=n.queryInfo;"tileId"in o&&new Ae(o.tileId).level!==this._level||this._handledChunks.has(n.normalizedChunkId)||(this._handledChunks.add(n.normalizedChunkId),t=!0,n.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const s={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},r=Xe(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:n}of e){const o=n.tile.bounds,h=Math.floor(o[0]*r/a),c=Math.floor(o[1]*r/a),u=Math.ceil(o[2]*r/a),d=Math.ceil(o[3]*r/a);s.xMin=Math.min(s.xMin,h),s.yMin=Math.min(s.yMin,c),s.xMax=Math.max(s.xMax,u),s.yMax=Math.max(s.yMax,d)}return this._lastCellBounds!=null&&s.xMin===this._lastCellBounds.xMin&&s.yMin===this._lastCellBounds.yMin&&s.yMin===this._lastCellBounds.yMin&&s.yMax===this._lastCellBounds.yMax||(t=!0,this._lastCellBounds=s),t&&this._clusterCells(s),t}async updateStatistics(i){let e=!1;for(const t of this._clusters.values())t.inner.count>1&&(e=this._updateAggregateStatistics(this._statistics,t.inner)||e);if(e){const t=Array.from(this._statistics.entries()).map(([s,r])=>({fieldName:s,minValue:r.minValue,maxValue:r.maxValue}));await i.container.updateStatistics(this._level,t)}}createAggregateFeatures(i,e){const t=i.subscription,s=[],r=t.tile.transform;for(const a of this._clusters.values()){let n=a.inner.getCentroidX(r);const o=a.inner.getCentroidY(r),h=t.tile.lod,c=h.wrap?h.worldSize[0]:null,u=a.inner.count===1?a.inner.firstObjectId:a.inner.id,d=a.displayId;if(c!=null)if(c===1){const _=new k([],[n,o]),p=new O(_,a.inner.getAttributes(),null,u,d);p.geometry.coords[0]-=F,s.push(p);const l=new k([],[n,o]),f=new O(l,a.inner.getAttributes(),null,u,d);f.geometry.coords[0]+=F,s.push(f)}else n>F+F/2?n-=c*F:n<-256&&(n+=c*F);if(n<F+Gt&&n>=-128&&o<F+Gt&&o>=-128){const _=new k([],[n,o]),p=new O(_,a.inner.getAttributes(),null,u,d);s.push(p)}}return C.fromOptimizedFeatures(s,e,t.tile.transform)}_clusterCells(i){let e=Array.from(this._cells.values());e=e.sort((n,o)=>o.count-n.count);const t=[];for(const n of this._clusters.values())t.push(n.inner.id);this._clusters.clear();const s=this._clusterRadius*(1/Xe(this._indexOptions.spatialReference,this._scale)),r=1+this._clusterRadius/this._indexOptions.cellSize,a=new Set;for(const n of e){if(a.has(n.id)||n.gridX<i.xMin||n.gridX>i.xMax||n.gridY<i.yMin||n.gridY>i.yMax)continue;const o=this._store.createDisplayIdForObjectId(n.id),h=new ti(n.clone(),o);a.add(n.id),this._clusters.set(n.id,h);const c=n.centroidXWorld,u=n.centroidYWorld;for(let d=n.gridY-r;d<=n.gridY+r;d++)for(let _=n.gridX-r;_<=n.gridX+r;_++){if(d===n.gridY&&_===n.gridX)continue;const p=this._cells.get(Qe.createId(_,d));if(!p||a.has(p.id))continue;const l=Math.abs(p.centroidXWorld-c),f=Math.abs(p.centroidYWorld-u);l<s&&f<s&&(h.inner.merge(p),a.add(p.id))}}for(const n of t)this._store.releaseDisplayIdForObjectId(n)}_updateAggregateStatistics(i,e){let t=!1;for(const s of e.statistics.values()){if(s.field.type==="esriFieldTypeString")continue;const r=s.value,a=s.field,n=i.get(a.name);if(n){const{minValue:o,maxValue:h}=n,c=Math.min(n.minValue,r),u=Math.max(n.maxValue,r);o===c&&h===u||(n.minValue=c,n.maxValue=u,t=!0)}else i.set(a.name,{minValue:r,maxValue:r}),t=!0}return t}},ii=class vs extends Ne{static async create(e,t,s,r,a,n,o){const h=new ie({spatialReference:s}),c={type:"grid",fields:await Promise.all(t.fields.map(async u=>Be.create(h,u))),spatialReference:s,featureFilter:t.featureFilter?await qe.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:n,sqlOptions:o};return new vs(e,t.clusterRadius,c,t.fields,r,a,o)}constructor(e,t,s,r,a,n,o){super(a,n,s.spatialReference,s.fields,o),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=ae.createFeature({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fieldsIndex:new oe([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new si(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(o=>[t(o),o])),a=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of n.clusters()){const h=r.get(o.inner.id);if(h==null){if(o.inner.count===1){const{firstObjectId:c}=o.inner,u=c?r.get(c):null;if(u!=null){const d=s(o.displayId,u,c);a.push(d),r.delete(c)}}}else{const c=s(o.displayId,h,o.inner.id);a.push(c),r.delete(o.inner.id)}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],a=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of n.aggregatesWorldSpace())if(t.has(o.displayId)&&!s.has(o.displayId)){const h=wt(o,this._metadata.geometryType,!1,!1);if(s.add(o.displayId),h.attributes.cluster_count===1){r.push({...h,displayId:o.displayId});continue}a.push({...h,displayId:o.displayId})}return{features:r,aggregates:a,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(n=>n.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter(n=>n.done).map(n=>n.subscription.tile.key),a=new Set(r);for(const n of this._sendStates.values())this._source.updateTracking.updating&&(r.some(o=>o.containsChild(n.subscription.tile.key))||n.subscription.tile.key.getChildKeys().every(o=>a.has(o)))||n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new ri(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const a=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;a.next();)this._attributeStore.setAttributeData(a.getDisplayId(),a,n,this._sqlOptions);yield new B(e.subscription,r,!0,e.done,{})}},ai=class ws{static fromReader(e){const t=[],s=e.copy(),r=ke();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const a=Xs(9,n=>(s.setIndex(n),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return a.load(t),new ws(a)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const ni=64;function oi(i,e,t,s){const r=[i.xmin,i.ymin,i.xmax,i.ymax],a=Os.fromExtent(As(r,s)),n=ne(a,s,R.WGS84,{densificationStep:e*ni});if(!n)return null;const o=St(new k,n,!1,!1),h=o.coords.filter((g,I)=>!(I%2)),c=o.coords.filter((g,I)=>I%2),u=Math.min(...h),d=Math.min(...c),_=Math.max(...h),p=Math.max(...c),l=Ye(u,d,t,R.WGS84),f=Ye(_,p,t,R.WGS84);return l&&f?{bounds:r,geohashBounds:{xLL:l[0],yLL:l[1],xTR:f[0],yTR:f[1]},level:t}:null}function Ye(i,e,t,s){if(s.isWebMercator){const n=nt(i/ot.radius),o=n-360*Math.floor((n+180)/360),h=[0,0];return Bt(h,0,nt(Math.PI/2-2*Math.atan(Math.exp(-e/ot.radius))),o,t),h}const r=ne({x:i,y:e},s,R.WGS84);if(!r)return null;const a=[0,0];return Bt(a,0,r.y,r.x,t),a}function hi(i,e){let t=-90,s=90,r=-180,a=180;for(let n=0;n<e;n++){const o=Math.ceil((n+1)/2),h=Math.floor((n+1)/2),c=1-n%2,u=30-(3*o+2*h),d=30-(2*o+3*h),_=3*c+2*(1-c),p=2*c+3*(1-c),l=3*c+7*(1-c)<<d,f=(7*c+3*(1-c)<<u&i.geohashX)>>u,g=(l&i.geohashY)>>d;for(let I=_-1;I>=0;I--){const m=(r+a)/2,v=f&1<<I?1:0;r=(1-v)*r+v*m,a=(1-v)*m+v*a}for(let I=p-1;I>=0;I--){const m=(t+s)/2,v=g&1<<I?1:0;t=(1-v)*t+v*m,s=(1-v)*m+v*s}}return[r,t,a,s]}function Bt(i,e,t,s,r){r%2&&(r+=1);let a=0,n=0,o=-90,h=90,c=-180,u=180;for(let d=0;d<r/2;d++){for(let _=0;_<5;_++){const p=(c+u)/2,l=s>p?1:0;a|=l<<29-(_+5*d),c=(1-l)*c+l*p,u=(1-l)*p+l*u}for(let _=0;_<5;_++){const p=(o+h)/2,l=t>p?1:0;n|=l<<29-(_+5*d),o=(1-l)*o+l*p,h=(1-l)*p+l*h}}i[2*e]=a,i[2*e+1]=n}let Nt=class rt extends Ut{static create(e,t,s,r){const a=$e.create(e),n=new Array(32);for(let o=0;o<n.length;o++)n[o]=null;return new rt(a,t,s,r,n)}constructor(e,t,s,r,a){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=a,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new rt(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,a,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=a,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,a,n,o]=s,h=ne({rings:[[[r,a],[r,o],[n,o],[n,a],[r,a]]]},R.WGS84,e),c=St(new k,h,!1,!1);return t!=null?W(new k,c,!1,!1,"esriGeometryPolygon",t,!1,!1):c}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,a,n,o]=s,h=ne({x:(r+n)/2,y:(a+o)/2},R.WGS84,e),c=ur(new k,h);return t!=null?W(new k,c,!1,!1,"esriGeometryPoint",t,!1,!1):c}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,a,n){if(r>=s)return this;const o=1-r%2,h=3*o+2*(1-o),c=2*o+3*(1-o),u=30-a-h,d=30-n-c,_=((e&7*o+3*(1-o)<<u)>>u)+((t&3*o+7*(1-o)<<d)>>d)*(8*o+4*(1-o)),p=this.children[_];return p==null?null:p.find(e,t,s,r+1,a+h,n+c)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),a=30-(2*t+3*s),n=this.xNode<<r,o=this.yNode<<a;return hi({geohashX:n,geohashY:o},this.depth)}};class ci{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=Nt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,a,n,o){let h=this._root,c=0,u=0,d=0;for(;h!==null;){if(h.insert(e,t,s,r,a,o),c>=n)return;const _=Math.ceil((c+1)/2),p=Math.floor((c+1)/2),l=1-c%2,f=30-(3*_+2*p),g=30-(2*_+3*p),I=(r&7*l+3*(1-l)<<f)>>f,m=(a&3*l+7*(1-l)<<g)>>g,v=I+m*(8*l+4*(1-l));u=u<<3*l+2*(1-l)|I,d=d<<2*l+3*(1-l)|m,h.children[v]==null&&(h.children[v]=Nt.create(this._fields,u,d,c+1),this._depth=Math.max(this._depth,c+1),this._size+=1),c+=1,h=h.children[v]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let a=this._root;for(;a!==null;){const n=a.depth,o=a.xNode,h=a.yNode;if(n>=r){t.push(a),a=a.next;continue}const c=Math.ceil((n+1)/2),u=Math.floor((n+1)/2),d=1-n%2,_=30-(3*c+2*u),p=30-(2*c+3*u),l=~((1<<_)-1),f=~((1<<p)-1),g=(s.xLL&l)>>_,I=(s.yLL&f)>>p,m=(s.xTR&l)>>_,v=(s.yTR&f)>>p,x=o<<3*d+2*(1-d),b=h<<2*d+3*(1-d),w=x+8*d+4*(1-d),S=b+4*d+8*(1-d),M=Math.max(x,g),E=Math.max(b,I),q=Math.min(w,m),U=Math.min(S,v);let J=null,ve=null;for(let we=E;we<=U;we++)for(let Se=M;Se<=q;Se++){const Fs=Se-x+(we-b)*(8*d+4*(1-d)),$=a.children[Fs];$&&(J||(J=$,J.next=a.next),ve&&(ve.next=$),ve=$,$.next=a.next)}a=J||a.next}return t}}let ui=class extends zt{constructor(i){super(i),this._tree=new ci(this._options.fields)}put(i){throw new Error("Geohash tree does not support put")}putBounded(i,e,t){const{geohashLevel:s,spatialReference:r}=this._options,a=oi(e,t,s,r);a!=null&&this._tree.putBins(i,a)}_insert(i,e,t,s){const{geohashLevel:r,spatialReference:a}=this._options,n=Ye(e,t,r,a);n&&this._tree.insert(i,e,t,n[0],n[1],r,s)}},Vt=class be extends Re{static from(e,t){if(e instanceof this){const s=new Set(t),r=e._indices.filter(a=>s.has(a));return new be(e._reader,r)}return new be(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTransform=null,this._reader=e,this._indices=t}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null)return void(this._displayTransform=Ee(e));const s=Ee(t),r=Ee(e),[a,n]=s.scale,[o,h]=s.translate,[c,u]=r.scale,[d,_]=r.translate,p=a/c,l=n/u,f=(o-d)/c,g=(h-_)/u;this._displayTransform={originPosition:"lowerLeft",scale:[1/p,1/l,1,1],translate:[-f/p,-g/l,0,0]}}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new be(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._processorAttributes=this._processorAttributes,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}get usedMemory(){return Pe+this._reader.usedMemory}setProcessorAttributes(e){this._processorAttributes=Object.assign(this._processorAttributes??{},e)}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._displayTransform?Ct(this._displayTransform,this._reader.readXForDisplay()):this._reader.readXForDisplay()}readYForDisplay(){return this._displayTransform?Mt(this._displayTransform,this._reader.readYForDisplay()):this._reader.readYForDisplay()}readGeometryForDisplay(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform):this._reader.readGeometryForDisplay()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;this._displayTransform?(e.coords[0]=Ct(this._displayTransform,t),e.coords[1]=Mt(this._displayTransform,s)):(e.coords[0]=t,e.coords[1]=s)}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)??this._processorAttributes?.[e]}readAttributes(){return{...this._processorAttributes??{},...this._reader.readAttributes()}}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return xt(e,this.geometryType,!1,!1)}readGeometryArea(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform)?.area()??0:this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},X=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}registerOverrides(i){this.reader.registerOverrides(i),this.invalidate()}queryFeaturesInBounds(i){const e=this._getSpatialIndex().search(i);return Vt.from(this.reader,e)}getAggregateIndex(i){const e=JSON.stringify(i);if(e!==this._aggregateIndexHash){switch(this._aggregateIndexHash=e,i.type){case"grid":this._aggregateIndex=new ei(i);break;case"geohash":this._aggregateIndex=new ui(i)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=ai.fromReader(this.reader)),this._spatialIndex}};const $t=1e4,di=1e3;let Qt=class{constructor(){this.modified=[],this.removed=[]}modify(i){this.modified.push(i)}remove(i){this.removed.push(i)}get isEmpty(){return this.modified.length===0&&this.removed.length===0}},Xt=class Ss extends X{constructor(e){super(),this._reader=e,this.chunkId="override",this.normalizedChunkId="override"}static fromFeatures(e,t){const s=C.fromOptimizedFeatures(e,t);return new Ss(s)}get reader(){return this._reader}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}getTileReader(e){if(!this._reader.getSize())return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},_e=class{constructor(i,e){this.inner=i,this.isWeak=e,this.lastWeak=null}get isStrong(){return!this.isWeak}},li=class{constructor(){this._overrides=new Map,this._update=new Qt,this._lastCleanup=0}hasOverride(i){return this._overrides.has(i)}onChunkInsert(i){if(this._overrides.size){const e=i.reader.getCursor();for(;e.next();){const t=e.getObjectId(),s=this._overrides.get(t);if(s?.lastWeak&&(s.lastWeak=null),s?.isWeak){const r=e.readOptimizedFeatureWorldSpace();s.inner=r,this._update.modify(r),this.invalidate()}}}i.registerOverrides(this)}apply(i,e){const{updateWeak:t,removeWeak:s,update:r,remove:a,release:n}=i.commands;this.invalidate();for(const o of t){const h=new _e(o,!0),c=this._overrides.get(o.objectId);c?.isStrong?c.lastWeak=h:(this._overrides.set(o.objectId,h),this._update.modify(o))}for(const o of r){const h=new _e(o,!1),c=this._overrides.get(o.objectId);h.lastWeak=c?.isWeak?c:c?.lastWeak??null,this._overrides.set(o.objectId,h),this._update.modify(o)}for(const o of s){const h=new _e(null,!0),c=this._overrides.get(o);c?.isStrong?c.lastWeak=h:(this._overrides.set(o,h),this._update.remove(o))}for(const o of a){const h=new _e(null,!1),c=this._overrides.get(o);h.lastWeak=c?.isWeak?c:c?.lastWeak??null,this._overrides.set(o,h),this._update.remove(o)}if(n.length){const o=new Set;for(const h of n){const c=this._overrides.get(h);c?.lastWeak?(this._overrides.set(h,c.lastWeak),c.lastWeak.inner==null?this._update.remove(h):this._update.modify(c.lastWeak.inner)):c&&!c.isWeak&&(this._overrides.delete(h),o.add(h))}e.forEachUnsafe(h=>{const c=h.getObjectId();o.has(c)&&(this._update.modify(h.readOptimizedFeatureWorldSpace()),o.delete(c))});for(const h of o.values())this._update.remove(h)}}clearWeakOverrides(){for(const[i,e]of this._overrides.entries())e.isWeak&&this._overrides.delete(i);this.invalidate()}cleanup(i){if(this._overrides.size<$t)return;const e=performance.now();if(e-this._lastCleanup<di)return;this._lastCleanup=e;const t=this._getWeakDeletions();if(!(t.size<$t)){for(const s of i){const r=s.reader.withoutOverrides().getCursor();for(;r.next();){const a=r.getObjectId();t.delete(a)}}for(const s of t)this._overrides.delete(s);t.size&&this.invalidate()}}takeOverrideUpdate(){const i=this._update;return i.isEmpty?null:(this._update=new Qt,i)}asChunk(i){if(!this._chunk){const e=[];for(const t of this._overrides.values())t.inner!=null&&e.push(t.inner);this._chunk=Xt.fromFeatures(e,i)}return this._chunk}invalidate(){this._chunk=null}putWeakObjectIdsFromGlobalIds(i,e,t){for(const[s,r]of this._overrides.entries())if(r.isWeak&&r.inner!=null){const a=r.inner.attributes[t];a&&e.has(a)&&!i.has(a)&&i.set(a,s)}else if(r.lastWeak!=null&&r.lastWeak.inner!=null){const a=r.lastWeak.inner.attributes[t];a&&e.has(a)&&!i.has(a)&&i.set(a,s)}}_getWeakDeletions(){const i=new Set;for(const[e,t]of this._overrides.entries())t.isWeak&&t.inner==null&&i.add(e);return i}},_i=class extends le{},pi=class extends Wt{constructor(i,e,t,s){super(i,e,s),this._arcadeContextInfo=t,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const i of this._source.chunks())this._cleanupChunkIds(i)}invalidateAttributeData(i){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=i,this._evalOptions!=null&&(this._evalOptions=Oe(this._evalOptions.$view.scale,i))}onSubscribe(i){super.onSubscribe(i),this._evalOptions=i.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(i){return new _i(i)}get aggregateQueryEngine(){return null}displayMap(i,e,t){const s=new Map(i.map(a=>[e(a),a])),r=[];for(const a of this._source.chunks()){const n=a.reader.getCursor();for(;n.next();){const o=n.getObjectId(),h=n.getDisplayId(),c=s.get(o);if(c!=null){const u=t(h,c,o);r.push(u),s.delete(o)}}}return r}getDisplayFeatures(i){const e=new Set(i),t=new Set,s=[];for(const r of this._source.chunks()){const a=r.reader.getCursor();for(;a.next();){const n=a.getObjectId(),o=a.getDisplayId();e.has(o)&&!t.has(n)&&(s.push({...a.readLegacyFeatureWorldSpace(),displayId:o}),t.add(n))}}return{features:s,aggregates:[],tracks:[]}}async*applyOverrideUpdate(i){const e=[];for(const a of i.modified){const n=this._attributeStore.createDisplayIdForObjectId(a.objectId);a.displayId=n,e.push(n)}const t=C.fromOptimizedFeatures(i.modified,this._source.metadata).getCursor();for(;t.next();)this._attributeStore.setAttributeData(t.getDisplayId(),t,this._evalOptions,this._sqlOptions);const s=[];for(const a of i.removed){const n=this._attributeStore.getDisplayIdForObjectId(a);n!=null&&s.push(n)}y("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:i,modifiedDisplayIds:e,removedDisplayIds:s});const r=Xt.fromFeatures(i.modified,this._source.metadata);this.handledChunks.add(r.chunkId),this.handledChunksForAttributeData.add(r.chunkId),this.handledChunksForIdCreation.add(r.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(r.chunkId),yield new Ve(a.subscription,null,e,!1,r.queryInfo);for(const a of this._sendStates.values()){const n=r.getTileReader(a.subscription.tile);yield new Ve(a.subscription,n,s,!1,r.queryInfo)}for(const a of i.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const i of this._sendStates.values())yield*this._update(i)}}removeChunks(i){for(const e of i)this.handledChunks.delete(e.chunkId),this.handledChunksForAttributeData.delete(e.chunkId),this._cleanupChunkIds(e)}afterUpdateChunks(){for(const i of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(i);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(i){if(this.handledChunksForIdCreation.has(i.chunkId)){const e=i.reader.getCursor();for(;e.next();){const t=e.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(t):this._attributeStore.releaseDisplayIdForObjectId(t)}this.handledChunksForIdCreation.delete(i.chunkId)}}async _updateAttributeData(){for(const i of this._source.chunks()){const{chunkId:e,reader:t}=i;if(!this.handledChunksForIdCreation.has(e)){this.handledChunksForIdCreation.add(e);const s=t.getCursor();for(;s.next();){const r=this._attributeStore.createDisplayIdForObjectId(s.getObjectId());s.setDisplayId(r)}}}for(const i of this._source.chunks())if(!this.handledChunksForAttributeData.has(i.chunkId)){this.handledChunksForAttributeData.add(i.chunkId);const e=i.reader.getCursor();for(;e.next();){const t=e.getDisplayId();this._attributeStore.setAttributeData(t,e,this._evalOptions,this._sqlOptions)}}}*_update(i){const{subscription:e,handledChunks:t}=i;for(const s of this._source.chunks()){const{chunkId:r}=s;if(t.has(r))continue;t.add(r);const a=s.getTileReader(e.tile);a&&(yield new B(i.subscription,a,!1,s.end,s.queryInfo))}}},pe;const fi=()=>Z.getLogger("esri.views.2d.layers.features.processor.TrackStrategy"),gi=32;class mi{constructor(e,t,s,r,a){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=a}}class Yt{static getOid(e){return sr+e}constructor(e,t,s,r,a,n,o,h){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=a,this._spatialReference=n,this._metadata=o,this._isStream=h,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new k}get _trackLineAttributes(){const e={...this._latestObservationFeature?.attributes??{},aggregateId:this.objectId,[z]:G.TrackLine};if(this._statistics!=null)for(const t of this._statistics.values())e[t.field.name]=t.value;return e}get _startTimeField(){return this._metadata.timeInfo?.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}stageObservation(e,t){this._nextObservationRecords.push(new mi(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),this._startTimeField!=null?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t){const s=new Set(this._nextObservationRecords.map(c=>c.objectId)),r=this._observationRecords.filter(c=>!s.has(c.objectId)).map(c=>c.objectId);let a,n;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||this._startTimeField==null||this._nextObservationRecords.sort((c,u)=>{const d=c.time,_=u.time;return d!=null&&_!=null?d-_:0}),this._schema.timeField){case"startTimeField":a=this._metadata.timeInfo?.startTimeField;break;case"endTimeField":a=this._metadata.timeInfo?.endTimeField;break;case"timeReceived":a=this._isStream?De:null}n=this._isStream?t?.end??Date.now():t?.end??-1/0;const o=e.map(c=>c.reader.getCursor());let h;for(let c=this._nextObservationRecords.length-1;c>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);c--){const u=this._nextObservationRecords[c],d=o[u.chunkIndex];K(d),d.setIndex(u.featureIndex);const _=a!=null?d.readAttributeAsTimestamp(a):null;(_!=null?n-_:0)>=this._maxDisplayDuration||(this._commitObservation(u,d),h??=u)}if(h!=null){const{chunkIndex:c,featureIndex:u,objectId:d,displayId:_}=h,p=o[c];K(p),p.setIndex(u);const l=new O(p.readGeometryWorldSpace(),{...p.readAttributes(),[z]:G.LatestObservation},null,d,_);this._latestObservationFeature=l}else this._latestObservationFeature=null;return this._trackLineGeometry=bi(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=vi(this._trackLineGeometry),this._nextObservationRecords=[],r}updateStatistics(e,t){this._statistics=$e.create(this._fields);const s=e.map(r=>r.reader.getCursor());for(const{chunkIndex:r,featureIndex:a}of this._observationRecords){const n=s[r];K(n),n.setIndex(a),this._statistics.insert(n,t)}}overlapsTile(e){for(const t of this._bounds)if(Rs(t,e.bounds,gi))return!0;return!1}getLatestObservationFeatureForTile(e){if(this._latestObservationFeature==null)return null;const{objectId:t,displayId:s,geometry:r,attributes:a}=this._latestObservationFeature,n=new k;W(n,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const o=ht(1/0,1/0,-1/0,-1/0);return Ii(n,(h,c)=>ut(o,[h,c])),Ds(o,ht(0,0,F,F))?new O(n,a,null,t,s):null}getTrackLineFeatureForTile(e){const t=new k;return W(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new O(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new O(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:xt(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s?.coords[0],a=s?.coords[1];s==null&&(r=t.readXWorldSpace(),a=t.readYWorldSpace()),r!=null&&a!=null&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,a]))}}class yi extends le{constructor(e){super(e),this.done=!1}}class it extends Ne{static async create(e,t,s,r,a,n){const o=new ie({spatialReference:t}),h=await Promise.all(e.fields.map(async u=>Be.create(o,u))),c=e.featureFilter?await qe.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return t.isWrappable||pr()||await Promise.all([import("./apiConverter-DB1DxvLw.js"),import("./jsonConverter-C4JGLtD-.js"),fr()]).then(([u,d,_])=>{pe={fromGeometryToGXGeometry:d.fromGeometryToGXGeometry,toGeometry:d.toGeometry,fromSpatialReference:u.fromSpatialReference}}),new it(e,s,r,t,h,c,a,n)}constructor(e,t,s,r,a,n,o,h){super(t,s,r,a,h),this._schema=e,this._featureFilter=n,this._arcadeContextInfo=o,this._tracks=new Map,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:z,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=ae.createFeature({geometryType:"esriGeometryPolyline",objectIdField:"aggregateId",fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:z,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}createState(e){return new yi(e)}async*applyOverrideUpdate(e){fi().error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),a=[];for(const n of this._tracks.values()){const o=r.get(n.objectId);if(o==null)for(const h of n.observations()){const c=r.get(h.objectId);if(c!=null){const u=s(h.displayId,c,h.objectId);a.push(u),r.delete(h.objectId)}}else{const h=s(n.displayId,o,n.objectId);a.push(h),r.delete(n.objectId)}}return a}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],a=this._source.chunks().map(n=>n.reader.getCursor());for(const n of this._tracks.values()){t.has(n.displayId)&&r.push(n.getTrackLineDisplayFeature());for(const{displayId:o,chunkIndex:h,featureIndex:c}of n.observations())if(t.has(o)){const u=a[h];u.setIndex(c),s.push({displayId:o,attributes:{},...u.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),s=>s.objectId);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._metadata.timeInfo?.trackIdField;if(t==null)return;const s=new Set;for(let r=0;r<e.length;r++){const a=e[r].reader.getCursor();for(;a.next();){const n=a.readAttribute(t),o=a.getObjectId();if(n!=null&&o!=null&&(this._featureFilter===null||this._featureFilter.check(a,this._sqlOptions))){if(a.getDisplayId()||a.setDisplayId(this._attributeStore.createDisplayIdForObjectId(o)),!this._tracks.has(n)){const h=Yt.getOid(n),c=this._attributeStore.createDisplayIdForObjectId(h),u=new Yt(this._schema,n,h,c,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(n,u)}this._tracks.get(n).stageObservation(r,a),s.add(n)}}}for(const r of this._tracks.values())if(s.has(r.trackId)){const a=r.commitObservations(e,this._featureFilter?.timeExtent);for(const n of a)this._attributeStore.releaseDisplayIdForObjectId(n);r.updateStatistics(e,Oe(1,this._arcadeContextInfo))}else this._removeTrack(r);for(const r of this._sendStates.values())yield*this._update(r)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId);for(const{objectId:t}of e.observations())this._attributeStore.releaseDisplayIdForObjectId(t)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const u of this._tracks.values())if(u.length>0){if(this._schema.showLatestObservation){const d=u.getLatestObservationFeatureForTile(e);d!=null&&t.push(d)}this._schema.showTrackLine&&u.overlapsTile(e.subscription.tile)&&s.push(u.getTrackLineFeatureForTile(e))}const r=C.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),a=C.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let n=[];if(this._schema.showPreviousObservations){const u=this._source.chunks().map(()=>[]);for(const d of this._tracks.values())for(const{chunkIndex:_,featureIndex:p}of d.previousObservations())u[_].push(p);n=this._source.chunks().map((d,_)=>{const p=d.getTileReader(e.subscription.tile);if(p==null)return null;const l=Vt.from(p,u[_]);return l.setProcessorAttributes({[z]:G.PreviousObservation}),l.geometryType!=="esriGeometryPoint"&&l.getInTransform()!=null||l.setTransformForDisplay(e.subscription.tile.transform),l}).filter(qs)}this.events.emit("changed");const o=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),h=a.getCursor();for(;h.next();)this._attributeStore.setAttributeData(h.getDisplayId(),h,o,this._sqlOptions);for(const u of n){const d=u.getCursor();for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,o,this._sqlOptions)}const c=r.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,o,this._sqlOptions);yield new B(e.subscription,a,!0,!1,{});for(const u of n)yield new B(e.subscription,u,!1,!1,{});yield new B(e.subscription,r,!1,e.done,{})}}function bi(i,e,t){if(e.length<2)return Q(i,[e],!1,!1);if(t.isWrappable){let a=!1;for(let n=1;n<e.length;n++){const o=e[n][0],h=yr(o,e[n-1][0],t);o!==h&&(e[n][0]=h,a=!0)}if(a){const n=br({paths:[e],spatialReference:t});if(n!=null)return Q(i,n.paths,!1,!1)}return Q(i,[e],!1,!1)}const s=pe.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[e]}),r=pe.fromSpatialReference(t);if(r!=null){const a=gr(s,1e6,r,mr.geodesic);if(a!=null){const n=pe.toGeometry(a,r);if(n!=null&&"paths"in n)return Q(i,n.paths,!1,!1)}}return Q(i,[e],!1,!1)}function Ii(i,e){const{coords:t,lengths:s}=i;if(!s.length)return void e(t[0],t[1]);let r=0;for(let a=0;a<s.length;a++){const n=s[a];let o=0,h=0;for(let c=0;c<n;c++)o+=t[2*(c+r)],h+=t[2*(c+r)+1],e(o,h);r+=n}}function vi(i){const{lengths:e,coords:t}=i,s=2;if(!e.length)return[ct()];const r=[];let a=0;for(let n=0;n<e.length;n++){const o=e[n],h=ct();r.push(h);for(let c=0;c<o;c++){const u=t[s*(c+a)],d=t[s*(c+a)+1];ut(h,[u,d])}a+=o}return r}class wi{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new ar,this._proxy=new Zs({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new Ks({isLocal:!1,update:s=>Me(this._connection.container.updateAttributeView(s))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,s=>s,(s,r,a)=>{t[a]=s}),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}async update(e,t,s,r,a){const n=e.processor,o=ee(this._schema?.storage,n.storage),h=ee(this._schema?.mesh.properties,n.mesh.properties),c=ee(this._schema?.mesh.factory,n.mesh.factory),u=ee(this._schema?.mesh.strategy,n.mesh.strategy),d=Si(this._schema?.expressionProperties,n.expressionProperties),_=d.some(b=>this._attributeStore.hasArcadeDependency(b)),p=d.some(b=>this._factory?.hasArcadeDependency(b)??!1),l=d.some(b=>this._strategy?.hasArcadeDependency(b))||this._strategy?.isAggregate&&_,f=p||l,g=h||c||u;if(!(o||g||p||_||l)&&!r)return!1;y("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:mt(this._schema,n),schema:n}),this._schema=n;const I=R.fromJSON(this._source.service.outSpatialReference),m=new ie({fields:this._source.metadata.fieldsIndex,spatialReference:I}),v={currentUser:n.mesh.properties.currentUser};if((o||g||_)&&(await this._attributeStore.update(n.storage,m,this._source.metadata,t),this._strategy?.invalidateAttributeData(Y(n))),!r&&!g&&!f)return!1;(u||h||f)&&await this._updateStrategy(n.mesh.strategy,I,a,Y(n),v),this._updateSortKey(m,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const x=new Gr(m,this._proxy,s,this._registry);return(c||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await zr.create(x,n.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},a)=>({objectId:a,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let a=s.get(r.id);a==null&&(a=new Br({concurrency:16,process:o=>this._process(o)}),s.set(r.id,a));const n=a.push(r).catch(o=>Fe(o));t.push(n)}try{await Promise.all(t)}catch{}y("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r,a){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new pi(this._source,this._attributeStore,r,a);break;case"binning":this._strategy=await Vr.create(e,t,this._source,this._attributeStore,r,a);break;case"cluster":this._strategy=await ii.create(this._connection,e,t,this._source,this._attributeStore,r,a);break;case"track":this._strategy=await it.create(e,t,this._source,this._attributeStore,r,a)}for(const n of s)this._strategy.onSubscribe(n)}async _updateSortKey(e,t){if(this._sortInfo=dt(this._sortInfo?.computed),t!=null){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}async _process(e){const t=e.subscription;if(y("esri-2d-update-debug")){const c=t.tile;console.debug(`Version[${this._version}] Tile[${c.key.id}, end=${e.end}] Processor._process`)}const s={currentUser:this._schema?.mesh.properties.currentUser};await this._fetchResources(e,s),j(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(Y(this._schema)),s),a=t.tile.tileInfoView.getLODInfoAt(t.tile.key),{message:n,transferList:o}=r.serialize(a),h={objectIdMap:null,inner:e.createMessage(n,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){h.objectIdMap={};const c=e.reader?.getCursor();if(c)for(;c.next();)h.objectIdMap[c.getDisplayId()]=c.getObjectId()}if(j(t.signal),await this._connection.container.onMessage(h,{signal:t.signal,transferList:o}),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")){const c=t.tile;console.debug(`Version[${this._version}] Tile[${c.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(Y(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){const r=e.subscription.tile,a=e.reader?.getCursor(),n=a?.getSize()??0,o=r.tileInfoView.tileInfo.isWrappable,h=r.tileInfoView.tileInfo.spatialReference.isWGS84,c=new qr(r.key,this._strategy.enablePixelBuffering,o,h,n);if(!a)return c;const u=r.createArcadeEvaluationOptions(Y(this._schema));for(;a.next();){const d=this._getSortKeyValue(a,t);c.entityStart(a.getDisplayId(),d),this._factory.write(c,this._proxy,a,u,s,r.level),c.entityEnd()}return c}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:a}=this._sortInfo,n=a?this._factory.getSortKey(e,t):s?.read(e,t);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}}function Si(i,e){const t=[];return i?.timeExtent?.start===e.timeExtent?.start&&i?.timeExtent?.end===e.timeExtent?.end||t.push("timeProperties"),t}function Y(i){const{timeZone:e}=i?.mesh.properties??{},{timeExtent:t}=i?.expressionProperties??{};return{timeZone:e,timeExtent:t}}let xi=class xs{static from(e){let t=0,s=0,r=0;return e.forEach(a=>{const n=a._readGeometry();n&&(s+=n.isPoint?1:n.lengths.reduce((o,h)=>o+h,0),r+=n.isPoint?1:n.lengths.length,t+=1)}),new xs(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const He=4;function ki(i,e,t){const s=i.orderByFields??t.objectIdField+" ASC",r=i.source,a={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&Ps(r.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:R.fromJSON(i.outSpatialReference),orderByFields:i.type==="memory"?[]:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:n,historicMoment:o,timeExtent:h}=e.mutable.dataFilter;return{...a,gdbVersion:n,historicMoment:o?new Date(o):null,timeExtent:h?Sr.fromJSON(h):null,outFields:e.mutable.availableFields}}return a}let Fi=class ks{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[],a=t.mutable.displayFilterInfo;return new ks(ki(e,t,s),a,r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,a,n,o){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=s,this._subtypeField=r,this._customParameters=a,this._geometryType=n,this._queryMetadata=o}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?He:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,s){if(!t.getSize())return null;const r=e.clone();if(this._queryParams.outFields[0]==="*"){if((r.outFields??[])[0]==="*")return null;r.outFields=this._queryParams.outFields}else{const n=new Set(this._queryParams.outFields),o=[];for(const h of n)t.hasField(h)||o.push(h);if(o.length===0)return null;r.outFields=o}r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0;const a={inner:r,customParameters:this._customParameters};if(y("esri-tiles-debug")&&s!=null){const n=s.chunkId.toString().replaceAll("/",".");a.customParameters=a.customParameters?{...a.customParameters,chunkId:n}:{chunkId:n}}return a}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new At({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const a=this._queryScaleRanges.filter(n=>(!n.minScale||n.minScale>=e.maxScale)&&(!n.maxScale||n.maxScale<=e.minScale)).map(n=>n.subtypeCode);if(a.length){const n=`${this._subtypeField} IN (${a})`;r.where=lt(r.where,n)}}if(this._displayFilter&&(r.where=lt(r.where,wr(this._displayFilter,e.minScale,e.maxScale))),r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*y("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=y("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=He),y("esri-tiles-debug")){const a=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:a}:{tileId:a}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:He,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}};const Ci=2500;let fe=class extends pt{constructor(i){super(),this._connection=i,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([Ce(()=>this._strategy?.connectionStatus??"disconnected",e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})},{initial:!0}),Ce(()=>this._strategy?.errorString||null,e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(i){this._strategy==null&&this._resetUpdateInfo(performance.now());const e="event-handles";this.removeHandles(e),i!=null&&(this.addHandles([i.events.on("data-received",t=>this._onFeature(t)),i.events.on("message-received",t=>this._onWebSocketMessage(t)),i.events.on("features-updated",t=>this._onUpdate(t)),i.events.on("tick",()=>this._onTick())],e),this._queuedCommands.forEach(t=>t(i)),this._queuedCommands=[]),this._strategy=i}updateCustomParameters(i){i!=null&&this._callOrEnqueue(e=>e.updateCustomParameters(i))}sendMessageToSocket(i){this._callOrEnqueue(e=>e.sendMessageToSocket(i))}sendMessageToClient(i){this._callOrEnqueue(e=>e.sendMessageToClient(i))}enableEvent(i,e){e?this._enabledEventTypes.add(i):this._enabledEventTypes.delete(i)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(i){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:i})}_onFeature(i){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:i.attributes,centroid:i.centroid,geometry:i.geometry}})}_onUpdate(i){this._updateInfo.client+=i}_onTick(){const i=performance.now(),e=i-this._lastTime;if(e>Ci){const t=Math.round(this._updateInfo.client/(e/1e3)),s=Math.round(this._updateInfo.websocket/(e/1e3));this._resetUpdateInfo(i),this._layerView.emitEvent({name:"update-rate",event:{client:t,websocket:s}})}}_resetUpdateInfo(i){this._lastTime=i,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(i){this._strategy!=null?i(this._strategy):this._queuedCommands.push(i)}};L([te()],fe.prototype,"_strategy",void 0),fe=L([_t("esri.views.2d.layers.features.sources.StreamMessenger")],fe);let H=class extends X{constructor(i,e,t,s){super(),this._reader=i,this._queryJSON=e,this._page=t,this._end=s,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(i){const e=this.queryFeaturesInBounds(i.bounds);return e.setTransformForDisplay(i.transform),e}};async function Mi(i,e,t,s={}){const r=(await Promise.allSettled(t.map(a=>Ti(i,e,a,s)))).filter(a=>a.status==="rejected").map(a=>a.reason);if(r.length)throw new A("featurelayer-query","Encountered errors when downloading data",{errors:r})}async function Ti(i,e,t,s={}){const r=`${i.chunkPrefix??""}${t.num}`,a=await i.fetch(t.query,s,{chunkId:r}),n=new H(a,t.query.inner.toJSON(),t.num,!1);n.chunkId=n.normalizedChunkId=r,j(s),e.insert(n)}const Je=8e3;let Oi=class{constructor(i,e,t,s){this.store=i,this.queryInfo=e,this._options=t,this._fetch=s,this._nextBatch=new Set,this._fetchFeatures=Es(async()=>{if(this._nextBatch.size===0||this._options.signal?.aborted)return;const r=Array.from(this._nextBatch);this._nextBatch.clear(),r.length>Je&&Z.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new A("highlight-too-many-features",`highlight is limited to ${Je} features on large layers configured with a display filter to avoid performance issues`));const a=this.queryInfo.objectIdsQueryPageSize,n=Math.ceil(Je/a),o=Math.min(n,Math.ceil(r.length/a)),h=Array.from({length:o},(c,u)=>{const d=u*a,_=Math.min(d+a,r.length);return{num:u,query:this.queryInfo.createObjectIdsQuery(r.slice(d,_))}});try{await Mi({chunkPrefix:"cache."+xr(),fetch:this._fetch},this.store,h,this._options)}catch{}})}prepareCacheUpdate(i,e){if(e)for(const t of e)this._nextBatch.delete(t);for(const t of i)this._nextBatch.add(t)}applyCacheUpdate(){return this._nextBatch.size===0||this._options.signal?.aborted?null:this._fetchFeatures().catch(()=>{})}},Ze=class{constructor(i){this._store=i,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(i){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(i){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(i){throw new Error("InternalError: LoadStrategy does not support loading blobs")}prepareCacheUpdate(i,e){}applyCacheUpdate(){return null}};const Ke=268435455;let Ai=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function qi(i,e,t=!1){const s=i.asUnsafe(),r=s.pos(),a=new Ai;let n=0,o=0;const h=1,c=2,u=4,d=3;let _=null,p=null,l=null,f=!1;const g=[];for(;s.next();)switch(s.tag()){case 1:_=s.getString();break;case 3:p=s.getString();break;case 12:l=s.processMessage(Cr);break;case 9:if(a.exceededTransferLimit=s.getBool(),a.exceededTransferLimit){a.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),a.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let m=0;m<a.centroid.length;m++)a.centroid[m]=Ke}break;case 13:{const m=s.processMessage(Fr);m.index=n++,g.push(m);break}case 15:{const m=s.getLength(),v=s.pos()+m;if(!a.exceededTransferLimit){const b=a.offsets.geometry,w=a.centroid;b.push(0),w.push(Ke),w.push(Ke)}!f&&a.exceededTransferLimit&&(f=!0,a.offsets.attributes=t?new Float64Array(8e3*n):new Uint32Array(8e3*n));let x=o*n;for(;s.pos()<v&&s.next();)switch(s.tag()){case h:{f?a.offsets.attributes[x++]=s.pos():a.offsets.attributes.push(s.pos());const b=s.getLength();s.skipLen(b);break}case c:if(e){const b=s.getLength(),w=s.pos()+b;for(;s.pos()<w&&s.next();)switch(s.tag()){case d:{s.getUInt32();const S=s.getSInt64(),M=s.getSInt64();a.centroid[2*o]=S,a.centroid[2*o+1]=M;break}default:s.skip()}}else{a.offsets.geometry[o]=s.pos();const b=s.getLength();a.vertexCount+=b,s.skipLen(b)}break;case u:{const b=s.getLength(),w=s.pos()+b;for(;s.pos()<w&&s.next();)switch(s.tag()){case d:{s.getUInt32();const S=s.getSInt64(),M=s.getSInt64();a.centroid[2*o]=S,a.centroid[2*o+1]=M;break}default:s.skip()}break}default:s.skip()}o++,a.hasFeatures=!0;break}default:s.skip()}const I=_||p;if(!I)throw new A("FeatureSet has no objectId or globalId field name");return a.fields=new oe(g),a.featureCount=o,a.fieldCount=n,a.objectIdFieldIndex=a.fields.get(I)?.index,a.transform=l,a.displayIds=new Uint32Array(a.featureCount),a.groupIds=new Uint16Array(a.featureCount),s.move(r),a}const Ri=!0,Ht=268435455,Jt=128,Zt=128e3,T={small:{delta:new Int32Array(Jt),decoded:new Int32Array(Jt)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(Zt),decoded:new Int32Array(Zt)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function Kt(i,e){return e?i<=T.small64.delta.length?T.small64:(i<=T.large64.delta.length||(T.large64.delta=new Float64Array(Math.round(1.25*i)),T.large64.decoded=new Float64Array(Math.round(1.25*i))),T.large64):i<=T.small.delta.length?T.small:(i<=T.large.delta.length||(T.large.delta=new Int32Array(Math.round(1.25*i)),T.large.decoded=new Int32Array(Math.round(1.25*i))),T.large)}function Di(i){try{const e=new kr(new Uint8Array(i),new DataView(i));for(;e.next();){if(e.tag()===2)return Pi(e.getMessage());e.skip()}}catch(e){const t=new A("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});Z.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Pi(i){for(;i.next();){if(i.tag()===1)return i.getMessage();i.skip()}return null}function Ei(i){const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 1:return i.getString();case 2:return i.getFloat();case 3:return i.getDouble();case 4:return i.getSInt32();case 5:return i.getUInt32();case 6:return i.getInt64();case 7:return i.getUInt64();case 8:return i.getSInt64();case 9:return i.getBool();default:return i.skip(),null}return null}function ji(i,e,t,s,r,a){return .5*Math.abs(i*s+t*a+r*e-i*a-t*e-r*s)}function et(i,e,t,s,r){return i?e*r-s*t===0&&e*s+t*r>0:!1}class Ie extends Re{static fromBuffer(e,t,s=!1){const r=t.geometryType,a=Di(e),n=qi(a,r==="esriGeometryPoint",s);return new Ie(a,n,t,s)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new Ie(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){return Pe+(this._cache.geometry?.usedMemory??0)}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Ht?null:new k([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Ht)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new k([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),a=this._header.fields.isDateField(s.name);return t?r==null?r:a?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new er(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const a=Ei(r);return t.set(this._featureIndex,a),a}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Kt(t.coords.length,this._use64Bit).decoded,r=t.clone(s),a=r.coords;let n=0;for(const o of r.lengths){for(let h=1;h<o;h++){const c=2*(n+h),u=2*(n+h-1);a[c]+=a[u],a[c+1]+=a[u+1]}n+=o}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,a=[],n=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const o=t.getUInt32(),h=t.pos()+o;for(;t.pos()<h;)n.push(t.getUInt32());break}case 3:{const o=t.getUInt32(),h=t.pos()+o;for(a.push(t.getSInt64()),a.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<h;)a.push(t.getSInt64()),a.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new k(n,a)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,a=[],n=[];let o=0,h=0,c=null,u=0;const d=this.geometryType==="esriGeometryPolygon",_=this.geometryType==="esriGeometryPolyline",p=d||_;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const l=t.getUInt32(),f=t.pos()+l;for(;t.pos()<f;){const g=t.getUInt32();a.push(g),o+=g}c=Kt(2*o,this._use64Bit).delta;break}case 3:{t.getUInt32();const l=2+(this.hasZ?1:0)+(this.hasM?1:0);K(c);for(const f of a)if(h+l*f>c.length)for(let g=0;g<f;g++)t.getSInt64(),t.getSInt64(),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();else if(d&&Ri){const g=this.getAreaSimplificationThreshold(f,this._header.vertexCount);let I=2,m=1;const v=!1;let x=t.getSInt64(),b=t.getSInt64();c[h++]=x,c[h++]=b,this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();let w=t.getSInt64(),S=t.getSInt64();for(this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();I<f;){let M=t.getSInt64(),E=t.getSInt64();this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();const q=x+w,U=b+S;ji(x,b,q,U,q+M,U+E)>=g?(u+=-.5*(q-x)*(U+b),m>1&&et(p,c[h-2],c[h-1],w,S)?(c[h-2]+=w,c[h-1]+=S):(c[h++]=w,c[h++]=S,m++),x=q,b=U):(M+=w,E+=S),w=M,S=E,I++}m<3||v?h-=2*m:(u+=-.5*(x+w-x)*(b+S+b),et(p,c[h-2],c[h-1],w,S)?(c[h-2]+=w,c[h-1]+=S,n.push(m)):(c[h++]=w,c[h++]=S,n.push(++m)))}else{let g=0,I=t.getSInt64(),m=t.getSInt64();this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),c[h++]=I,c[h++]=m,g+=1;for(let v=1;v<f;v++){const x=t.getSInt64(),b=t.getSInt64(),w=I+x,S=m+b;u+=-.5*(w-I)*(S+m),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),v>2&&et(p,c[h-2],c[h-1],x,b)?(c[h-2]+=x,c[h-1]+=b):(c[h++]=x,c[h++]=b,g+=1),I=w,m=S}n.push(g)}break}default:t.skip()}return this._cache.area=u,n.length?new k(n,c):c!=null?this._createDeltaQuantizedExtrudedGeometry(c[0],c[1]):null}}class ge{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function Wi(i,e){switch(i.type){case"memory":return new Li(i,e);case"ogc":return new Bi(i,e);case"feature-service":return i.queryMetadata.supportsFormatPBF&&y("featurelayer-pbf")?new zi(i,e):new Gi(i,e)}}async function Ui(i){const e=new $s;return await e.open(i,{}),e}let Li=class extends ge{constructor(i,e){super(i,e),this._portsOpen=Ui(i.source).then(t=>this.client=t)}destroy(){this.client.close(),this.client=null}async executeQuery(i,e){await this._portsOpen;const t=await this.client.invoke("queryFeatures",i.toJSON(),e);return C.fromFeatureSet(t,this._metadata)}},zi=class extends ge{async executeQuery(i,e){const{data:t}=await Ir(this.service.source,i,e),s=!i.quantizationParameters;return Ie.fromBuffer(t,this._metadata,s)}};class Gi extends ge{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const n=e.clone(),o=Tt(n.quantizationParameters);n.quantizationParameters=null;const{data:h}=await Ot(s,n,this._metadata.spatialReference,t),c=dr(h,this._metadata.objectIdField);return kt(o,c),C.fromOptimizedFeatureSet(c,this._metadata)}const{data:a}=await Ot(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(a.features=a.features?.filter(n=>{if(n.geometry!=null){const o=n.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),C.fromFeatureSet(a,this._metadata)}}let Bi=class extends ge{async executeQuery(i,e){if(i.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const s=i.clone(),r=Tt(s.quantizationParameters);s.quantizationParameters=null;const a=await qt(this.service.source,i,e);return kt(r,a),C.fromOptimizedFeatureSet(a,this._metadata)}const t=await qt(this.service.source,i,e);return C.fromOptimizedFeatureSet(t,this._metadata)}},es=class extends Ze{constructor(i,e,t,s,r){super(t),this._serviceInfo=i,this._queryInfo=e,this._metadata=s,this._connection=r,this._queue=new vt({concurrency:32,process:async a=>{const n={signal:a.options?.signal,query:a.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(a.query.inner,n)}}),this._adapter=Wi(i,s)}unsafeSetQueryHistoricMoment(i){this._queryInfo.updateHistoricMoment(i)}async updateFields(i){this._queryInfo.updateFields(i);const e=Array.from(this._store.chunks()).map(async s=>{const r=At.fromJSON(s.queryInfo.queryJSON);if(r)try{return await this._tryUpdateFields(s.reader,r,{chunkId:s.chunkId}),null}catch(a){return a}}),t=(await Promise.all(e)).filter(s=>s);if(t.length)throw new A("featurelayer-query","Encountered errors when downloading fields",{errors:t})}async queryByObjectId(i){if(i.length===0)return C.empty(this._metadata);const e=this._queryInfo.createQuery({objectIds:i});return this._fetch(e,null,null)}async _fetch(i,e,t){const s=await this._enqueue(i,e);return await this._tryUpdateFields(s,i.inner,t),s}async _tryUpdateFields(i,e,t){const s=this._queryInfo.createPatchFieldsQuery(e,i,t);if(!s)return;const r=await this._enqueue(s,this._options);r.getSize()===i.getSize()?i.joinAttributes(r):Z.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new A("featurelayer-query",`Failed to join features. Expected a count of ${i.getSize()} features, but got ${r.getSize()}`,{query:s.inner.toJSON(),debugInfo:t}))}async _enqueue(i,e){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:i,options:e}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},ts=class extends es{constructor(i,e,t,s,r){super(i,e,t,s,r),this._chunksById=new Map,this._featureCache=new Oi(t,e,this._options,this._fetch.bind(this))}prepareCacheUpdate(i,e){return this._featureCache.prepareCacheUpdate(i,e)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(i){this._removeChunks(i.tile)}_addChunk(i){const e=i.tile.id;this._chunksById.has(e)||this._chunksById.set(e,[]);const t=i.size();(t||i.first||i.end)&&(y("esri-2d-update-debug")&&console.debug(`Chunk[${i.chunkId}] ATileLoadStrategy.addChunk [count=${t}]`),this._chunksById.get(e).push(i),this._store.insert(i))}_removeChunks(i){const e=this._chunksById.get(i.key.id)??[];for(const t of e)y("esri-2d-update-debug")&&console.debug(`Tile[${i.key.id}] Chunk[${t.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(t);this._chunksById.delete(i.key.id)}};class ss extends X{constructor(e,t,s,r,a,n){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=a,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}let Ni=class{constructor(i,e){this.subscription=i,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=se([re(i.signal,()=>this._controller.abort()),re(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(i){return this._tileIdToResult.get(i)}set(i,e){this._tileIdToResult.set(i,e)}get options(){return{signal:this._controller.signal}}},Vi=class extends ts{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const i of this._loadStates.values())i.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(i){this._loadStates.has(i.key.id)||this._loadStates.set(i.key.id,new Ni(i,this._options));const e=this._loadStates.get(i.key.id);let t;try{for await(const r of this._fetchChunkInfos(e,i.tile,0)){const{queryJSON:a,reader:n,sourceTile:o,sourceTileDepth:h,tile:c}=r,u=new ss(n,a,c,o,h,!1);j(e.options),this._addChunk(u)}}catch(r){t=r}const s=new ss(C.empty(this._metadata),null,i.tile,null,-1,!0);if(this._addChunk(s),t)throw t}unload(i){super.unload(i),this._loadStates.get(i.key.id)?.destroy(),this._loadStates.delete(i.key.id)}async*_fetchChunkInfos(i,e,t){let s=i.get(e.id);const r=!!s;if(s||(s=await this._fetchChunkInfo(i,e,t),i.set(e.id,s)),s.reader.exceededTransferLimit&&t<y("featurelayer-query-max-depth"))for(const a of e.createChildTiles())yield*this._fetchChunkInfos(i,a,t+1);else r||(yield s)}async _fetchChunkInfo(i,e,t){const s=i.subscription.tile.getQuantizationParameters(),r=this._queryInfo.createTileQuery(e,{returnExceededLimitFeatures:!1,quantizationParameters:s});return{reader:await this._fetch(r,i.options,{chunkId:e.id}),queryJSON:r.inner.toJSON(),tile:i.subscription.tile,sourceTile:e,sourceTileDepth:t}}},rs=class extends X{constructor(i,e,t,s,r){super(),this._reader=i,this._queryJSON=e,this._tile=t,this._page=s,this._end=r,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(i){return this._tile.key.id===i.key.id?this.reader:null}};class $i{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=se([re(e.signal,()=>this._controller.abort()),re(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class Qi extends ts{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=js(this._loadStates,e.key.id,()=>new $i(e,this._options));let s;try{await this._fetchPages(t)}catch(a){s=a}const r=new rs(C.empty(this._metadata),null,e.tile,-1,!0);if(Ws(t.options)||this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let t=0,s=e.pageStart,r=1;for(;t<20&&!e.done;){const a=[];for(let o=0;o<r;o++)a.push(this._fetchChunk(e,s++));const n=await Promise.all(a);for(const o of n)(o.size()!==0||o.first)&&(e.add(o.page,!o.reader.exceededTransferLimit),j(e.options),this._addChunk(o));t++,r=Math.min(r+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),a=await this._fetch(r,e.options,{chunkId:`${s.id}-${t}`});return new rs(a,r.inner.toJSON(),s,t,!1)}}class at extends Re{constructor(e,t,s,r,a,n=new Uint32Array(r.size())){super(e),this._fields=t,this._geometryInfo=s,this._inner=r,this._chunkId=a,this._displayIds=n,this._index=-1,this.usedMemory=Pe,this._size=this._inner.size(),e.objectIdField!=null&&(this._objectIdFieldIndex=this._fields.get(e.objectIdField)?.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return this._geometryInfo.geometryType}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getBoundsXMin(){return this._inner.boundsXMin(this._index)}getBoundsYMin(){return this._inner.boundsYMin(this._index)}getBoundsXMax(){return this._inner.boundsXMax(this._index)}getBoundsYMax(){return this._inner.boundsYMax(this._index)}setBoundsXMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsXMax(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMax(e){throw new Error("InternalError: Setting bounds is unsupported")}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){return this.readGeometryForDisplay()?.area()??0}copy(){const e=new at(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}readGeometryForDisplayTransformed(e){const[t,s]=e.translate,[r,a]=e.scale,n=this._inner.readGeometryTransformed(this._index,t,s,r,a);return n?new k(n.readLengthsUnsafe(),n.readCoordsUnsafe()):null}_readGeometry(e){const t=this._inner.readCoords(this._index),s=this._inner.readLengths(this._index);return t&&s?new k(s,t):null}_readX(){return this._readGeometry()?.coords[0]}_readY(){return this._readGeometry()?.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const s=this.fields.get(e);if(!s)return;if(s.index==null)return this.getObjectId();const r=this._inner.readAttribute(this._index,s.index);if(r==null)return r;const a=this.fields.isDateField(s.name);return t?r==null?r:a?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._fields.fields)t.index!=null?this._inner.hasField(t.index)&&(e[t.name]=this._readAttribute(t.name,!1)):e.__OBJECTID=this.getObjectId();return e}}let Xi=class extends Ze{constructor(i,e,t,s){super(s),this._service=i,this._metadata=e,this._schema=t,this._chunkId=0,this._files=[],this._availableFields=new Set(t.mutable.availableFields);const{geometryInfo:r}=this._service;if(r.type==="location")this._availableFields.add(r.latitudeFieldName),this._availableFields.add(r.longitudeFieldName);else if(r.multiscale!=null&&r.multiscale.levels.length>=1){const a=r.multiscale.levels[0];this._availableFields.add(a.column)}else this._availableFields.add(r.primaryFieldName)}destroy(){for(const i of this._files)i.destroy()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(i){await this._promise;const e=new Set(i),t=Us(e,this._availableFields);this._availableFields=Ls(t,this._availableFields),t.size&&await Promise.all(this._files.map(s=>{const r=Array.from(t).map(a=>s.metadata.getFieldIndex(a));return s.inner.updateChunks(new Uint16Array(r))}))}async load(i){return this._promise==null&&(this._promise=this._download().then(()=>{this._loadHigherResGeometry()})),this._promise}unload(i){}async addParquetFile(i){this._insert(i)}async _loadHigherResGeometry(){const{geometryInfo:i}=this._service;if(i.type==="geometry"){if(!(i.multiscale!=null&&i.multiscale.levels.length>=1))return;await this.updateFields([i.primaryFieldName])}const e=Array.from(this._store.chunks());this._store.clear();for(const t of e)this._store.insert(t);this._store.refresh()}async _insert(i){const e=await Mr.create(i,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:t}=this._service;j(this._options);const{fields:s,timeZoneByFieldName:r}=this._service.metadata.fieldsIndex,a=s.map(h=>({...h,index:e.metadata.getFieldIndex(h.name)})),n=oe.fromJSON({fields:a,timeZoneByFieldName:r}),o=new Uint16Array(Array.from(this._availableFields.values()).map(h=>n.get(h)?.index).filter(h=>h!=null));await e.inner.readChunksWithCallback(o,h=>{const c=this._chunkId++,u=new at(this._metadata,n,t,h,c),d=new H(u,null,c,!1);this._store.insert(d)}),this._files.push(e)}async _download(){try{await Promise.all(this._service.source.urls.map(e=>this._insert(e)));const i=new H(C.empty(this._metadata),null,-1,!0);this._store.insert(i)}catch(i){throw console.error(i),i}}};class Yi extends es{constructor(e,t,s,r,a,n){super(e,t,s,a,n),this._random=new ft(1e3),this._featureCount=r}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(o,h)=>h).sort((o,h)=>this._random.getInt()-this._random.getInt()),r=await Promise.all(s.map(o=>this._downloadPage(o))),a=new H(C.empty(this._metadata),null,-1,!0);this._store.insert(a);const n=r.filter(o=>o);if(n.length)throw new A("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options,{chunkId:e.toString()}),r=new H(s,t.inner.toJSON(),e,!1);return j(this._options),this._store.insert(r),null}catch(t){return t}}}const is=1e3;class Hi{constructor(e,t,s,r,a=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,this.objectIdField=t,this.purgeInterval=a,this._useGeneratedIds=this.objectIdField===rr}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){if(this._useGeneratedIds){const n=this._nextId();e.attributes[this.objectIdField]=n,e.objectId=n}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new Rt(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const n=this._purgeOptions?.maxObservations!=null?this._purgeOptions.maxObservations:is,o=zs(n,0,is);this._trackIdToObservations.set(s,new Rt(o))}const r=this._trackIdToObservations.get(s),a=r?.enqueue(t);a!=null&&(this._addOrUpdated.has(a)?this._addOrUpdated.delete(a):this._removed.push(a))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now(),r=s-this._lastPurge,a=Date.now();r>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const n=[];if(t!=null)for(const h of t){const c=this.store.removeById(h);c!=null&&n.push(c)}const o=[];if(e!=null){const h=new Set(t??[]);for(const c of e)h.has(c.objectId)||(c.attributes[It]=s,c.attributes[De]=a,this.store.add(c),o.push(c))}return!(!o.length&&!n?.length)&&(this.store.update(o,n),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const r=s.dequeue();this._removed.push(r),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const r=this._trackIdLessObservations.dequeue();r!=null&&this._removed.push(r)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(a=>{a.attributes[t]<r&&this._removed.push(a.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(r=>{r.attributes[It]<s&&this._removed.push(r.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let V=class extends pt{constructor(i){super(i)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};L([te()],V.prototype,"connection",void 0),L([te()],V.prototype,"connectionStatus",null),L([te()],V.prototype,"errorString",null),V=L([_t("esri.views.2d.layers.features.sources.StreamConnectionState")],V);let Ji=class{constructor(i,e){this._metadata=i,this._onUpdate=e,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return C.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(i){this._objectIdToFeature.set(i.objectId,i)}forEach(i){this._objectIdToFeature.forEach(i)}removeById(i){const e=this._objectIdToFeature.get(i);return e?(this._objectIdToFeature.delete(i),e):null}clear(){this._objectIdToFeature=new Map}update(i,e){this._onUpdate(i?.length??0)}};class Zi extends X{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}let Ki=class extends Ze{constructor(i,e,t,s,r){super(t),this._service=i,this._dataFilter=e,this._streamOptions=s,this._metadata=r,this._connectionState=new V,this._forceRefresh=!1,this.events=new xe;const{objectIdField:a,timeInfo:n}=this._metadata,{purgeOptions:o}=e;this._stagingStore=new Ji(this._metadata.weakCloneWithAdditionalFields([{name:De,alias:"timeReceived",type:"esriFieldTypeDate"}]),h=>this.events.emit("features-updated",h)),this._manager=new Hi(this._stagingStore,a,n,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const i=this._chunk!=null;this._manager.checkForUpdates()||!i||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new Zi(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(i){throw new Error("Updating available fields not supported for StreamLayer")}async load(i){}unload(i){}disconnect(){this._connection=dt(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:i,spatialReference:e}=this._metadata,{maxReconnectionAttempts:t,maxReconnectionInterval:s,geometryDefinition:r,definitionExpression:a,customParameters:n}=this._dataFilter;this._connection=Tr(this._service.source,e,this._streamOptions.outSR,i,a,r,t,s,n),this._handlesGroup=se([this._connection.on("data-received",o=>this._onFeature(o)),this._connection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(i){this._connection?.updateCustomParameters(i)}sendMessageToSocket(i){this._connection?.sendMessageToSocket(i)}sendMessageToClient(i){this._connection?.sendMessageToClient(i)}_onWebSocketMessage(i){if("type"in i)switch(i.type){case"delete":if(i.objectIds)for(const e of i.objectIds)this._manager.removeById(e);if(i.trackIds)for(const e of i.trackIds)this._manager.removeByTrackId(e);break;case"clear":this.clear()}this.events.emit("message-received",i)}_onFeature(i){try{this._manager.add(i),this.events.emit("data-received",i)}catch{}}};class ea{constructor(e){this._metadata=e,this._chunks=new Map,this._chunksToRemove=[],this._overrides=new li,this.events=new xe,this.featureAdapter=new tr}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._overrides.clearWeakOverrides()}*chunks(){this._overrides&&(yield this._overrides.asChunk(this._metadata)),yield*this._chunks.values()}insert(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrides.onChunkInsert(e),this._chunks.set(e.chunkId,e),this.events.emit("changed")}remove(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanup(){const e=this._chunksToRemove;return this._chunksToRemove=[],this._overrides.cleanup(this._chunks.values()),e}applyOverride(e){this._overrides.apply(e,this),this.events.emit("changed");for(const t of this._chunks.values())t.invalidate()}takeOverrideUpdate(){return this._overrides.takeOverrideUpdate()}refresh(){this.events.emit("refresh")}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const a=r.getObjectId();t.has(a)||(e(r.copy()),t.add(a))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const a=r.getObjectId();t.has(a)||(e(r),t.add(a))}}}mapObjectIdsFromGlobalIds(e,t){const s=new Map,r=new Set(e);return this._overrides.putWeakObjectIdsFromGlobalIds(s,r,t),this._forEachUnsafeIgnoreOverrides(a=>{const n=a.readAttribute(t);if(n&&r.has(n)&&!s.has(n)){const o=a.getObjectId();s.set(n,o)}}),s}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const a=r.queryFeaturesInBounds(e);for(;a.next();){const n=a.getObjectId();s.has(n)||(t(a.copy()),s.add(n))}}}forEachBounds(e,t){const s=ke();for(const r of e)r.getBounds(s)&&t(s)}_forEachUnsafeIgnoreOverrides(e){const t=new Set;for(const s of this._chunks.values()){const r=s.reader.withoutOverrides().getCursor();for(;r.next();){const a=r.getObjectId();t.has(a)||(e(r),t.add(a))}}}}class ta{constructor(e,t,s,r,a){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._connection=r,this._cachedObjectIds=a,this._updateTracking=new Or({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._metadata=ae.createFeature(e.metadata),this._store=new ea(this._metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),this.service.type==="memory"&&this.service.source.map(e=>e.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return xi.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new Ft({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}get hasDisplayFilter(){return!!this._schema&&"displayFilterInfo"in this._schema.mutable&&this._schema.mutable.displayFilterInfo!=null}chunks(){return Array.from(this._store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const a of e)this._cachedObjectIds.has(a)||(this._cachedObjectIds.add(a),s.add(a));for(const a of t)this._cachedObjectIds.delete(a),r.add(a);this.hasDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this._store.cleanup()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(s=>this._connection.onEvent({type:"error",tile:e.tile.id,error:s})),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(gt(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){const s=e.source,r=mt(this._schema?.mutable,s.mutable);if(!r)return!1;if(y("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,this._queryEngine?.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),yt(r,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if((s.type==="feature"||s.type==="parquet")&&yt(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(a){this._connection.onEvent({type:"updateFieldsError",error:a})}}return!1}return!!(Te(r,"dataFilter")||Te(r,"sourceRefreshVersion")||this._strategy.about.supportsDisplayFilter&&Te(r,"displayFilterInfo"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new fe(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(O.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(O.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(e.length===0)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(t==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this._store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await Gs(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const h=new Ki(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=h,h}if(this._schema.type==="parquet"){const h=this.service;return new Xi(h,this._metadata,this._schema,this._store)}const a=this.service,n=Fi.fromSchema(a,this._schema,this._metadata),o=await this._supportSnapshotMode(a,n);return o?new Yi(a,n,this._store,o.featureCount,this.metadata,this._connection):r?new Qi(a,n,this._store,this.metadata,this._connection):new Vi(a,n,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const a=Promise.all(r.map(n=>this._strategy.load(n).then(()=>this._connection.onEvent({type:"loaded",tile:n.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:n.tile.id,error:o}))));this._updateTracking.addPromise(a),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{s&&await a}catch(n){Fe(n)}this._connection.onEvent({type:"updateStrategyEnd"}),y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const a=e.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const o=(await vr(a,n.inner,{query:n.customParameters})).data.count,{min:h,max:c}=r.snapshotCountThresholds;return o<=h||r.supportsSnapshotMaxThreshold&&o<c?{featureCount:o}:null}}class sa{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class me{constructor(e){this.inner=e,this.resolver=Vs()}}class ra{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){y("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=Qs.fromJSON(e.tileInfoJSON);this._tileInfoView=new Ys(s),this._source=new ta(e.service,this._aggregateAdapter,this._subscriptions,t,this._cachedObjectIds),this._processor=new wi(t,this._source),this._handles=se([this._source.store.events.on("changed",()=>this._requestUpdate()),this._source.store.events.on("refresh",()=>this._requestRefresh()),Ce(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),gt(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){y("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Ar(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new A("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new A("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return y("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new me({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new me(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new me(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(e){if(this._updateOverridesRequest!=null)throw new A("InternalError - Already processing an edit");this._updateOverridesRequest=new me(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(Bs(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const a=typeof e.fieldOffset=="string",n=e.fieldOffset??0,o=Array.from(this._subscriptions.values()),h=this._source.chunks(),c=t**2,u=3/(Math.PI*c),d=2*t,_=Math.ceil(F/d);for(const p of o){const l=p.tile,f=new Float64Array(_*_);for(const g of h){const I=g.getTileReader(l);if(!I)continue;const m=I.getCursor();for(;m.next();){let v=1;if(e.field!=null){const q=m.readAttribute(e.field);v=a?-1*+q:+q+n}const x=m.readXForDisplay()/d,b=m.readYForDisplay()/d,w=Math.floor(x),S=Math.floor(b);if(w<0||S<0||w>=_||S>=_)continue;const M=((.5+w-x)*d)**2+((.5+S-b)*d)**2;if(M>c)continue;const E=v*(u*(1-M/c)**2);f[S+w*_]+=E}}for(let g=0;g<f.length;g++)s=Math.min(s,f[g]),r=Math.max(r,f[g])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((h,c)=>h+c.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const h=[];return this._source.store.forEachUnsafe(c=>h.push(c.readLegacyFeatureWorldSpace())),h}return null}const s=new Set,r=[],a=t.map(h=>h.reader.getCursor()),n=new ft,o=3*e.sampleSize;for(let h=0;h<o&&r.length<e.sampleSize;h++){const c=a[n.getIntRange(0,t.length-1)];if(c.getSize()===0)continue;const u=n.getIntRange(0,c.getSize()-1);c.setIndex(u);const d=c.getObjectId();s.has(d)||(s.add(d),r.push(c.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Ns(()=>this._scheduleNextUpdate()))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=Me(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;y("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new Hs(this._tileInfoView,t),r=new sa(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(y("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const a=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const n of a)this._doUpdateSubscriptions(n.inner),n.resolver.resolve()}if(this._updateHighlightRequests.length){const a=this._updateHighlightRequests,n=new Set,o=new Set;for(const h of a)for(const{objectId:c,highlightFlags:u}of h.inner.highlights)u?(n.add(c),o.delete(c)):(o.add(c),n.delete(c));this._source.prepareCacheUpdate(n,o)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(e!=null){const{schema:a,version:n}=e.inner;t=await this._doUpdateSchema(a,n)}this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,s!=null){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",s.inner),s.inner.historicMoment!=null&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const a=await this._source.normalizeOverrides(s.inner);this._source.applyOverride(a),y("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const a=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const n of a)this._processor.updateHighlight(n.inner),n.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const a=this._source.takeOverrideUpdate();if(a!=null&&this._subscriptions.size){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(a)}catch(n){y("esri-2d-update-debug")&&console.debug("InternalError",n)}await this._connection.container.unlockForOverrides(),y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&(y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(a){Fe(a)}s?.resolver.resolve(),e?.resolver.resolve(),e==null&&t&&await this._connection.container.trySwapRenderState(),this._updateRequested?(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},r=await this._source.update(e,t),a=Array.from(this._subscriptions.values()),n=this._processor.update(e,t,s,r,a);return y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),n}_doUpdateSubscriptions(e){y("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{ra as default};
