import{bQ as R,bR as A,bC as G,az as Y,a$ as j,M as D,bs as S,s as v}from"./main-BC8gbEPx.js";import{r as z}from"./TimeExtent-B3UXB00l.js";import{j as V}from"./quantizationUtils-BjEbvvIf.js";import{l as L,u as P}from"./heatmapUtils-BJuPxWtC.js";import{$ as _}from"./utils-BPm_PFjO.js";import{m as C,B as k}from"./utils-BT3Ioz8t.js";let c=null;const q=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function B(n,e,t){return n.x<0?n.x+=e:n.x>t&&(n.x-=e),n}function Q(n,e,t,s){const r=R(t)?A(t):null,a=r?Math.round((r.valid[1]-r.valid[0])/e.scale[0]):null;return n.map(o=>{const l=new G(o.geometry);return V(e,l,l),o.geometry=r?B(l,a??0,s[0]):l,o})}function Z(n,e=18,t,s,r){const a=new Float64Array(s*r);e=Math.round(S(e));let o=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const F=P(t);for(const{geometry:p,attributes:N}of n){const{x:b,y:f}=p,g=Math.max(0,b-e),M=Math.max(0,f-e),T=Math.min(r,f+e),w=Math.min(s,b+e),h=+F(N);for(let m=M;m<T;m++)for(let d=g;d<w;d++){const x=m*s+d,I=L(d-b,m-f,e)*h,u=a[x]+=I;o=Math.min(o,u),l=Math.max(l,u)}}return{min:o,max:l}}function E(n){const e=q.exec(n);if(!e)return null;const{hh:t,mm:s,ss:r,ms:a}=e.groups;return Number(t)*z.hours+Number(s)*z.minutes+Number(r)*z.seconds+Number(a||0)}async function H(n,e,t=!0){if(!e)return[];const{field:s,field2:r,field3:a,fieldDelimiter:o,fieldInfos:l,timeZone:F}=n,p=s&&l?.find(u=>u.name.toLowerCase()===s.toLowerCase()),N=!!p&&Y(p),b=!!p&&_(p),f=n.valueExpression,g=n.normalizationType,M=n.normalizationField,T=n.normalizationTotal,w=[],h=n.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await j();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new D(h.spatialReference)}):null}const x=n.fieldInfos,I=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return e.forEach(u=>{const y=u.attributes;let i;if(f){const $=I?{...u,layer:I}:u,O=c.createExecContext($,d,F);i=c.executeFunction(m,O)}else y&&(i=y[s],r?(i=`${C(i)}${o}${C(y[r])}`,a&&(i=`${i}${o}${C(y[a])}`)):typeof i=="string"&&t&&(b?i=i?new Date(i).getTime():null:N&&(i=i?E(i):null)));if(g&&typeof i=="number"&&isFinite(i)){const $=y&&parseFloat(y[M]);i=k(i,g,$,T)}w.push(i)}),w}function J(n){const e=n.field,t=n.normalizationType,s=n.normalizationField;let r;return t==="field"?r="(NOT "+s+" = 0)":t!=="log"&&t!=="natural-log"&&t!=="square-root"||(r=`(${e} > 0)`),r}function K(n,e,t){const s=e!=null?n+" >= "+e:"",r=t!=null?n+" <= "+t:"";let a="";return a=s&&r?U(s,r):s||r,a?"("+a+")":""}function U(n,e){let t=n??"";return e!=null&&e&&(t=t?"("+t+") AND ("+e+")":e),t}function W(n,e){if(n&&n.spatialRelationship!=="intersects")return new v(e,"Only 'intersects' spatialRelationship is supported for featureFilter")}function X(n,e,t){const s=ee({layer:n,fields:e});if(s.length)return new v(t,"Unknown fields: "+s.join(", ")+". You can only use fields defined in the layer schema");const r=ne({layer:n,fields:e});return r.length?new v(t,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function ee(n){const e=n.layer;return n.fields.filter(t=>!e.getField(t))}function ne(n){const e=n.layer;return n.fields.filter(t=>{const s=e.getFieldUsageInfo(t);return!s||!s.supportsStatistics})}export{J as F,E as I,W as M,K as N,X as T,U,H as b,Z as w,Q as x};
