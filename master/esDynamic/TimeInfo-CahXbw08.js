import{q as T,aX as o,G as a,x as t,bi as c,z as l,K as u,D as m,B as d}from"./main-BC8gbEPx.js";import{m as x,p}from"./TimeExtent-B3UXB00l.js";import{a as I}from"./timeZoneUtils-dvSLdrBh.js";const v=T()({esriTimeUnitsMilliseconds:"milliseconds",esriTimeUnitsSeconds:"seconds",esriTimeUnitsMinutes:"minutes",esriTimeUnitsHours:"hours",esriTimeUnitsDays:"days",esriTimeUnitsWeeks:"weeks",esriTimeUnitsMonths:"months",esriTimeUnitsYears:"years",esriTimeUnitsDecades:"decades",esriTimeUnitsCenturies:"centuries",esriTimeUnitsUnknown:void 0});let s=class extends o.ClonableMixin(a){constructor(n){super(n),this.unit="milliseconds",this.value=0}toMilliseconds(){return x(this.value,this.unit,"milliseconds")}};t([c(v,{nonNullable:!0})],s.prototype,"unit",void 0),t([l({type:Number,json:{write:!0},nonNullable:!0})],s.prototype,"value",void 0),s=t([u("esri.time.TimeInterval")],s);const r=s;function y(n,e){return r.fromJSON({value:n,unit:e})}let i=class extends o.ClonableMixin(a){constructor(n){super(n),this.cumulative=!1,this.endField=null,this.fullTimeExtent=null,this.hasLiveData=!1,this.interval=null,this.startField=null,this.timeZone=null,this.trackIdField=null,this.useTime=!0,this.stops=null}readFullTimeExtent(n,e){return e.timeExtent&&Array.isArray(e.timeExtent)&&e.timeExtent.length===2?p.fromArray(e.timeExtent):null}writeFullTimeExtent(n,e){n?.start!=null&&n.end!=null?e.timeExtent=n.toArray():e.timeExtent=null}readInterval(n,e){return e.timeInterval&&e.timeIntervalUnits?y(e.timeInterval,e.timeIntervalUnits):e.defaultTimeInterval&&e.defaultTimeIntervalUnits?y(e.defaultTimeInterval,e.defaultTimeIntervalUnits):null}writeInterval(n,e){e.timeInterval=n?.toJSON().value??null,e.timeIntervalUnits=n?.toJSON().unit??null}};t([l({type:Boolean,json:{name:"exportOptions.timeDataCumulative",write:!0}})],i.prototype,"cumulative",void 0),t([l({type:String,json:{name:"endTimeField",write:{enabled:!0,allowNull:!0}}})],i.prototype,"endField",void 0),t([l({type:p,json:{write:{enabled:!0,allowNull:!0}}})],i.prototype,"fullTimeExtent",void 0),t([m("fullTimeExtent",["timeExtent"])],i.prototype,"readFullTimeExtent",null),t([d("fullTimeExtent")],i.prototype,"writeFullTimeExtent",null),t([l({type:Boolean,json:{write:!0}})],i.prototype,"hasLiveData",void 0),t([l({type:r,json:{write:{enabled:!0,allowNull:!0}}})],i.prototype,"interval",void 0),t([m("interval",["timeInterval","timeIntervalUnits","defaultTimeInterval","defaultTimeIntervalUnits"])],i.prototype,"readInterval",null),t([d("interval")],i.prototype,"writeInterval",null),t([l({type:String,json:{name:"startTimeField",write:{enabled:!0,allowNull:!0}}})],i.prototype,"startField",void 0),t([l(I("timeReference",!0))],i.prototype,"timeZone",void 0),t([l({type:String,json:{write:{enabled:!0,allowNull:!0}}})],i.prototype,"trackIdField",void 0),t([l({type:Boolean,json:{name:"exportOptions.useTime",write:!0}})],i.prototype,"useTime",void 0),t([l({type:[Date],json:{read:!1}})],i.prototype,"stops",void 0),i=t([u("esri.layers.support.TimeInfo")],i);const h=i;export{h as d,v as e,r as l};
